-- MySQL dump 10.13  Distrib 5.5.46, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: storyteller
-- ------------------------------------------------------
-- Server version	5.5.46-0ubuntu0.14.04.2

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `andromda_core_jar_file`
--

DROP TABLE IF EXISTS `andromda_core_jar_file`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `andromda_core_jar_file` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `andromda_core_jar_file`
--

LOCK TABLES `andromda_core_jar_file` WRITE;
/*!40000 ALTER TABLE `andromda_core_jar_file` DISABLE KEYS */;
INSERT INTO `andromda_core_jar_file` VALUES (1),(2);
/*!40000 ALTER TABLE `andromda_core_jar_file` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `attr`
--

DROP TABLE IF EXISTS `attr`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attr` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `CLASSTYPE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `JAPANESE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `NOUN_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `ATTR_NOUN_FKC` (`NOUN_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=327 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attr`
--

LOCK TABLES `attr` WRITE;
/*!40000 ALTER TABLE `attr` DISABLE KEYS */;
INSERT INTO `attr` VALUES (1,'contentType','String','',1),(2,'id','String','',1),(3,'content','String','',1),(4,'width','int','',1),(5,'height','int','',1),(6,'x','int','',1),(7,'y','int','',1),(8,'contentType','String','',2),(9,'id','String','',2),(10,'content','String','',2),(11,'width','int','',2),(12,'height','int','',2),(13,'x','int','',2),(14,'y','int','',2),(15,'x','int','',3),(16,'y','int','',3),(17,'width','int','',3),(18,'height','int','',3),(19,'id','Integer','',3),(20,'id','Integer','',4),(21,'link','noun','',4),(22,'negative','boolean','',4),(23,'master','boolean','',1),(24,'likelihood','float','',10),(25,'linkUseCount','int','',10),(26,'linkUseCancelationCount','int','',10),(27,'id','Integer','',11),(28,'nodes','Collection','',11),(29,'linkUses','Collection','',11),(30,'id','Integer','',12),(31,'nodes','Collection','',12),(32,'id','Integer','',7),(33,'done','boolean','',7),(34,'triedAtLeastOnce','boolean','',7),(35,'oneshot','boolean','',7),(36,'scaleWith','String','',7),(37,'cf','boolean','',7),(38,'timeIncrease','int','',7),(39,'moneyIncrease','int','',7),(40,'moneyIncreaseAsSideEffect','int','',7),(41,'sideEffectPossibility','int','',7),(42,'timeNeeded','int','',7),(43,'moneyNeeded','int','',7),(44,'outsourcability','int','',7),(45,'totalNeeded','float','',7),(46,'simpleRoi','double','',7),(47,'totalIncrease','int','',7),(48,'breakdown','boolean','',7),(49,'essentialisable','boolean','',7),(50,'brokenDown','boolean','',7),(51,'possibility','int','',7),(52,'id','Integer','',13),(53,'universal','boolean','',13),(54,'asowner','boolean','',13),(55,'type','String','',13),(56,'name','String','',5),(57,'id','Integer','',5),(58,'mail','String','',5),(59,'nodeFields','Collection','',5),(60,'profile','String','',5),(61,'developer','boolean','',5),(62,'password','String','',5),(63,'unnotified','boolean','',23),(64,'events','Collection','',23),(66,'awakeFreq','int32_t','',25),(67,'buzzer','boolean','',25),(68,'gatewayID','USTRING','',25),(70,'secret','STRING','',25),(71,'sleepFreq','int32_t','',25),(72,'name','String','',26),(73,'password','String','',26),(74,'confirm_password','String','',26),(75,'email','String','',26),(76,'groups','Array<Group>','',26),(77,'id','Integer','',21),(78,'accountID','String','',21),(79,'lock','Boolean','',21),(80,'currentPatternId','Integer','',21),(81,'gmoMemberId','String','',21),(82,'address','String','',21),(83,'id','Integer','',27),(84,'email','String','',27),(85,'encryptedPassword','String','',27),(86,'resetPasswordToken','String','',27),(87,'signInCount','Integer','',27),(88,'id','Integer','',28),(89,'passwordDigest','String','',28),(90,'name','String','',28),(91,'id','Integer','',29),(92,'sendto','String','',29),(93,'sentfrom','String','',29),(94,'supportTitle','String','',29),(95,'ownermail','String','',29),(96,'ownername','String','',29),(97,'appver','String','',29),(98,'osver','String','',29),(99,'id','Integer','',30),(100,'isValid','Boolean','',30),(101,'category','String','',31),(102,'id','Integer','',31),(103,'comment','String','',31),(104,'id','Integer','',25),(105,'accountId','Integer','',25),(106,'light','Boolean','',25),(107,'ssid','String','',25),(108,'security','Integer','',25),(109,'pskkey','String','',25),(110,'ipaddress','String','',25),(111,'netmask','String','',25),(112,'gw','String','',25),(113,'dns','String','',25),(114,'dhcp','Boolean','',25),(115,'mac','String','',25),(116,'ble','String','',25),(117,'otamcu','String','',25),(118,'otawifi','String','',25),(119,'otaaf','String','',25),(120,'wifiTO','Integer','',25),(121,'bleTO','Integer','',25),(122,'buzTO','Integer','',25),(123,'buzAct','Boolean','',25),(124,'voiceAct','Boolean','',25),(125,'name','String','',25),(126,'id','Integer','',32),(127,'gatewayId','Integer','',32),(128,'buzzer','Boolean','',32),(129,'otamcu','String','',32),(130,'otawifi','String','',32),(131,'otaaf','String','',32),(132,'wifiTO','Integer','',32),(133,'bleTO','Integer','',32),(134,'buzTO','Integer','',32),(135,'buzAct','Boolean','',32),(136,'voiceAct','Boolean','',32),(137,'id','Integer','',16),(138,'sms','Boolean','',16),(139,'accountId','Integer','',16),(140,'lockable','Boolean','',16),(141,'admin','Boolean','',16),(142,'alertstoppable','Boolean','',16),(143,'push','Boolean','',16),(144,'call','Boolean','',16),(145,'email','Boolean','',16),(146,'owner','Boolean','',16),(147,'name','String','',16),(148,'id','Integer','',33),(149,'accountId','Integer','',33),(150,'name','String','',33),(151,'id','Integer','',34),(152,'sensorId','Integer','',34),(153,'patternId','Integer','',34),(154,'lock','Integer','',34),(155,'id','Integer','',35),(156,'price','Integer','',35),(157,'plan','String','',35),(158,'comments','String','',35),(159,'months','Integer','',35),(160,'id','Integer','',36),(161,'key','String','',36),(162,'value','String','',36),(163,'id','Integer','',37),(164,'name','String','',37),(165,'id','Integer','',39),(166,'sensorId','Integer','',39),(167,'accountId','Integer','',39),(168,'nearby','Boolean','',39),(169,'confirmed','Boolean','',39),(170,'eventType','Integer','',39),(171,'name','String','',39),(172,'id','Integer','',40),(173,'gatewayId','Integer','',40),(174,'tsdX','Integer','',40),(175,'tsdY','Integer','',40),(176,'tsdZ','Integer','',40),(177,'seThX','Integer','',40),(178,'seThY','Integer','',40),(179,'seThZ','Integer','',40),(180,'saRt','Integer','',40),(181,'gRg','Integer','',40),(182,'lTm','Integer','',40),(183,'pTm','Integer','',40),(184,'lSpS','Integer','',40),(185,'lSpE','Integer','',40),(186,'pSpS','Integer','',40),(187,'pSpE','Integer','',40),(188,'pBTo','Integer','',40),(189,'seBTo','Integer','',40),(190,'seEL','Integer','',40),(191,'lS','Integer','',40),(192,'btr','Integer','',40),(193,'bleS','Integer','',40),(194,'ble','String','',40),(195,'name','String','',40),(196,'id','Integer','',41),(197,'tsdX','Integer','',41),(198,'tsdY','Integer','',41),(199,'tsdZ','Integer','',41),(200,'seThX','Integer','',41),(201,'seThY','Integer','',41),(202,'seThZ','Integer','',41),(203,'saRt','Integer','',41),(204,'gRg','Integer','',41),(205,'lTm','Integer','',41),(206,'pTm','Integer','',41),(207,'lSpS','Integer','',41),(208,'lSpE','Integer','',41),(209,'pSpS','Integer','',41),(210,'pSpE','Integer','',41),(211,'pBTo','Integer','',41),(212,'seBTo','Integer','',41),(213,'seEL','Integer','',41),(214,'lS','Integer','',41),(215,'btr','Integer','',41),(216,'bleS','Integer','',41),(217,'sensorId','Integer','',41),(218,'ble','String','',41),(219,'id','Integer','',42),(220,'active','Boolean','',42),(221,'planId','Integer','',42),(222,'accountId','Integer','',42),(223,'status','String','',42),(224,'id','Integer','',43),(225,'title','String','',43),(226,'comment','String','',43),(227,'id','Integer','',44),(228,'amount','Integer','',44),(229,'orderId','String','',44),(230,'accessId','String','',44),(231,'accessPass','String','',44),(232,'planId','Integer','',44),(233,'accountId','Integer','',44),(234,'comment','String','',44),(235,'authMethod','Integer','',26),(236,'uid','String','',26),(237,'id','Integer','',26),(238,'phone','String','',26),(239,'prefecture','Integer','',26),(240,'image','String','',26),(241,'provider','String','',26),(242,'accountId','Integer','',26),(243,'confirmationToken','String','',26),(244,'unconfirmedEmail','String','',26),(245,'nickname','String','',26),(246,'roleId','Integer','',26),(247,'avatarFileName','String','',26),(248,'avatarContentType','String','',26),(249,'avatarFileSize','Integer','',26),(250,'parseObjectId','String','',26),(251,'phoneType','String','',26),(252,'kananame','String','',26),(253,'city','String','',26),(254,'zip','Integer','',26),(255,'encryptedPassword','String','',26),(256,'resetPasswordToken','String','',26),(257,'signInCount','Integer','',26),(258,'currentSignInIp','String','',26),(259,'lastSignInIp','String','',26),(260,'address','String','',26),(261,'createdAt','Date','',21),(262,'updatedAt','Date','',21),(263,'status','Integer','',21),(264,'createdAt','Date','',27),(265,'updatedAt','Date','',27),(266,'resetPasswordSentAt','Date','',27),(267,'rememberCreatedAt','Date','',27),(268,'currentSignInAt','Date','',27),(269,'lastSignInAt','Date','',27),(270,'createdAt','Date','',28),(271,'updatedAt','Date','',28),(272,'createdAt','Date','',29),(273,'updatedAt','Date','',29),(274,'createdAt','Date','',30),(275,'updatedAt','Date','',30),(276,'createdAt','Date','',31),(277,'updatedAt','Date','',31),(278,'playRetry','Integer','',25),(279,'st','String','',25),(280,'ste','Date','',25),(281,'newmcu','Integer','',25),(282,'newwifi','Integer','',25),(283,'newaf','Integer','',25),(284,'notifySent','Date','',25),(285,'createdAt','Date','',25),(286,'updatedAt','Date','',25),(287,'createdAt','Date','',32),(288,'updatedAt','Date','',32),(289,'securitySettable','Boolean','',16),(290,'groupManageable','Boolean','',16),(291,'userManageable','Boolean','',16),(292,'createdAt','Date','',16),(293,'updatedAt','Date','',16),(294,'createdAt','Date','',33),(295,'updatedAt','Date','',33),(296,'createdAt','Date','',34),(297,'updatedAt','Date','',34),(298,'createdAt','Date','',35),(299,'updatedAt','Date','',35),(300,'createdAt','Date','',36),(301,'updatedAt','Date','',36),(302,'createdAt','Date','',37),(303,'updatedAt','Date','',37),(304,'createdAt','Date','',39),(305,'updatedAt','Date','',39),(306,'createdAt','Date','',40),(307,'updatedAt','Date','',40),(308,'lD','Date','',40),(309,'createdAt','Date','',41),(310,'updatedAt','Date','',41),(311,'lD','Date','',41),(312,'createdAt','Date','',42),(313,'updatedAt','Date','',42),(314,'createdAt','Date','',43),(315,'updatedAt','Date','',43),(316,'createdAt','Date','',44),(317,'updatedAt','Date','',44),(318,'createdAt','Date','',26),(319,'updatedAt','Date','',26),(320,'resetPasswordSentAt','Date','',26),(321,'rememberCreatedAt','Date','',26),(322,'currentSignInAt','Date','',26),(323,'lastSignInAt','Date','',26),(324,'confirmedAt','Date','',26),(325,'confirmationSentAt','Date','',26),(326,'avatarUpdatedAt','Date','',26);
/*!40000 ALTER TABLE `attr` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `attr_use`
--

DROP TABLE IF EXISTS `attr_use`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attr_use` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `ATTR_FK` int(11) NOT NULL,
  `NOUN_USE_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `ATTR_USE_NOUN_USE_FKC` (`NOUN_USE_FK`),
  KEY `ATTR_USE_ATTR_FKC` (`ATTR_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attr_use`
--

LOCK TABLES `attr_use` WRITE;
/*!40000 ALTER TABLE `attr_use` DISABLE KEYS */;
INSERT INTO `attr_use` VALUES (1,3,3),(2,4,3),(3,5,3),(4,6,3),(5,7,3),(6,4,6),(7,5,6),(8,3,5),(9,4,7),(10,5,7),(11,6,7),(12,7,7),(20,104,84),(14,71,39),(15,63,35),(16,53,23),(17,78,80),(18,77,80),(19,112,60),(21,78,88),(22,79,88),(25,77,85),(24,263,85),(26,82,85),(27,81,85),(28,72,89),(29,73,89),(30,76,89),(31,105,84),(32,77,90);
/*!40000 ALTER TABLE `attr_use` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `causal_relation`
--

DROP TABLE IF EXISTS `causal_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `causal_relation` (
  `id` int(11) NOT NULL,
  `ATTR_FK` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `causal_relation`
--

LOCK TABLES `causal_relation` WRITE;
/*!40000 ALTER TABLE `causal_relation` DISABLE KEYS */;
/*!40000 ALTER TABLE `causal_relation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `client`
--

DROP TABLE IF EXISTS `client`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `client` (
  `ID` int(8) NOT NULL,
  `NAME` varchar(255) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `client`
--

LOCK TABLES `client` WRITE;
/*!40000 ALTER TABLE `client` DISABLE KEYS */;
INSERT INTO `client` VALUES (1,'TEST');
/*!40000 ALTER TABLE `client` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `common_translation`
--

DROP TABLE IF EXISTS `common_translation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `common_translation` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `JAPANESE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM AUTO_INCREMENT=118 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `common_translation`
--

LOCK TABLES `common_translation` WRITE;
/*!40000 ALTER TABLE `common_translation` DISABLE KEYS */;
INSERT INTO `common_translation` VALUES (1,'name','名前'),(2,'id','id'),(3,'filename','ファイル名'),(4,'account','アカウント'),(5,'responsible','担当者'),(6,'mail','メール'),(7,'password','パスワード'),(8,'admin','管理者'),(9,'pref','県'),(10,'phone','電話番号'),(11,'buildingname','建物名'),(12,'keitai','携帯番号'),(13,'address','アドレス'),(14,'birthyear','生年'),(15,'birthmonth','生月'),(16,'mailforconfirm','メール確認'),(17,'brithday','誕生日'),(18,'male','男性'),(19,'blocknumber','住所'),(20,'kana','カナ'),(21,'delivertodifferentaddress','別のアドレスへ'),(22,'deliveryname','名前'),(23,'deliveryaddress','住所'),(24,'deliveryblocknumber','住所'),(25,'deliverykana','カナ'),(26,'deliveryphone','電話番号'),(27,'deliverydate','配送日'),(28,'devliveryhour','配送時間'),(29,'ordernum','注文数'),(30,'carriage','送料'),(31,'subtotal','サブトータル'),(32,'price','金額'),(33,'tax','消費税'),(34,'pricewithtax','税込み'),(35,'code','コード'),(36,'date','日付'),(37,'size','サイズ'),(38,'misc','その他'),(39,'material','素材'),(40,'color','色'),(41,'attachment','付属品'),(42,'description','説明'),(43,'stocknum','在庫数'),(44,'totalfixedprice','合計在庫数'),(45,'weight','重さ'),(46,'attention','注意書き'),(47,'pub','公開'),(48,'Inquiry','問い合わせ'),(49,'Category','カテゴリー'),(50,'SubCategory','サブカテゴリー'),(51,'Brand','ブランド'),(52,'Desinger','デザイナー'),(53,'Cart','カート'),(54,'Choise','選択'),(55,'Favorite','お気に入り'),(56,'News','ニュース'),(57,'title','タイトル'),(58,'content','コンテンツ'),(59,'IntraUser','内部ユーザー'),(60,'Prefecture','県'),(61,'Holliday','休日'),(62,'type','種類'),(63,'value','値'),(64,'removed','削除済み'),(65,'accepted','受領済み'),(66,'deadline','納期'),(67,'current','現行'),(68,'attribute','属性'),(69,'modelname','モデル名'),(70,'Privilege','権限'),(71,'Product','製品'),(72,'Componey','企業'),(73,'Manual','マニュアル'),(74,'intraUser','内部ユーザー'),(75,'publicUser','一般ユーザー'),(76,'PublicUser','一般ユーザー'),(77,'product','製品'),(78,'test','テスト'),(79,'j2eeStory','ストーリー'),(80,'noun','名詞'),(81,'japanese','日本語'),(82,'classtype','classtype'),(83,'attr','属性'),(84,'verb','動詞'),(85,'template','テンプレート'),(86,'valid','有効'),(87,'site','サイト'),(88,'cost','原価'),(89,'url','url'),(90,'tag','tag'),(91,'artist','アーティスト'),(92,'contract','契約'),(93,'initial','原価'),(94,'num','数'),(95,'Contract','契約'),(96,'StockTake','棚卸個別情報'),(97,'StockTakeReport','棚卸報告'),(98,'matching','一致'),(99,'productname','製品名'),(100,'modelcode','型番'),(101,'user','ユーザー'),(102,'video','ビデオ'),(103,'lesson','授業'),(104,'updatedate','更新日'),(105,'createdate','作成日'),(107,'course','コース'),(108,'Course','コース'),(109,'Lesson','授業'),(110,'User','ユーザ'),(111,'Video','ビデオ'),(112,'Music','音楽'),(113,'Enrollment','履修'),(114,'enrollment','履修'),(115,'node','ノード'),(116,'Node','ノード'),(117,'shop','ショップ');
/*!40000 ALTER TABLE `common_translation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `componey`
--

DROP TABLE IF EXISTS `componey`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `componey` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `RESPONSIBLE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ATTACKLIST` tinyint(4) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `componey`
--

LOCK TABLES `componey` WRITE;
/*!40000 ALTER TABLE `componey` DISABLE KEYS */;
/*!40000 ALTER TABLE `componey` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `intra_user`
--

DROP TABLE IF EXISTS `intra_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `intra_user` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ACCOUNT` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `intra_user`
--

LOCK TABLES `intra_user` WRITE;
/*!40000 ALTER TABLE `intra_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `intra_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `j2ee_story`
--

DROP TABLE IF EXISTS `j2ee_story`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `j2ee_story` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `STARTDATE` datetime NOT NULL,
  `REQUIREDSTORYTELLERHOUR` int(11) NOT NULL,
  `REQUIREDTEAMHOUR` int(11) NOT NULL,
  `PRICE` int(11) NOT NULL,
  `ENDDATE` datetime NOT NULL,
  `STRUTSCONFIGCONTENT` varchar(20000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ANDROMDA_CORE_JAR_FILE_FK` int(11) DEFAULT NULL,
  `story` varchar(255) NOT NULL,
  `INCOME` int(11) NOT NULL,
  `TOTALCOST` int(11) NOT NULL,
  `PROFIT` int(11) NOT NULL,
  `DEVIDENTFORTEAM` int(11) NOT NULL,
  `TELLERAPP` tinyint(4) NOT NULL,
  `BASECAMPURL` varchar(255) NOT NULL,
  `BASECAMPAPIHASH` varchar(255) NOT NULL,
  `DIFICULTY` int(11) NOT NULL,
  `SALEREQUIRED` varchar(4) NOT NULL,
  `OFFSHORABLE` tinyint(4) NOT NULL,
  `CONSULTINGRATE` tinyint(4) NOT NULL,
  `CONTIUNINGBUSINESS` tinyint(4) NOT NULL,
  `ADVERTISINGRATE` int(11) NOT NULL,
  `PRICE_PER_SENTENCES` int(11) NOT NULL,
  `DISCOUNTPERCENTAGE` int(11) NOT NULL,
  `INTERFACESPECSURL` varchar(255) NOT NULL,
  `JAPANESE` varchar(255) NOT NULL,
  `COVERED` tinyint(4) NOT NULL,
  `ACTIVE` tinyint(4) NOT NULL,
  `CLIENT_FK` int(11) NOT NULL,
  `CONTRIBUTE_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ANDROMDA_CORE_JAR_FILE_FK` (`ANDROMDA_CORE_JAR_FILE_FK`),
  KEY `J2EE_STORY_ANDROMDA_CORE_JAR_C` (`ANDROMDA_CORE_JAR_FILE_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `j2ee_story`
--

LOCK TABLES `j2ee_story` WRITE;
/*!40000 ALTER TABLE `j2ee_story` DISABLE KEYS */;
INSERT INTO `j2ee_story` VALUES (1,'nodepad','2015-03-30 00:00:00',320,480,100,'2015-03-30 00:00:00',' ',1,'test',100,100,0,0,1,'http:','jfjoffjiof',100,'1',1,1,1,50,5,5,'5','nodepad',1,1,1,1),(2,'secual','2015-05-25 00:00:00',160,160,1000000,'2015-09-30 00:00:00','',2,'',0,0,0,0,0,'','',0,'0',0,0,0,0,0,0,'','',0,0,0,0);
/*!40000 ALTER TABLE `j2ee_story` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `jsp`
--

DROP TABLE IF EXISTS `jsp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jsp` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CODE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `FILENAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `SENTENCE_FK` int(11) NOT NULL,
  `MODIFIED` tinyint(4) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `JSP_SENTENCE_FKC` (`SENTENCE_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `jsp`
--

LOCK TABLES `jsp` WRITE;
/*!40000 ALTER TABLE `jsp` DISABLE KEYS */;
INSERT INTO `jsp` VALUES (1,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n<span id=\"title\">\r\n	##japanese##編集\r\n</span>\r\n<span id=\"subform\">\r\n		<html:form method=\"POST\" action=\"/PostNodeVP\">\r\n          <html:hidden name=\"form\" property=\"id\"/>\r\n\r\ncontentType<br />\r\n<html:text name=\"form\" property=\"contentType\" /><br />\r\n\r\ncontent<br />\r\n<html:text name=\"form\" property=\"content\" /><br />\r\n\r\nwidth<br />\r\n<html:text name=\"form\" property=\"width\" /><br />\r\n\r\nheight<br />\r\n<html:text name=\"form\" property=\"height\" /><br />\r\n\r\nx<br />\r\n<html:text name=\"form\" property=\"x\" /><br />\r\n\r\ny<br />\r\n<html:text name=\"form\" property=\"y\" /><br />\r\n\r\n\r\n\r\n\r\n          <html:submit value=\"save\"/>\r\n		</html:form>\r\n</span>\r\n</div>\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','PostNodeDetailAsTest.jsp',4,0),(2,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n<span id=\"title\">\r\n	##japanese##編集\r\n</span>\r\n<span id=\"subform\">\r\n		<html:form method=\"POST\" action=\"/PostNodeVP\">\r\n          <html:hidden name=\"form\" property=\"id\"/>\r\n\r\ncontent<br />\r\n<html:text name=\"form\" property=\"content\" /><br />\r\n\r\n\r\n\r\n\r\n          <html:submit value=\"save\"/>\r\n		</html:form>\r\n</span>\r\n</div>\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','PostNodeDetailForContentOnly.jsp',5,0),(4,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n\r\n<span class=\"title\">##japanese##s</span>\r\n                    <display:table name=\"${nodes}\" id=\"row\" requestURI=\"Nodes.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"false\" pagesize=\"30\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"Nodes.do?id=${row.id}\">ed</a>\r\n                        <a href=\"DeleteNode.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n <display:column media=\"html\" sortable=\"true\" title=\"width\">\r\n<nobr>\r\n${row.width}\r\n</nobr>\r\n</display:column>\r\n <display:column media=\"html\" sortable=\"true\" title=\"height\">\r\n<nobr>\r\n${row.height}\r\n</nobr>\r\n</display:column>\r\n <display:column media=\"html\" sortable=\"true\" title=\"x\">\r\n<nobr>\r\n${row.x}\r\n</nobr>\r\n</display:column>\r\n <display:column media=\"html\" sortable=\"true\" title=\"y\">\r\n<nobr>\r\n${row.y}\r\n</nobr>\r\n</display:column>\r\n\r\n                    </display:table>\r\n<a href=\"Nodes.do?d-16544-e=1&6578706f7274=1&displayexport\">\r\nCVS\r\n</a>\r\n<a href=\"Nodes.do?d-16544-e=2&6578706f7274=1&displayexport\">\r\nXLS\r\n</a>\r\n<a href=\"Nodes.do?d-16544-e=3&6578706f7274=1&displayexport\">\r\nXML\r\n</a>\r\n<a href=\"Nodes.do?d-16544-e=4&6578706f7274=1&displayexport\">\r\nPDF\r\n</a>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"sub\">\r\n<span id=\"title\">\r\n	##japanese##編集\r\n</span>\r\n<span id=\"subform\">\r\n\r\n		<form method=\"POST\" action=\"PostNodeVP.do\">\r\n          <html:hidden name=\"form\" property=\"id\"/>\r\n\r\nwidth<br />\r\n<html:text name=\"form\" property=\"width\" /><br />\r\n\r\nheight<br />\r\n<html:text name=\"form\" property=\"height\" /><br />\r\n\r\nx<br />\r\n<html:text name=\"form\" property=\"x\" /><br />\r\n\r\ny<br />\r\n<html:text name=\"form\" property=\"y\" /><br />\r\n\r\n\r\n\r\n          <html:submit value=\"save\" />\r\n		</form>\r\n</span>\r\n                        <a href=\"NodeDetail.do\">新規作成##japanese##</a>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','Nodes.jsp',7,0),(3,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div>\r\nwidth\r\n${node.width}\r\n<br/>\r\nheight\r\n${node.height}\r\n<br/>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','ShowNodeWidthAndHeight.jsp',6,0),(5,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n                    <display:table name=\"${nodes}\" id=\"row\" requestURI=\"Nodes.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"30\" sort=\"list\">\r\n                        <display:column media=\"xml csv excel pdf\" sortable=\"false\" property=\"id\" />\r\n<display:column media=\"xml csv excel pdf\" property=\"width\" title=\"width\"/>\r\n<display:column media=\"xml csv excel pdf\" property=\"height\" title=\"height\"/>\r\n<display:column media=\"xml csv excel pdf\" property=\"x\" title=\"x\"/>\r\n<display:column media=\"xml csv excel pdf\" property=\"y\" title=\"y\"/>\r\n\r\n                    </display:table>\r\n\r\n\r\n','DisplayExportsNodes.jsp',7,0),(6,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n\r\n<form action=\"SetSelectionOfSecualEvent##attr##.do\" method=\"post\" name=\"form\">\r\n<a href=\"${from}.do?pagesize=20\">20件</a>\r\n<a href=\"${from}.do?pagesize=50\">50件</a>\r\n<a href=\"${from}.do?pagesize=100\">100件</a>\r\n<a href=\"${from}.do?pagesize=200\">200件</a>\r\n<a href=\"${from}.do?pagesize=300\">300件</a>\r\n<a href=\"${from}.do?pagesize=500\">500件</a>\r\n<a href=\"#\" onclick=\"selectall(form);\">select all</a>\r\n<span class=\"title\">secualEvents</span>\r\n                    <display:table name=\"${secualEvents}\" id=\"row\" requestURI=\"SecualEvents.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"15\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"SecualEventDetail.do?id=${row.id}\">ed</a>\r\n                        <a href=\"DeleteSecualEvent.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n\r\n                    </display:table>\r\n\r\n\r\n                        <a href=\"SecualEventDetail.do\">new SecualEvent</a>\r\n<html:submit />\r\n</form>\r\n</div>\r\n\r\n\r\n<div class=\"sub\">\r\n\r\n		<html:form method=\"POST\" action=\"/SecualEventVP\">\r\n          <html:hidden name=\"secualEvent\" property=\"id\"/>\r\n\r\n\r\n\r\n          <html:submit />\r\n		</html:form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','SecualEvents.jsp',26,0),(7,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n<div class=\"main\">\r\n<span class=\"title\">SecualEvent 編集</span>\r\n		<html:form method=\"POST\" action=\"/SecualEventVP\">\r\n          <html:hidden name=\"secualEvent\" property=\"id\"/>\r\n\r\n\r\n\r\n          <html:submit value=\"保存\"/>\r\n		</html:form>\r\n</div>\r\n\r\n<div class=\"sub\">\r\n\r\n\r\n</div>\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','SecualEventDetail.jsp',26,0),(8,'                                        <select name=\"secualEvent\">\r\n                                            <option value=\"\"></option>\r\n                                            <c:forEach var=\"valueLabel\" items=\"${SecualEvents}\">\r\n                                                <c:choose>\r\n                                                    <c:when test=\"${valueLabel.id eq ##addingclass##.secualEvent.id}\">\r\n                                                        <option value=\"${valueLabel.id}\" selected=\"selected\">${valueLabel.name}</option>\r\n                                                    </c:when>\r\n                                                    <c:otherwise>\r\n                                                        <option value=\"${valueLabel.id}\">${valueLabel.name}</option>\r\n                                                    </c:otherwise>\r\n                                                </c:choose>\r\n                                            </c:forEach>\r\n                                        </select>\r\n','SecualEventSelectSnip.jsp',26,0),(9,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n\r\n<form action=\"SetSelectionOfSubscriptionLisense##attr##.do\" method=\"post\" name=\"form\">\r\n<a href=\"${from}.do?pagesize=20\">20件</a>\r\n<a href=\"${from}.do?pagesize=50\">50件</a>\r\n<a href=\"${from}.do?pagesize=100\">100件</a>\r\n<a href=\"${from}.do?pagesize=200\">200件</a>\r\n<a href=\"${from}.do?pagesize=300\">300件</a>\r\n<a href=\"${from}.do?pagesize=500\">500件</a>\r\n<a href=\"#\" onclick=\"selectall(form);\">select all</a>\r\n<span class=\"title\">subscriptionLisenses</span>\r\n                    <display:table name=\"${subscriptionLisenses}\" id=\"row\" requestURI=\"SubscriptionLisenses.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"15\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"SubscriptionLisenseDetail.do?id=${row.id}\">ed</a>\r\n                        <a href=\"DeleteSubscriptionLisense.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n\r\n                    </display:table>\r\n\r\n\r\n                        <a href=\"SubscriptionLisenseDetail.do\">new SubscriptionLisense</a>\r\n<html:submit />\r\n</form>\r\n</div>\r\n\r\n\r\n<div class=\"sub\">\r\n\r\n		<html:form method=\"POST\" action=\"/SubscriptionLisenseVP\">\r\n          <html:hidden name=\"subscriptionLisense\" property=\"id\"/>\r\n\r\n\r\n\r\n          <html:submit />\r\n		</html:form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','SubscriptionLisenses.jsp',27,0),(10,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n<div class=\"main\">\r\n<span class=\"title\">SubscriptionLisense 編集</span>\r\n		<html:form method=\"POST\" action=\"/SubscriptionLisenseVP\">\r\n          <html:hidden name=\"subscriptionLisense\" property=\"id\"/>\r\n\r\n\r\n\r\n          <html:submit value=\"保存\"/>\r\n		</html:form>\r\n</div>\r\n\r\n<div class=\"sub\">\r\n\r\n\r\n</div>\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','SubscriptionLisenseDetail.jsp',27,0),(11,'                                        <select name=\"subscriptionLisense\">\r\n                                            <option value=\"\"></option>\r\n                                            <c:forEach var=\"valueLabel\" items=\"${SubscriptionLisenses}\">\r\n                                                <c:choose>\r\n                                                    <c:when test=\"${valueLabel.id eq ##addingclass##.subscriptionLisense.id}\">\r\n                                                        <option value=\"${valueLabel.id}\" selected=\"selected\">${valueLabel.name}</option>\r\n                                                    </c:when>\r\n                                                    <c:otherwise>\r\n                                                        <option value=\"${valueLabel.id}\">${valueLabel.name}</option>\r\n                                                    </c:otherwise>\r\n                                                </c:choose>\r\n                                            </c:forEach>\r\n                                        </select>\r\n','SubscriptionLisenseSelectSnip.jsp',27,0),(12,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n\r\n<form action=\"SetSelectionOfConfigurationChange##attr##.do\" method=\"post\" name=\"form\">\r\n<a href=\"${from}.do?pagesize=20\">20件</a>\r\n<a href=\"${from}.do?pagesize=50\">50件</a>\r\n<a href=\"${from}.do?pagesize=100\">100件</a>\r\n<a href=\"${from}.do?pagesize=200\">200件</a>\r\n<a href=\"${from}.do?pagesize=300\">300件</a>\r\n<a href=\"${from}.do?pagesize=500\">500件</a>\r\n<a href=\"#\" onclick=\"selectall(form);\">select all</a>\r\n<span class=\"title\">configurationChanges</span>\r\n                    <display:table name=\"${configurationChanges}\" id=\"row\" requestURI=\"ConfigurationChanges.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"15\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"ConfigurationChangeDetail.do?id=${row.id}\">ed</a>\r\n                        <a href=\"DeleteConfigurationChange.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n\r\n                    </display:table>\r\n\r\n\r\n                        <a href=\"ConfigurationChangeDetail.do\">new ConfigurationChange</a>\r\n<html:submit />\r\n</form>\r\n</div>\r\n\r\n\r\n<div class=\"sub\">\r\n\r\n		<html:form method=\"POST\" action=\"/ConfigurationChangeVP\">\r\n          <html:hidden name=\"configurationChange\" property=\"id\"/>\r\n\r\n\r\n\r\n          <html:submit />\r\n		</html:form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','ConfigurationChanges.jsp',31,0),(13,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n<div class=\"main\">\r\n<span class=\"title\">ConfigurationChange 編集</span>\r\n		<html:form method=\"POST\" action=\"/ConfigurationChangeVP\">\r\n          <html:hidden name=\"configurationChange\" property=\"id\"/>\r\n\r\n\r\n\r\n          <html:submit value=\"保存\"/>\r\n		</html:form>\r\n</div>\r\n\r\n<div class=\"sub\">\r\n\r\n\r\n</div>\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','ConfigurationChangeDetail.jsp',31,0),(14,'                                        <select name=\"configurationChange\">\r\n                                            <option value=\"\"></option>\r\n                                            <c:forEach var=\"valueLabel\" items=\"${ConfigurationChanges}\">\r\n                                                <c:choose>\r\n                                                    <c:when test=\"${valueLabel.id eq ##addingclass##.configurationChange.id}\">\r\n                                                        <option value=\"${valueLabel.id}\" selected=\"selected\">${valueLabel.name}</option>\r\n                                                    </c:when>\r\n                                                    <c:otherwise>\r\n                                                        <option value=\"${valueLabel.id}\">${valueLabel.name}</option>\r\n                                                    </c:otherwise>\r\n                                                </c:choose>\r\n                                            </c:forEach>\r\n                                        </select>\r\n','ConfigurationChangeSelectSnip.jsp',31,0),(15,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n<span id=\"title\">\r\n	##japanese##編集\r\n</span>\r\n<span id=\"subform\">\r\n		<html:form method=\"POST\" action=\"/PostAccountVP\">\r\n          <html:hidden name=\"form\" property=\"id\"/>\r\n\r\naccountID<br />\r\n<html:text name=\"form\" property=\"accountID\" /><br />\r\n\r\n\r\n\r\n\r\n          <html:submit value=\"save\"/>\r\n		</html:form>\r\n</span>\r\n</div>\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','PostAccountDetailForPassword.jsp',79,0),(17,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n<html:html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n<title>参加お申込フォーム　｜　ログイン</title>\r\n<link href=\"css/import.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n\r\n<body id=\"toppage\">\r\n                <div id=\"log_in_form\">\r\n\r\n<c:if test=\"${!empty message}\">\r\n<font color=\"red\">\r\n<!-- ${message} -->\r\n${message}\r\n</font><br>\r\n</c:if>\r\n			        <html:form action=\"/Login.do\" method=\"post\">\r\n					<table width=\"100%\" border=\"0\" cellspacing=\"5\" cellpadding=\"0\">\r\n					  <tr>\r\n					    <td><p class=\"summary\">account</p></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><input name=\"account\" type=\"text\" size=\"45\"></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><p class=\"summary\">パスワード</p></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><input name=\"password\" type=\"password\" size=\"45\"></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><img src=\"img/spacer.gif\" alt=\"\" width=\"1\" height=\"20\"></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><p align=\"center\">\r\n					        <input type=\"submit\" name=\"Submit\" value=\"　ログイン　\">\r\n							<img src=\"img/spacer.gif\" alt=\"\" width=\"15\" height=\"1\">\r\n							<input name=\"リセット\" type=\"reset\" value=\"　リセット　\">\r\n					        </p>	</td>\r\n					  </tr>\r\n					</table>\r\n					</html:form>\r\n			    </div>\r\n\r\n</div>\r\n\r\n</body>\r\n</html:html>\r\n\r\n\r\n','Logintest.jsp',84,0),(16,'# Gateways [/gateways]  \r\n\r\n## Retrieve All Posts [GET] \r\n+ Response 200 (application/json) \r\n+ Attributes (array[Gateway])','APIBlueprint.md',81,0);
/*!40000 ALTER TABLE `jsp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `jsp_template`
--

DROP TABLE IF EXISTS `jsp_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `jsp_template` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TEMPLATE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `NAMETEMPLATE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `VERB_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `JSP_TEMPLATE_VERB_FKC` (`VERB_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `jsp_template`
--

LOCK TABLES `jsp_template` WRITE;
/*!40000 ALTER TABLE `jsp_template` DISABLE KEYS */;
INSERT INTO `jsp_template` VALUES (1,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n	\r\n	<logic:iterate id=\"o\" name=\"outputs\">\r\n	<div>\r\n	${o.description};\r\n	</div>\r\n	<hr>\r\n	</logic:iterate>\r\n','RSSBlock.jsp',1),(2,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n<span class=\"title\">##modelobj##s</span>\r\n                    <display:table name=\"${##modelobj##s}\" id=\"row\" requestURI=\"##modelclass##s.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"15\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"##modelclass##Detail.do?id=${row.id}\">ed</a>\r\n                        <a href=\"Delete##modelclass##.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n##displaycontent##\r\n                    </display:table>\r\n\r\n\r\n                        <a href=\"##modelclass##Detail.do\">new ##modelclass##</a>\r\n</div>\r\n\r\n\r\n<div class=\"sub\">\r\n\r\n		<html:form method=\"POST\" action=\"/##modelclass##VP\">\r\n          <html:hidden name=\"##modelobj##\" property=\"id\"/>\r\n\r\n##formcontent##\r\n\r\n          <html:submit />\r\n		</html:form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','##modelclass##s.jsp',2),(3,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n<div class=\"main\">\r\n<span class=\"title\">##modelclass## 編集</span>\r\n		<html:form method=\"POST\" action=\"/##modelclass##VP\">\r\n          <html:hidden name=\"##modelobj##\" property=\"id\"/>\r\n\r\n##formcontent##\r\n\r\n          <html:submit />\r\n		</html:form>\r\n</div>\r\n\r\n<div class=\"sub\">\r\n\r\n\r\n</div>\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','##modelclass##Detail.jsp',2),(4,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n\r\n<form action=\"SetSelectionOf##modelclass####attr##.do\" method=\"post\" name=\"form\">\r\n<a href=\"${from}.do?pagesize=20\">20件</a>\r\n<a href=\"${from}.do?pagesize=50\">50件</a>\r\n<a href=\"${from}.do?pagesize=100\">100件</a>\r\n<a href=\"${from}.do?pagesize=200\">200件</a>\r\n<a href=\"${from}.do?pagesize=300\">300件</a>\r\n<a href=\"${from}.do?pagesize=500\">500件</a>\r\n<a href=\"#\" onclick=\"selectall(form);\">select all</a>\r\n<span class=\"title\">##modelobj##s</span>\r\n                    <display:table name=\"${##modelobj##s}\" id=\"row\" requestURI=\"##modelclass##s.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"15\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"##modelclass##Detail.do?id=${row.id}\">ed</a>\r\n                        <a href=\"Delete##modelclass##.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n##displaycontent##\r\n                    </display:table>\r\n\r\n\r\n                        <a href=\"##modelclass##Detail.do\">new ##modelclass##</a>\r\n<html:submit />\r\n</form>\r\n</div>\r\n\r\n\r\n<div class=\"sub\">\r\n\r\n		<html:form method=\"POST\" action=\"/##modelclass##VP\">\r\n          <html:hidden name=\"##modelobj##\" property=\"id\"/>\r\n\r\n##formcontent##\r\n\r\n          <html:submit />\r\n		</html:form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','##modelclass##s.jsp',6),(5,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n<div class=\"main\">\r\n<span class=\"title\">##modelclass## 編集</span>\r\n		<html:form method=\"POST\" action=\"/##modelclass##VP\">\r\n          <html:hidden name=\"##modelobj##\" property=\"id\"/>\r\n\r\n##formcontent##\r\n\r\n          <html:submit value=\"保存\"/>\r\n		</html:form>\r\n</div>\r\n\r\n<div class=\"sub\">\r\n\r\n\r\n</div>\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','##modelclass##Detail.jsp',6),(6,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n<span id=\"title\">\r\n	##japanese##編集\r\n</span>\r\n<span id=\"subform\">\r\n		<html:form method=\"POST\" action=\"/Post##modelclass##VP\">\r\n          <html:hidden name=\"form\" property=\"id\"/>\r\n\r\n##formcontent##\r\n\r\n\r\n          <html:submit value=\"save\"/>\r\n		</html:form>\r\n</span>\r\n</div>\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','Post##modelclass##Detail.jsp',8),(7,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div class=\"main\">\r\n\r\n<span class=\"title\">##japanese##s</span>\r\n                    <display:table name=\"${##modelobj##s}\" id=\"row\" requestURI=\"##modelclass##s.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"false\" pagesize=\"30\" sort=\"list\">\r\n                        <display:column media=\"html\" sortable=\"false\">\r\n                        <a href=\"##modelclass##s.do?id=${row.id}\">ed</a>\r\n                        <a href=\"Delete##modelclass##.do?id=${row.id}\">del</a>\r\n                        </display:column>\r\n##displaycontent##\r\n                    </display:table>\r\n<a href=\"##modelclass##s.do?d-16544-e=1&6578706f7274=1&displayexport\">\r\nCVS\r\n</a>\r\n<a href=\"##modelclass##s.do?d-16544-e=2&6578706f7274=1&displayexport\">\r\nXLS\r\n</a>\r\n<a href=\"##modelclass##s.do?d-16544-e=3&6578706f7274=1&displayexport\">\r\nXML\r\n</a>\r\n<a href=\"##modelclass##s.do?d-16544-e=4&6578706f7274=1&displayexport\">\r\nPDF\r\n</a>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"sub\">\r\n<span id=\"title\">\r\n	##japanese##編集\r\n</span>\r\n<span id=\"subform\">\r\n\r\n		<form method=\"POST\" action=\"Post##modelclass##VP.do\">\r\n          <html:hidden name=\"form\" property=\"id\"/>\r\n\r\n##formcontent##\r\n\r\n          <html:submit value=\"save\" />\r\n		</form>\r\n</span>\r\n                        <a href=\"##modelclass##Detail.do\">新規作成##japanese##</a>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n','##modelclass##s.jsp',9),(8,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n<div>\r\n##showattrs##\r\n\r\n</div>\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','Show##modelclass##.jsp',10),(9,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n			<form method=\"POST\" action=\"##modelclass##FormFileUploadAddingTo##addingtoclass##.do\" enctype=\"multipart/form-data\">\r\n		  		<input type=\"file\" name=\"formFile\" />\r\n				<input type=\"hidden\" name=\"##addingtoobj##\" value=\"${##addingtoobj##.id}\" />\r\n				<html:submit value=\"追加\"/>\r\n			</form>\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','##modelclass##FormFileUploadAddingTo##addingtoclass##.jsp',11),(10,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n			<form method=\"POST\" action=\"##modelclass##VP.do\" enctype=\"multipart/form-data\">\r\n				<html:file property=\"file\" name=\"formFile\"></html:file>\r\n				<input type=\"hidden\" name=\"id\" value=\"${##modelobj##.id}\" />\r\n				<input type=\"hidden\" name=\"##addingtoobj##\" value=\"${##addingtoobj##.id}\" />\r\n				<html:submit value=\"追加\"/>\r\n			</form>\r\n\r\n\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n','##modelclass##FormFileUploadAddingTo##addingtoclass##.jsp',7),(12,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n                    <display:table name=\"${##modelobj##s}\" id=\"row\" requestURI=\"##modelclass##s.do\"\r\n                            requestURIcontext=\"false\"\r\n                            export=\"true\" pagesize=\"30\" sort=\"list\">\r\n                        <display:column media=\"xml csv excel pdf\" sortable=\"false\" property=\"id\" />\r\n##displayexportcontent##\r\n                    </display:table>\r\n\r\n\r\n','DisplayExports##modelclass##s.jsp',9),(11,'                                        <select name=\"##modelobj##\">\r\n                                            <option value=\"\"></option>\r\n                                            <c:forEach var=\"valueLabel\" items=\"${##modelclass##s}\">\r\n                                                <c:choose>\r\n                                                    <c:when test=\"${valueLabel.id eq ##addingclass##.##modelobj##.id}\">\r\n                                                        <option value=\"${valueLabel.id}\" selected=\"selected\">${valueLabel.name}</option>\r\n                                                    </c:when>\r\n                                                    <c:otherwise>\r\n                                                        <option value=\"${valueLabel.id}\">${valueLabel.name}</option>\r\n                                                    </c:otherwise>\r\n                                                </c:choose>\r\n                                            </c:forEach>\r\n                                        </select>\r\n','##modelclass##SelectSnip.jsp',6),(13,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ page isELIgnored=\"false\" %>\r\n<html:html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n<title>参加お申込フォーム　｜　ログイン</title>\r\n<link href=\"css/import.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n\r\n<body id=\"toppage\">\r\n                <div id=\"log_in_form\">\r\n\r\n<c:if test=\"${!empty message}\">\r\n<font color=\"red\">\r\n<!-- ${message} -->\r\n${message}\r\n</font><br>\r\n</c:if>\r\n			        <html:form action=\"/Login.do\" method=\"post\">\r\n					<table width=\"100%\" border=\"0\" cellspacing=\"5\" cellpadding=\"0\">\r\n					  <tr>\r\n					    <td><p class=\"summary\">account</p></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><input name=\"account\" type=\"text\" size=\"45\"></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><p class=\"summary\">パスワード</p></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><input name=\"password\" type=\"password\" size=\"45\"></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><img src=\"img/spacer.gif\" alt=\"\" width=\"1\" height=\"20\"></td>\r\n					  </tr>\r\n					  <tr>\r\n					    <td><p align=\"center\">\r\n					        <input type=\"submit\" name=\"Submit\" value=\"　ログイン　\">\r\n							<img src=\"img/spacer.gif\" alt=\"\" width=\"15\" height=\"1\">\r\n							<input name=\"リセット\" type=\"reset\" value=\"　リセット　\">\r\n					        </p>	</td>\r\n					  </tr>\r\n					</table>\r\n					</html:form>\r\n			    </div>\r\n\r\n</div>\r\n\r\n</body>\r\n</html:html>\r\n\r\n\r\n','Login.jsp',12),(14,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n<%@ page isELIgnored=\"false\" %>\r\n<##modelobj##s>\r\n    <logic:iterate id=\"model\" name=\"##modelobj##s\">\r\n       <##modelobj##>\r\n         ##displayxmlcontent##\r\n       </##modelobj##>\r\n    </logic:iterate>\r\n</##modelobj##s>\r\n','DisplayXmlOf##modelclass##.jsp',17),(15,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<html:html>\r\n<tiles:insert page=\"/h.jsp\"/>\r\n\r\n             <font style=\"font-size:${param.fontsize}px;\">\r\n                  <bean:write name=\"text\" />\r\n              </font>\r\n\r\n	</body>\r\n</html:html>\r\n\r\n\r\n\r\n\r\n','Museigen##modelclass##.jsp',18),(16,'<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/xml\" prefix=\"x\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\r\n<%@ taglib uri=\"http://struts.apache.org/tags-tiles\" prefix=\"tiles\" %>\r\n<%@ taglib uri=\"/tags/struts-logic\" prefix=\"logic\" %>\r\n<%@ taglib uri=\"/tags/struts-html\" prefix=\"html\" %>\r\n<%@ taglib uri=\"/tags/struts-bean\" prefix=\"bean\" %>\r\n<%@ taglib uri=\"/formtag.tld\" prefix=\"formtag\" %> \r\n<%@ taglib uri=\"/clientsidevalidation.tld\" prefix=\"f\" %> \r\n\r\n<%@ taglib uri=\"http://displaytag.sf.net\" prefix=\"display\" %>\r\n\r\n\r\n<%@ page isELIgnored=\"false\" %>\r\n\r\n<##modelobj##>\r\n   ##displayxmlcontent##\r\n</##modelobj##>\r\n','Show##modelclass##Xml.jsp',17),(17,'# ##modelclass##s [/##modelobj##s]  \r\n\r\n## Retrieve All Posts [GET] \r\n+ Response 200 (application/json) \r\n+ Attributes (array[##modelclass##])','APIBlueprint.md',28),(18,'### GET\r\n    \r\n+ Response 200 (application/json)\r\n    + Attributes\r\n        - ##modelobj## (##modelclass##)','ApIBluePrintGET.md',30),(19,'### POST\r\n    \r\n+ Request (application/json)\r\n    + Attributes\r\n        - ##modelobj## (##modelclass##)\r\n    \r\n+ Response 200 (application/json)\r\n    + Attributes\r\n        - ##modelobj## (##modelclass##)\r\n    ','APIBlueprintPost.md',31),(20,'# Group ##modelclass##s\r\n\r\n## ##modelclass##s Collection [/##modelobj##s/##sentencename##]\r\n\r\n# Data Structures\r\n\r\n## ##modelclass## (object)\r\n\r\n##listattrib##','ApIBluePrintResource.md',32);
/*!40000 ALTER TABLE `jsp_template` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `manual_step`
--

DROP TABLE IF EXISTS `manual_step`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `manual_step` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `URL` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `DESCRIPTION` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ORDERNUM` int(11) NOT NULL,
  `OUT_OF_PATTEN_SENTENCE_FK` int(11) DEFAULT NULL,
  `SENTENCE_FK` int(11) DEFAULT NULL,
  `J2EE_STORY_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `OUT_OF_PATTEN_SENTENCE_FK` (`OUT_OF_PATTEN_SENTENCE_FK`),
  UNIQUE KEY `SENTENCE_FK` (`SENTENCE_FK`),
  KEY `MANUAL_STEP_OUT_OF_PATTEN_SENC` (`OUT_OF_PATTEN_SENTENCE_FK`),
  KEY `MANUAL_STEP_J2EE_STORY_FKC` (`J2EE_STORY_FK`),
  KEY `MANUAL_STEP_SENTENCE_FKC` (`SENTENCE_FK`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `manual_step`
--

LOCK TABLES `manual_step` WRITE;
/*!40000 ALTER TABLE `manual_step` DISABLE KEYS */;
/*!40000 ALTER TABLE `manual_step` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `noun`
--

DROP TABLE IF EXISTS `noun`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `noun` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `VALID` tinyint(4) NOT NULL,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `JAPANESE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `J2EE_STORY_FK` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `NOUN_J2EE_STORY_FKC` (`J2EE_STORY_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=45 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `noun`
--

LOCK TABLES `noun` WRITE;
/*!40000 ALTER TABLE `noun` DISABLE KEYS */;
INSERT INTO `noun` VALUES (1,1,'Node','',1),(2,1,'NodeInterface','',1),(3,1,'NodeUse','',1),(4,1,'LinkUse','',1),(5,1,'User','',1),(6,1,'NodeUser','1',NULL),(7,1,'Roi','',1),(8,1,'Link','1',NULL),(9,1,'NodeField','1',NULL),(10,1,'Link','',1),(11,1,'NodeField','',1),(12,1,'Graph','',1),(13,1,'NodeUser','',1),(14,1,'SecualEvent','',2),(15,1,'SubscriptionLisense','',2),(16,1,'Group','',2),(17,1,'PublicUser','一般ユーザー',2),(18,1,'ReferralCode','',2),(19,1,'ConfigurationChange','',2),(20,1,'NotificationMethodGroup','',2),(21,1,'Account','',2),(22,1,'NearBy','',2),(23,1,'SecualAlert','',2),(24,1,'NotificationMethod','',2),(25,1,'Gateway','',2),(26,1,'User','',2),(27,1,'Adminuser','',2),(28,1,'Companytoken','',2),(29,1,'Contactmail','',2),(30,1,'Faq','',2),(31,1,'Faqcategory','',2),(32,1,'Gatewaytrail','',2),(33,1,'Pattern','',2),(34,1,'Patternlock','',2),(35,1,'Plan','',2),(36,1,'Property','',2),(37,1,'Role','',2),(38,1,'Schema','',2),(39,1,'Secualevent','',2),(40,1,'Sensor','',2),(41,1,'Sensortrail','',2),(42,1,'Subscription','',2),(43,1,'Supporttitle','',2),(44,1,'Transaction','',2);
/*!40000 ALTER TABLE `noun` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `noun_associations`
--

DROP TABLE IF EXISTS `noun_associations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `noun_associations` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `PARENT_NOUN_FK` int(11) NOT NULL,
  `CHILD_NOUN_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `noun_associations`
--

LOCK TABLES `noun_associations` WRITE;
/*!40000 ALTER TABLE `noun_associations` DISABLE KEYS */;
/*!40000 ALTER TABLE `noun_associations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `noun_clause`
--

DROP TABLE IF EXISTS `noun_clause`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `noun_clause` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CODE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM AUTO_INCREMENT=97 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `noun_clause`
--

LOCK TABLES `noun_clause` WRITE;
/*!40000 ALTER TABLE `noun_clause` DISABLE KEYS */;
INSERT INTO `noun_clause` VALUES (1,''),(2,''),(3,''),(4,''),(5,''),(6,''),(7,''),(8,''),(9,''),(10,''),(11,''),(12,''),(13,''),(14,''),(15,''),(16,''),(17,''),(18,''),(19,''),(20,''),(21,''),(22,''),(23,''),(24,''),(25,''),(26,''),(27,''),(28,''),(29,''),(30,''),(31,''),(32,''),(33,''),(34,''),(35,''),(36,''),(37,''),(38,''),(39,''),(40,''),(41,''),(42,''),(43,''),(44,''),(45,''),(46,''),(47,''),(48,''),(49,''),(50,''),(51,''),(52,''),(53,''),(54,''),(55,''),(56,''),(57,''),(58,''),(59,''),(60,''),(61,''),(62,''),(63,''),(64,''),(65,''),(66,''),(67,''),(68,''),(69,''),(70,''),(71,''),(72,''),(73,''),(74,''),(75,''),(76,''),(77,''),(78,''),(79,''),(80,''),(81,''),(82,''),(83,''),(84,''),(85,''),(86,''),(87,''),(88,''),(89,''),(90,''),(91,''),(92,''),(93,''),(94,''),(95,''),(96,'');
/*!40000 ALTER TABLE `noun_clause` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `noun_use`
--

DROP TABLE IF EXISTS `noun_use`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `noun_use` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `MUTIPLE` tinyint(4) NOT NULL,
  `OFORDER` int(11) NOT NULL,
  `NOUN_FK` int(11) NOT NULL,
  `NOUN_CLAUSE_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `NOUN_USE_NOUN_CLAUSE_FKC` (`NOUN_CLAUSE_FK`),
  KEY `NOUN_USE_NOUN_FKC` (`NOUN_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=94 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `noun_use`
--

LOCK TABLES `noun_use` WRITE;
/*!40000 ALTER TABLE `noun_use` DISABLE KEYS */;
INSERT INTO `noun_use` VALUES (1,1,1,1,2),(2,1,1,2,3),(3,0,1,1,4),(4,0,1,1,5),(5,0,1,1,6),(6,0,1,1,7),(7,0,1,1,8),(8,1,1,3,9),(9,1,1,4,10),(10,1,1,5,11),(11,1,1,6,12),(12,1,1,7,13),(13,1,1,8,14),(14,1,1,9,15),(15,1,1,10,16),(16,1,1,11,17),(17,1,1,12,18),(18,1,1,13,19),(19,0,1,11,20),(20,0,1,10,21),(21,0,1,5,22),(22,0,1,4,23),(23,0,1,13,24),(24,0,1,4,25),(25,0,1,13,26),(26,1,1,14,27),(27,1,1,15,28),(28,1,1,16,29),(29,1,1,17,30),(30,1,1,18,31),(31,1,1,19,32),(32,1,1,20,33),(33,1,1,21,34),(34,1,1,22,35),(35,1,1,23,36),(36,1,1,24,37),(37,0,1,14,38),(38,0,1,14,39),(39,0,1,25,40),(40,0,1,26,41),(41,0,1,26,42),(42,0,1,26,43),(43,0,1,26,44),(44,0,1,21,45),(45,0,1,14,46),(46,0,1,25,47),(47,0,1,16,48),(48,0,1,26,49),(49,0,1,26,50),(50,0,1,26,51),(51,0,1,26,52),(52,0,1,16,53),(53,0,1,21,54),(54,0,1,21,55),(55,0,1,21,56),(56,0,1,19,57),(57,0,1,23,58),(58,0,1,14,59),(59,0,1,20,61),(60,1,1,25,62),(61,1,1,26,63),(62,1,1,27,65),(63,1,1,28,66),(64,1,1,29,67),(65,1,1,30,68),(66,1,1,31,69),(67,1,1,32,70),(68,1,1,33,71),(69,1,1,34,72),(70,1,1,35,73),(71,1,1,36,74),(72,1,1,37,75),(73,1,1,38,76),(74,1,1,39,77),(75,1,1,40,78),(76,1,1,41,79),(77,1,1,42,80),(78,1,1,43,81),(79,1,1,44,82),(80,0,1,21,83),(81,0,1,21,84),(82,0,1,25,85),(83,0,1,21,86),(84,0,1,25,87),(85,0,1,21,88),(86,0,1,30,89),(87,0,1,35,90),(88,0,1,21,91),(89,0,1,26,92),(90,0,1,21,93),(91,0,1,37,94),(92,0,1,21,95),(93,0,1,21,96);
/*!40000 ALTER TABLE `noun_use` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `out_of_patten_sentence`
--

DROP TABLE IF EXISTS `out_of_patten_sentence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `out_of_patten_sentence` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ESTIMATEDTIME` int(11) NOT NULL,
  `J2EE_STORY_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `OUT_OF_PATTEN_SENTENCE_J2EE_SC` (`J2EE_STORY_FK`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `out_of_patten_sentence`
--

LOCK TABLES `out_of_patten_sentence` WRITE;
/*!40000 ALTER TABLE `out_of_patten_sentence` DISABLE KEYS */;
/*!40000 ALTER TABLE `out_of_patten_sentence` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `post_template`
--

DROP TABLE IF EXISTS `post_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `post_template` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post_template`
--

LOCK TABLES `post_template` WRITE;
/*!40000 ALTER TABLE `post_template` DISABLE KEYS */;
/*!40000 ALTER TABLE `post_template` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sentence`
--

DROP TABLE IF EXISTS `sentence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sentence` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `STRUTS_CONFIG_CODE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `VALID` tinyint(4) NOT NULL,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `VERB_FK` int(11) NOT NULL,
  `SECOUNTOBJECTIVE_FK` int(11) DEFAULT NULL,
  `FIRSTOBJECTIVE_FK` int(11) NOT NULL,
  `J2EE_STORY_FK` int(11) DEFAULT NULL,
  `JAPANESE` varchar(255) NOT NULL,
  `MAINTEST_FK` int(11) DEFAULT NULL,
  `MODIFIED` tinyint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `SENTENCE_J2EE_STORY_FKC` (`J2EE_STORY_FK`),
  KEY `SENTENCE_FIRSTOBJECTIVE_FKC` (`FIRSTOBJECTIVE_FK`),
  KEY `SENTENCE_VERB_FKC` (`VERB_FK`),
  KEY `SENTENCE_SECOUNTOBJECTIVE_FKC` (`SECOUNTOBJECTIVE_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=90 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sentence`
--

LOCK TABLES `sentence` WRITE;
/*!40000 ALTER TABLE `sentence` DISABLE KEYS */;
INSERT INTO `sentence` VALUES (1,'',0,'',6,NULL,2,1,'',NULL,0),(2,'',0,'',6,NULL,3,1,'',NULL,0),(3,'	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeResource.java\" type=\"net.nodepad.web.app.NodeResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeConverter.java\" type=\"net.nodepad.web.app.NodeConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeDto.java\" type=\"net.nodepad.web.app.NodeDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeEntity.java\" type=\"net.nodepad.web.app.NodeEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeRepository.java\" type=\"net.nodepad.web.app.NodeRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeService.java\" type=\"net.nodepad.web.app.NodeService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,4,1,'',NULL,0),(4,'	<action path=\"/PostNodeVPAsTest\" name=\"NodeForm\" type=\"net.nodepad.web.app.PostNodeVPAsTestAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/PostNodeDetailAsTest\" type=\"net.nodepad.web.app.PostNodeDetailAsTestAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'AsTest',8,NULL,5,1,'',NULL,0),(5,'	<action path=\"/PostNodeVPForContentOnly\" name=\"NodeForm\" type=\"net.nodepad.web.app.PostNodeVPForContentOnlyAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/PostNodeDetailForContentOnly\" type=\"net.nodepad.web.app.PostNodeDetailForContentOnlyAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'ForContentOnly',8,NULL,6,1,'',NULL,0),(6,'	<action path=\"/ShowNodeWidthAndHeight\" type=\"net.nodepad.web.app.ShowNodeWidthAndHeightAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'WidthAndHeight',10,NULL,7,1,'',NULL,0),(7,'	<action path=\"/Nodes\" type=\"net.nodepad.web.app.NodesAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',9,NULL,8,1,'',NULL,0),(8,'',0,'',6,NULL,9,1,'',NULL,0),(9,'',0,'',6,NULL,10,1,'',NULL,0),(10,'',0,'',6,NULL,11,1,'',NULL,0),(11,'',0,'',6,NULL,12,NULL,'',NULL,0),(12,'',0,'',6,NULL,13,1,'',NULL,0),(13,'',0,'',6,NULL,14,NULL,'',NULL,0),(14,'',0,'',6,NULL,15,NULL,'',NULL,0),(15,'',0,'',6,NULL,16,1,'',NULL,0),(16,'',0,'',6,NULL,17,1,'',NULL,0),(17,'',0,'',6,NULL,18,1,'',NULL,0),(18,'',0,'',6,NULL,19,1,'',NULL,0),(19,'	<action path=\"/NodeFieldResource.java\" type=\"net.nodepad.web.app.NodeFieldResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldConverter\" type=\"net.nodepad.web.app.NodeFieldConverterAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldDto\" type=\"net.nodepad.web.app.NodeFieldDtoAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldEntity\" type=\"net.nodepad.web.app.NodeFieldEntityAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldRepository\" type=\"net.nodepad.web.app.NodeFieldRepositoryAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldService\" type=\"net.nodepad.web.app.NodeFieldServiceAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldResource.java.java\" type=\"net.nodepad.web.app.NodeFieldResource.java.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldConverter.java\" type=\"net.nodepad.web.app.NodeFieldConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldDto.java\" type=\"net.nodepad.web.app.NodeFieldDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldEntity.java\" type=\"net.nodepad.web.app.NodeFieldEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldRepository.java\" type=\"net.nodepad.web.app.NodeFieldRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldService.java\" type=\"net.nodepad.web.app.NodeFieldService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeFieldResource.java\" type=\"net.nodepad.web.app.NodeFieldResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,20,1,'',NULL,0),(20,'	<action path=\"/LinkResource.java\" type=\"net.nodepad.web.app.LinkResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkResource.java\" type=\"net.nodepad.web.app.LinkResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkConverter\" type=\"net.nodepad.web.app.LinkConverterAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkDto\" type=\"net.nodepad.web.app.LinkDtoAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkEntity\" type=\"net.nodepad.web.app.LinkEntityAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkRepository\" type=\"net.nodepad.web.app.LinkRepositoryAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkService\" type=\"net.nodepad.web.app.LinkServiceAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkResource.java.java\" type=\"net.nodepad.web.app.LinkResource.java.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkConverter.java\" type=\"net.nodepad.web.app.LinkConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkDto.java\" type=\"net.nodepad.web.app.LinkDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkEntity.java\" type=\"net.nodepad.web.app.LinkEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkRepository.java\" type=\"net.nodepad.web.app.LinkRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkService.java\" type=\"net.nodepad.web.app.LinkService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,21,1,'',NULL,0),(21,'	<action path=\"/UserResource.java\" type=\"net.nodepad.web.app.UserResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserConverter\" type=\"net.nodepad.web.app.UserConverterAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserDto\" type=\"net.nodepad.web.app.UserDtoAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserEntity\" type=\"net.nodepad.web.app.UserEntityAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserRepository\" type=\"net.nodepad.web.app.UserRepositoryAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserService\" type=\"net.nodepad.web.app.UserServiceAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserResource.java.java\" type=\"net.nodepad.web.app.UserResource.java.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserConverter.java\" type=\"net.nodepad.web.app.UserConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserDto.java\" type=\"net.nodepad.web.app.UserDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserEntity.java\" type=\"net.nodepad.web.app.UserEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserRepository.java\" type=\"net.nodepad.web.app.UserRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserService.java\" type=\"net.nodepad.web.app.UserService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/UserResource.java\" type=\"net.nodepad.web.app.UserResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,22,1,'',NULL,0),(22,'	<action path=\"/LinkUseResource.java\" type=\"net.nodepad.web.app.LinkUseResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseConverter\" type=\"net.nodepad.web.app.LinkUseConverterAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseDto\" type=\"net.nodepad.web.app.LinkUseDtoAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseEntity\" type=\"net.nodepad.web.app.LinkUseEntityAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseRepository\" type=\"net.nodepad.web.app.LinkUseRepositoryAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseService\" type=\"net.nodepad.web.app.LinkUseServiceAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseResource.java.java\" type=\"net.nodepad.web.app.LinkUseResource.java.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseConverter.java\" type=\"net.nodepad.web.app.LinkUseConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseDto.java\" type=\"net.nodepad.web.app.LinkUseDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseEntity.java\" type=\"net.nodepad.web.app.LinkUseEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseRepository.java\" type=\"net.nodepad.web.app.LinkUseRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseService.java\" type=\"net.nodepad.web.app.LinkUseService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseResource.java\" type=\"net.nodepad.web.app.LinkUseResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,23,1,'',NULL,0),(23,'	<action path=\"/AbstractConverter\" type=\"net.nodepad.web.app.AbstractConverterAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserResource.java\" type=\"net.nodepad.web.app.NodeUserResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserConverter\" type=\"net.nodepad.web.app.NodeUserConverterAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserDto\" type=\"net.nodepad.web.app.NodeUserDtoAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserEntity\" type=\"net.nodepad.web.app.NodeUserEntityAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserRepository\" type=\"net.nodepad.web.app.NodeUserRepositoryAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserService\" type=\"net.nodepad.web.app.NodeUserServiceAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserResource.java.java\" type=\"net.nodepad.web.app.NodeUserResource.java.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserConverter.java\" type=\"net.nodepad.web.app.NodeUserConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserDto.java\" type=\"net.nodepad.web.app.NodeUserDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserEntity.java\" type=\"net.nodepad.web.app.NodeUserEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserRepository.java\" type=\"net.nodepad.web.app.NodeUserRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserService.java\" type=\"net.nodepad.web.app.NodeUserService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserResource.java\" type=\"net.nodepad.web.app.NodeUserResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,24,1,'',NULL,0),(24,'	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseConverter.java\" type=\"net.nodepad.web.app.LinkUseConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseDto.java\" type=\"net.nodepad.web.app.LinkUseDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseEntity.java\" type=\"net.nodepad.web.app.LinkUseEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseRepository.java\" type=\"net.nodepad.web.app.LinkUseRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseService.java\" type=\"net.nodepad.web.app.LinkUseService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LinkUseResource.java\" type=\"net.nodepad.web.app.LinkUseResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,25,1,'',NULL,0),(25,'	<action path=\"/AbstractConverter.java\" type=\"net.nodepad.web.app.AbstractConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserConverter.java\" type=\"net.nodepad.web.app.NodeUserConverter.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserDto.java\" type=\"net.nodepad.web.app.NodeUserDto.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserEntity.java\" type=\"net.nodepad.web.app.NodeUserEntity.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserRepository.java\" type=\"net.nodepad.web.app.NodeUserRepository.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserService.java\" type=\"net.nodepad.web.app.NodeUserService.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/NodeUserResource.java\" type=\"net.nodepad.web.app.NodeUserResource.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',20,NULL,26,1,'',NULL,0),(26,'	<action path=\"/SecualEventDetail.java\" type=\"net.secual.web.SecualEventDetail.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SecualEventVP.java\" name=\"SecualEventForm\" type=\"net.secual.web.SecualEventVP.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SecualEvents.java\" type=\"net.secual.web.SecualEvents.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/DeleteSecualEvent.java\" type=\"net.secual.web.DeleteSecualEvent.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SecualEventRSSExport.java\" type=\"net.secual.web.SecualEventRSSExport.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SecualEventInputRss.java\" type=\"net.secual.web.SecualEventInputRss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSelectionOfSecualEvent##attr##.java\" type=\"net.secual.web.SetSelectionOfSecualEvent##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSecualEvent##Attr##.java\" type=\"net.secual.web.SetSecualEvent##Attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSecualEventNon##attr##.java\" type=\"net.secual.web.SetSecualEventNon##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/CopyASecualEventFromASecualEvent.java\" type=\"net.secual.web.CopyASecualEventFromASecualEvent.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/XlsExportOfSecualEvent.java\" type=\"net.secual.web.XlsExportOfSecualEvent.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/GrepSecualEventOn##attr##.java\" type=\"net.secual.web.GrepSecualEventOn##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',6,NULL,27,2,'',NULL,0),(27,'	<action path=\"/SubscriptionLisenseDetail.java\" type=\"net.secual.web.SubscriptionLisenseDetail.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SubscriptionLisenseVP.java\" name=\"SubscriptionLisenseForm\" type=\"net.secual.web.SubscriptionLisenseVP.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SubscriptionLisenses.java\" type=\"net.secual.web.SubscriptionLisenses.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/DeleteSubscriptionLisense.java\" type=\"net.secual.web.DeleteSubscriptionLisense.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SubscriptionLisenseRSSExport.java\" type=\"net.secual.web.SubscriptionLisenseRSSExport.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SubscriptionLisenseInputRss.java\" type=\"net.secual.web.SubscriptionLisenseInputRss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSelectionOfSubscriptionLisense##attr##.java\" type=\"net.secual.web.SetSelectionOfSubscriptionLisense##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSubscriptionLisense##Attr##.java\" type=\"net.secual.web.SetSubscriptionLisense##Attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSubscriptionLisenseNon##attr##.java\" type=\"net.secual.web.SetSubscriptionLisenseNon##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/CopyASubscriptionLisenseFromASubscriptionLisense.java\" type=\"net.secual.web.CopyASubscriptionLisenseFromASubscriptionLisense.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/XlsExportOfSubscriptionLisense.java\" type=\"net.secual.web.XlsExportOfSubscriptionLisense.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/GrepSubscriptionLisenseOn##attr##.java\" type=\"net.secual.web.GrepSubscriptionLisenseOn##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',6,NULL,28,2,'',NULL,0),(28,'',0,'',6,NULL,29,2,'',NULL,0),(29,'',0,'',6,NULL,30,2,'',NULL,0),(30,'',0,'',6,NULL,31,2,'',NULL,0),(31,'	<action path=\"/ConfigurationChangeDetail.java\" type=\"net.secual.web.ConfigurationChangeDetail.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/ConfigurationChangeVP.java\" name=\"ConfigurationChangeForm\" type=\"net.secual.web.ConfigurationChangeVP.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/ConfigurationChanges.java\" type=\"net.secual.web.ConfigurationChanges.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/DeleteConfigurationChange.java\" type=\"net.secual.web.DeleteConfigurationChange.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/ConfigurationChangeRSSExport.java\" type=\"net.secual.web.ConfigurationChangeRSSExport.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/ConfigurationChangeInputRss.java\" type=\"net.secual.web.ConfigurationChangeInputRss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetSelectionOfConfigurationChange##attr##.java\" type=\"net.secual.web.SetSelectionOfConfigurationChange##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetConfigurationChange##Attr##.java\" type=\"net.secual.web.SetConfigurationChange##Attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/SetConfigurationChangeNon##attr##.java\" type=\"net.secual.web.SetConfigurationChangeNon##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/CopyAConfigurationChangeFromAConfigurationChange.java\" type=\"net.secual.web.CopyAConfigurationChangeFromAConfigurationChange.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/XlsExportOfConfigurationChange.java\" type=\"net.secual.web.XlsExportOfConfigurationChange.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/GrepConfigurationChangeOn##attr##.java\" type=\"net.secual.web.GrepConfigurationChangeOn##attr##.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',6,NULL,32,2,'',NULL,0),(32,'',0,'',6,NULL,33,2,'',NULL,0),(33,'',0,'',6,NULL,34,2,'',NULL,0),(34,'',0,'',6,NULL,35,2,'',NULL,0),(35,'',0,'',6,NULL,36,2,'',NULL,0),(36,'',0,'',6,NULL,37,2,'',NULL,0),(37,'',0,'',21,NULL,38,2,'',NULL,0),(38,'',0,'',24,NULL,39,2,'',NULL,0),(39,'	<action path=\"/gateway.c.java\" type=\"net.secual.web.app.gateway.c.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/gateway.h.java\" type=\"net.secual.web.app.gateway.h.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',25,NULL,40,2,'',NULL,0),(61,'',0,'',6,NULL,65,2,'',NULL,0),(62,'',0,'',6,NULL,66,2,'',NULL,0),(63,'',0,'',6,NULL,67,2,'',NULL,0),(64,'',0,'',6,NULL,68,2,'',NULL,0),(65,'',0,'',6,NULL,69,2,'',NULL,0),(66,'',0,'',6,NULL,70,2,'',NULL,0),(67,'',0,'',6,NULL,71,2,'',NULL,0),(68,'',0,'',6,NULL,72,2,'',NULL,0),(69,'',0,'',6,NULL,73,2,'',NULL,0),(70,'',0,'',6,NULL,74,2,'',NULL,0),(71,'',0,'',6,NULL,75,2,'',NULL,0),(72,'',0,'',6,NULL,76,2,'',NULL,0),(73,'',0,'',6,NULL,77,2,'',NULL,0),(74,'',0,'',6,NULL,78,2,'',NULL,0),(75,'',0,'',6,NULL,79,2,'',NULL,0),(76,'',0,'',6,NULL,80,2,'',NULL,0),(77,'',0,'',6,NULL,81,2,'',NULL,0),(78,'',0,'',6,NULL,82,2,'',NULL,0),(79,'	<action path=\"/PostAccountVPForPassword.java\" name=\"AccountForm\" type=\"net.secual.web.app.PostAccountVPForPassword.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/PostAccountDetailForPassword.java\" type=\"net.secual.web.app.PostAccountDetailForPassword.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'ForPassword',8,NULL,83,2,'',NULL,0),(59,'',0,'',6,NULL,62,2,'',NULL,0),(60,'',0,'',6,NULL,63,2,'',NULL,0),(58,'	<action path=\"/secualEvent.service.js.java\" type=\"net.secual.web.app.secualEvent.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvents.controller.js.java\" type=\"net.secual.web.app.secualEvents.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.add.scss.java\" type=\"net.secual.web.app.secualEvent.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.add.route.js.java\" type=\"net.secual.web.app.secualEvent.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.edit.controller.js.java\" type=\"net.secual.web.app.secualEvent.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.edit.html.java\" type=\"net.secual.web.app.secualEvent.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.edit.scss.java\" type=\"net.secual.web.app.secualEvent.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.edit.route.js.java\" type=\"net.secual.web.app.secualEvent.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.add.html.java\" type=\"net.secual.web.app.secualEvent.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.add.controller.js.java\" type=\"net.secual.web.app.secualEvent.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.html.java\" type=\"net.secual.web.app.secualEvent.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.scss.java\" type=\"net.secual.web.app.secualEvent.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualEvent.route.js.java\" type=\"net.secual.web.app.secualEvent.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,59,2,'',NULL,0),(57,'	<action path=\"/secualAlert.edit.controller.js.java\" type=\"net.secual.web.app.secualAlert.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.edit.html.java\" type=\"net.secual.web.app.secualAlert.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.edit.scss.java\" type=\"net.secual.web.app.secualAlert.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.edit.route.js.java\" type=\"net.secual.web.app.secualAlert.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.add.html.java\" type=\"net.secual.web.app.secualAlert.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.add.controller.js.java\" type=\"net.secual.web.app.secualAlert.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.html.java\" type=\"net.secual.web.app.secualAlert.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlerts.controller.js.java\" type=\"net.secual.web.app.secualAlerts.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.add.scss.java\" type=\"net.secual.web.app.secualAlert.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.add.route.js.java\" type=\"net.secual.web.app.secualAlert.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.scss.java\" type=\"net.secual.web.app.secualAlert.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.route.js.java\" type=\"net.secual.web.app.secualAlert.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/secualAlert.service.js.java\" type=\"net.secual.web.app.secualAlert.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,58,2,'',NULL,0),(56,'	<action path=\"/configurationChange.edit.controller.js.java\" type=\"net.secual.web.app.configurationChange.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.edit.html.java\" type=\"net.secual.web.app.configurationChange.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.edit.scss.java\" type=\"net.secual.web.app.configurationChange.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.edit.route.js.java\" type=\"net.secual.web.app.configurationChange.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.add.html.java\" type=\"net.secual.web.app.configurationChange.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.add.controller.js.java\" type=\"net.secual.web.app.configurationChange.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.html.java\" type=\"net.secual.web.app.configurationChange.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChanges.controller.js.java\" type=\"net.secual.web.app.configurationChanges.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.add.scss.java\" type=\"net.secual.web.app.configurationChange.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.add.route.js.java\" type=\"net.secual.web.app.configurationChange.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.scss.java\" type=\"net.secual.web.app.configurationChange.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.route.js.java\" type=\"net.secual.web.app.configurationChange.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/configurationChange.service.js.java\" type=\"net.secual.web.app.configurationChange.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,57,2,'',NULL,0),(55,'	<action path=\"/accounts.controller.js.java\" type=\"net.secual.web.app.accounts.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.scss.java\" type=\"net.secual.web.app.account.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.route.js.java\" type=\"net.secual.web.app.account.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.service.js.java\" type=\"net.secual.web.app.account.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.scss.java\" type=\"net.secual.web.app.account.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.route.js.java\" type=\"net.secual.web.app.account.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.html.java\" type=\"net.secual.web.app.account.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.controller.js.java\" type=\"net.secual.web.app.account.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.html.java\" type=\"net.secual.web.app.account.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.route.js.java\" type=\"net.secual.web.app.account.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.html.java\" type=\"net.secual.web.app.account.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.scss.java\" type=\"net.secual.web.app.account.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.controller.js.java\" type=\"net.secual.web.app.account.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,56,2,'',NULL,0),(54,'	<action path=\"/accounts.controller.js.java\" type=\"net.secual.web.app.accounts.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.scss.java\" type=\"net.secual.web.app.account.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.route.js.java\" type=\"net.secual.web.app.account.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.service.js.java\" type=\"net.secual.web.app.account.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.scss.java\" type=\"net.secual.web.app.account.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.route.js.java\" type=\"net.secual.web.app.account.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.html.java\" type=\"net.secual.web.app.account.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.controller.js.java\" type=\"net.secual.web.app.account.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.html.java\" type=\"net.secual.web.app.account.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.route.js.java\" type=\"net.secual.web.app.account.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.html.java\" type=\"net.secual.web.app.account.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.scss.java\" type=\"net.secual.web.app.account.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.controller.js.java\" type=\"net.secual.web.app.account.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,55,2,'',NULL,0),(53,'	<action path=\"/accounts.controller.js.java\" type=\"net.secual.web.app.accounts.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.scss.java\" type=\"net.secual.web.app.account.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.route.js.java\" type=\"net.secual.web.app.account.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.service.js.java\" type=\"net.secual.web.app.account.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.scss.java\" type=\"net.secual.web.app.account.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.route.js.java\" type=\"net.secual.web.app.account.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.html.java\" type=\"net.secual.web.app.account.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.controller.js.java\" type=\"net.secual.web.app.account.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.html.java\" type=\"net.secual.web.app.account.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.route.js.java\" type=\"net.secual.web.app.account.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.html.java\" type=\"net.secual.web.app.account.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.scss.java\" type=\"net.secual.web.app.account.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.controller.js.java\" type=\"net.secual.web.app.account.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,54,2,'',NULL,0),(51,'	<action path=\"/user.service.js.java\" type=\"net.secual.web.app.user.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.scss.java\" type=\"net.secual.web.app.user.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.route.js.java\" type=\"net.secual.web.app.user.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.scss.java\" type=\"net.secual.web.app.user.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.route.js.java\" type=\"net.secual.web.app.user.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.html.java\" type=\"net.secual.web.app.user.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/users.controller.js.java\" type=\"net.secual.web.app.users.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.controller.js.java\" type=\"net.secual.web.app.user.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.route.js.java\" type=\"net.secual.web.app.user.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.html.java\" type=\"net.secual.web.app.user.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.scss.java\" type=\"net.secual.web.app.user.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.controller.js.java\" type=\"net.secual.web.app.user.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.html.java\" type=\"net.secual.web.app.user.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,52,2,'',NULL,0),(52,'	<action path=\"/group.route.js.java\" type=\"net.secual.web.app.group.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.scss.java\" type=\"net.secual.web.app.group.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.add.html.java\" type=\"net.secual.web.app.group.add.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.add.controller.js.java\" type=\"net.secual.web.app.group.add.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.html.java\" type=\"net.secual.web.app.group.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.edit.scss.java\" type=\"net.secual.web.app.group.edit.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.edit.route.js.java\" type=\"net.secual.web.app.group.edit.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.edit.html.java\" type=\"net.secual.web.app.group.edit.html.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.edit.controller.js.java\" type=\"net.secual.web.app.group.edit.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.service.js.java\" type=\"net.secual.web.app.group.service.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/groups.controller.js.java\" type=\"net.secual.web.app.groups.controller.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.add.scss.java\" type=\"net.secual.web.app.group.add.scss.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/group.add.route.js.java\" type=\"net.secual.web.app.group.add.route.js.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'',26,NULL,53,2,'',NULL,0),(80,'',0,'',28,NULL,84,2,'',NULL,0),(81,'',0,'',28,86,85,2,'',NULL,0),(82,'	<action path=\"/gateway.controller.rbgateway-railcontroller.java\" type=\"net.secual.web.app.gateway.controller.rbgateway-railcontroller.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'gateway-railcontroller',29,NULL,87,2,'',NULL,0),(83,'	<action path=\"/account.controller.rbaccountrailcontroller.java\" type=\"net.secual.web.app.account.controller.rbaccountrailcontroller.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.controller.rbAccountRailsController.java\" type=\"net.secual.web.app.account.controller.rbAccountRailsController.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.basiccontroller.rbAccountRailsController.java\" type=\"net.secual.web.app.account.basiccontroller.rbAccountRailsController.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'AccountRailsController',29,NULL,88,2,'',NULL,0),(84,'	<action path=\"/Logintest.java\" type=\"net.secual.web.app.Logintest.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/LoginPretest.java\" type=\"net.secual.web.app.LoginPretest.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'test',12,90,89,2,'',NULL,0),(85,'	<action path=\"/account.edit.controller.jsAccountAngularModel.java\" type=\"net.secual.web.app.account.edit.controller.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.htmlAccountAngularModel.java\" type=\"net.secual.web.app.account.edit.htmlAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.scssAccountAngularModel.java\" type=\"net.secual.web.app.account.edit.scssAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.edit.route.jsAccountAngularModel.java\" type=\"net.secual.web.app.account.edit.route.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.htmlAccountAngularModel.java\" type=\"net.secual.web.app.account.add.htmlAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.controller.jsAccountAngularModel.java\" type=\"net.secual.web.app.account.add.controller.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.htmlAccountAngularModel.java\" type=\"net.secual.web.app.account.htmlAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/accounts.controller.jsAccountAngularModel.java\" type=\"net.secual.web.app.accounts.controller.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.scssAccountAngularModel.java\" type=\"net.secual.web.app.account.add.scssAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.add.route.jsAccountAngularModel.java\" type=\"net.secual.web.app.account.add.route.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.scssAccountAngularModel.java\" type=\"net.secual.web.app.account.scssAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.route.jsAccountAngularModel.java\" type=\"net.secual.web.app.account.route.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/account.service.jsAccountAngularModel.java\" type=\"net.secual.web.app.account.service.jsAccountAngularModel.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'AccountAngularModel',26,NULL,91,2,'',NULL,0),(86,'	<action path=\"/user.edit.controller.jsAngularModelUser.java\" type=\"net.secual.web.app.user.edit.controller.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.htmlAngularModelUser.java\" type=\"net.secual.web.app.user.edit.htmlAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.scssAngularModelUser.java\" type=\"net.secual.web.app.user.edit.scssAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.edit.route.jsAngularModelUser.java\" type=\"net.secual.web.app.user.edit.route.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.htmlAngularModelUser.java\" type=\"net.secual.web.app.user.add.htmlAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.controller.jsAngularModelUser.java\" type=\"net.secual.web.app.user.add.controller.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.htmlAngularModelUser.java\" type=\"net.secual.web.app.user.htmlAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/users.controller.jsAngularModelUser.java\" type=\"net.secual.web.app.users.controller.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.scssAngularModelUser.java\" type=\"net.secual.web.app.user.add.scssAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.add.route.jsAngularModelUser.java\" type=\"net.secual.web.app.user.add.route.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.scssAngularModelUser.java\" type=\"net.secual.web.app.user.scssAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.route.jsAngularModelUser.java\" type=\"net.secual.web.app.user.route.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n	<action path=\"/user.service.jsAngularModelUser.java\" type=\"net.secual.web.app.user.service.jsAngularModelUser.javaAction\">\r\n  <forward name=\"success\" path=\"\" />\r\n</action>\r\n',0,'AngularModelUser',26,NULL,92,2,'',NULL,0),(87,'',0,'test',23,94,93,2,'',NULL,0),(88,'',0,'',29,NULL,95,2,'',NULL,0),(89,'',0,'id,token',29,NULL,96,2,'',NULL,0);
/*!40000 ALTER TABLE `sentence` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `static_data`
--

DROP TABLE IF EXISTS `static_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `static_data` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DOCUMENT_ARRIVED_REPORT_TEMPLA` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `DOCUMENT_REQUEST_TEMPLATE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `INFORSSURL` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `REPORTMAIL` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `CRTMAX` int(11) NOT NULL,
  `ARPMAX` int(11) NOT NULL,
  `ECLIPSEROOT` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `STORYTELLERBYPROJECTTEAMRATE` float NOT NULL,
  `PROJECTBYSTORYTELLERRATE` float NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `static_data`
--

LOCK TABLES `static_data` WRITE;
/*!40000 ALTER TABLE `static_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `static_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `storyteller`
--

DROP TABLE IF EXISTS `storyteller`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `storyteller` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `MAIL` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `storyteller`
--

LOCK TABLES `storyteller` WRITE;
/*!40000 ALTER TABLE `storyteller` DISABLE KEYS */;
/*!40000 ALTER TABLE `storyteller` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `storyteller_page`
--

DROP TABLE IF EXISTS `storyteller_page`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `storyteller_page` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TITLE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `JSP_FK` int(11) DEFAULT NULL,
  `STRUTS_ACTION_FK` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `JSP_FK` (`JSP_FK`),
  UNIQUE KEY `STRUTS_ACTION_FK` (`STRUTS_ACTION_FK`),
  KEY `STORYTELLER_PAGE_STRUTS_ACTIOC` (`STRUTS_ACTION_FK`),
  KEY `STORYTELLER_PAGE_JSP_FKC` (`JSP_FK`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `storyteller_page`
--

LOCK TABLES `storyteller_page` WRITE;
/*!40000 ALTER TABLE `storyteller_page` DISABLE KEYS */;
/*!40000 ALTER TABLE `storyteller_page` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `struts_action`
--

DROP TABLE IF EXISTS `struts_action`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `struts_action` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CODE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `FILENAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `SENTENCE_FK` int(11) NOT NULL,
  `TARGETEEJSP_FK` int(11) DEFAULT NULL,
  `TARGETEEACTION_FK` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `STRUTS_ACTION_SENTENCE_FKC` (`SENTENCE_FK`),
  KEY `STRUTS_ACTION_TARGETEEACTION_C` (`TARGETEEACTION_FK`),
  KEY `STRUTS_ACTION_TARGETEEJSP_FKC` (`TARGETEEJSP_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=330 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `struts_action`
--

LOCK TABLES `struts_action` WRITE;
/*!40000 ALTER TABLE `struts_action` DISABLE KEYS */;
INSERT INTO `struts_action` VALUES (81,'package com.theuniversalgraph.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport com.theuniversalgraph.api.rest.dto.LinkDto;\r\nimport com.theuniversalgraph.api.rest.service.LinkService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Links\")\r\n@Api(value = \"Link API\")\r\npublic class LinkResource {\r\n\r\n    @Autowired\r\n    private LinkService linkService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<LinkDto> getAllLinks() {\r\n        return linkService.getAllLinks();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public LinkDto getLink(@PathVariable final String id) {\r\n        return linkService.getLink(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<LinkDto> addLink(@RequestBody final LinkDto link) {\r\n        LinkDto createdLink = linkService.createLink(link);\r\n        return new ResponseEntity<>(createdLink, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteLink(@PathVariable final String id) {\r\n        linkService.deleteLink(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<LinkDto> updateLink(@PathVariable final String id, @RequestBody final LinkDto link) {\r\n        LinkDto createdLink = linkService.updateLink(id, link);\r\n        return new ResponseEntity<>(createdLink, HttpStatus.OK);\r\n    }\r\n}\r\n','LinkResource.java',20,NULL,NULL),(3,'package net.nodepad.web.app;\r\n\r\nimport net.nodepad.model.*;\r\nimport net.nodepad.beans.*;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\n\r\npublic class PostNodeVPAsTestAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Node node = new NodeImpl();\r\n		NodeForm nodeform = (NodeForm) form;\r\n\r\n                String error = \"\";\r\n\r\n\r\n                \r\n		\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		if(nodeform.getId() == null || nodeform.getId().intValue() == 0){\r\n			node.setId(null);\r\n			nodeform.setId(null);\r\n		}else{\r\n			node.setId(nodeform.getId());\r\n			Criteria criteria = session.createCriteria(Node.class);\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n			node = (Node) criteria.uniqueResult();\r\n\r\n		}\r\n                		node.setContentType(nodeform.getContentType());\r\n		node.setContent(nodeform.getContent());\r\n		node.setWidth(nodeform.getWidth());\r\n		node.setHeight(nodeform.getHeight());\r\n		node.setX(nodeform.getX());\r\n		node.setY(nodeform.getY());\r\n\r\n\r\n		\r\n		StringFullfiller.fullfil(node);\r\n                \r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(node);\r\n		transaction.commit();\r\n		session.flush();\r\nif(req.getParameter(\"from\")!=null && req.getParameter(\"from\").equals(\"detail\")){\r\n		new HTTPGetRedirection(req, res, \"PostNodeDetail.do\", node.getId().toString());\r\n\r\n}\r\n		\r\n		new HTTPGetRedirection(req, res, \"Nodes.do\", node.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','PostNodeVPAsTestAction.java',4,NULL,NULL),(4,'package net.nodepad.web.app;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.nodepad.model.*;\r\nimport net.nodepad.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class PostNodeDetailAsTestAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Node node = new NodeImpl();\r\n		NodeForm nodeform = new NodeForm();\r\n		Criteria criteria = session.createCriteria(Node.class);\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			node = (Node) criteria.uniqueResult();\r\n			new CopyProperties(node,nodeform);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        nodeform = (NodeForm)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(nodeform.getId()));\r\n			node = (Node) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",node);\r\n		req.setAttribute(\"form\",nodeform);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','PostNodeDetailAsTestAction.java',4,NULL,NULL),(5,'package net.nodepad.web.app;\r\n\r\nimport net.nodepad.model.*;\r\nimport net.nodepad.beans.*;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\n\r\npublic class PostNodeVPForContentOnlyAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Node node = new NodeImpl();\r\n		NodeForm nodeform = (NodeForm) form;\r\n\r\n                String error = \"\";\r\nif(StringUtils.isNotBlank(error)){\r\n	req.getSession().setAttribute(\"error\",error);\r\n	req.setAttribute(\"form\",nodeform);\r\n	return mapping.findForward(\"error\");\r\n}\r\n\r\n\r\n                \r\n		\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		if(nodeform.getId() == null || nodeform.getId().intValue() == 0){\r\n			node.setId(null);\r\n			nodeform.setId(null);\r\n		}else{\r\n			node.setId(nodeform.getId());\r\n			Criteria criteria = session.createCriteria(Node.class);\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n			node = (Node) criteria.uniqueResult();\r\n\r\n		}\r\n                		node.setContent(nodeform.getContent());\r\n\r\n\r\n		\r\n		StringFullfiller.fullfil(node);\r\n                \r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(node);\r\n		transaction.commit();\r\n		session.flush();\r\nif(req.getParameter(\"from\")!=null && req.getParameter(\"from\").equals(\"detail\")){\r\n		new HTTPGetRedirection(req, res, \"PostNodeDetail.do\", node.getId().toString());\r\n\r\n}\r\n		\r\n		new HTTPGetRedirection(req, res, \"Nodes.do\", node.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','PostNodeVPForContentOnlyAction.java',5,NULL,NULL),(6,'package net.nodepad.web.app;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.nodepad.model.*;\r\nimport net.nodepad.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class PostNodeDetailForContentOnlyAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Node node = new NodeImpl();\r\n		NodeForm nodeform = new NodeForm();\r\n		Criteria criteria = session.createCriteria(Node.class);\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			node = (Node) criteria.uniqueResult();\r\n			new CopyProperties(node,nodeform);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        nodeform = (NodeForm)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(nodeform.getId()));\r\n			node = (Node) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",node);\r\n		req.setAttribute(\"form\",nodeform);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','PostNodeDetailForContentOnlyAction.java',5,NULL,NULL),(7,'package net.nodepad.web.app;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.nodepad.model.*;\r\nimport net.nodepad.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ShowNodeWidthAndHeightAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Node node = new NodeImpl();\r\n		Criteria criteria = session.createCriteria(Node.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			node = (Node) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			node = (Node) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"node\",node);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','ShowNodeWidthAndHeightAction.java',6,NULL,NULL),(8,'package net.nodepad.web.app;\r\n\r\nimport net.nodepad.model.*;\r\nimport net.nodepad.model.crud.*;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class NodesAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(Node.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			Node node = (Node) iter.next();\r\n			vector.add(node);\r\n		}\r\n		Node node = new NodeImpl();\r\n		NodeForm nodeform = new NodeForm();\r\n		criteria = session.createCriteria(Node.class);\r\n\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			node = (Node) criteria.uniqueResult();\r\n			new CopyProperties(node,nodeform);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        nodeform = (NodeForm)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(nodeform.getId()));\r\n			node = (Node) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",node);\r\n		req.setAttribute(\"form\",nodeform);\r\n		\r\n		\r\n		req.setAttribute(\"nodes\",vector);\r\n		\r\n\r\n                if(req.getParameter(\"displayexport\") !=null){\r\n     		    return mapping.findForward(\"displayexport\");\r\n                }\r\n\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','NodesAction.java',7,NULL,NULL),(9,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.NodeFieldDto;\r\nimport net.nodepad.web.app.api.rest.service.NodeFieldService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/NodeFields\")\r\n@Api(value = \"NodeField API\")\r\npublic class NodeFieldResource {\r\n\r\n    @Autowired\r\n    private NodeFieldService ##modelobj##Service;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeFieldDto> getAllNodeFields() {\r\n        return ##modelobj##Service.getAllNodeFields();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeFieldDto getNodeField(@PathVariable final String id) {\r\n        return ##modelobj##Service.getNodeField(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeFieldDto> addNodeField(@RequestBody final NodeFieldDto ##modelobj##) {\r\n        NodeFieldDto createdNodeField = ##modelobj##Service.createNodeField(##modelobj##);\r\n        return new ResponseEntity<>(createdNodeField, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNodeField(@PathVariable final String id) {\r\n        ##modelobj##Service.deleteNodeField(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeFieldDto> updateNodeField(@PathVariable final String id, @RequestBody final NodeFieldDto ##modelobj##) {\r\n        NodeFieldDto createdNodeField = ##modelobj##Service.updateNodeField(id, ##modelobj##);\r\n        return new ResponseEntity<>(createdNodeField, HttpStatus.OK);\r\n    }\r\n}\r\n','NodeFieldResource.javaAction.java',19,NULL,NULL),(10,'package net.nodepad.web.app.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.dto.NodeFieldDto;\r\nimport net.nodepad.web.app.api.rest.entity.NodeFieldEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class NodeFieldConverter extends AbstractConverter<NodeFieldEntity, NodeFieldDto> {\r\n\r\n    @Override\r\n    public void toDto(final NodeFieldEntity entity, final NodeFieldDto dto) {\r\n        // convert NodeFieldEntity to NodeFieldDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final NodeFieldEntity entity, final NodeFieldDto dto) {\r\n        // convert NodeFieldDto to NodeFieldEntity\r\n}\r\n','NodeFieldConverterAction.java',19,NULL,NULL),(11,'package\r\n\r\nimport java.util.Collection;\r\n\r\nnet.nodepad.web.app.api.rest.converter;\r\n\r\nimport java.lang.reflect.ParameterizedType;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\npublic abstract class AbstractConverter<EntityClass, DtoClass> {\r\n\r\n    private final Class<EntityClass> entityClass;\r\n    private final Class<DtoClass> dtoClass;\r\n\r\n    @SuppressWarnings(\"unchecked\")\r\n    public AbstractConverter() {\r\n        final ParameterizedType genericSuperclass = (ParameterizedType) getClass().getGenericSuperclass();\r\n        this.entityClass = (Class<EntityClass>) genericSuperclass.getActualTypeArguments()[0];\r\n        this.dtoClass = (Class<DtoClass>) genericSuperclass.getActualTypeArguments()[1];\r\n    }\r\n\r\n    protected DtoClass newDto() {\r\n        try {\r\n            return dtoClass.newInstance();\r\n        } catch (InstantiationException | IllegalAccessException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    protected EntityClass newEntity() {\r\n        try {\r\n            return entityClass.newInstance();\r\n        } catch (InstantiationException | IllegalAccessException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public abstract void toDto(final EntityClass entity, final DtoClass dto);\r\n\r\n    public DtoClass toDto(final EntityClass entity) {\r\n        if (entity == null) {\r\n            return null;\r\n        }\r\n        final DtoClass dto = newDto();\r\n        toDto(entity, dto);\r\n        return dto;\r\n    }\r\n\r\n    public List<DtoClass> toDto(final Collection<? extends EntityClass> entities) {\r\n        final List<DtoClass> dtoCollection = new ArrayList<>();\r\n        entities.forEach(entity -> dtoCollection.add(toDto(entity)));\r\n        return dtoCollection;\r\n    }\r\n\r\n    public abstract void fromDto(final EntityClass entity, final DtoClass dto);\r\n\r\n\r\n    public EntityClass fromDto(final DtoClass dto) {\r\n        final EntityClass entity = newEntity();\r\n        fromDto(entity, dto);\r\n        return entity;\r\n    }\r\n}\r\n','AbstractConverterAction.java',23,NULL,NULL),(12,'package net.nodepad.web.app.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class NodeFieldDto {\r\n\r\n    public NodeFieldDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','NodeFieldDtoAction.java',19,NULL,NULL),(13,'package net.nodepad.web.app.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"NodeFields\")\r\npublic class NodeFieldEntity extends NodeField {\r\n\r\n    public NodeFieldEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','NodeFieldEntityAction.java',19,NULL,NULL),(14,'package net.nodepad.web.app.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport net.nodepad.web.app.api.rest.entity.NodeFieldEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface NodeFieldRepository extends JpaRepository<NodeFieldEntity, String> {\r\n\r\n}','NodeFieldRepositoryAction.java',19,NULL,NULL),(15,'package net.nodepad.web.app.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.converter.NodeFieldConverter;\r\nimport net.nodepad.web.app.api.rest.dto.NodeFieldDto;\r\nimport net.nodepad.web.app.api.rest.entity.NodeFieldEntity;\r\nimport net.nodepad.web.app.api.rest.repository.NodeFieldRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class NodeFieldService {\r\n\r\n    @Autowired\r\n    private NodeFieldRepository ##modelobj##Repository;\r\n\r\n    @Autowired\r\n    private NodeFieldConverter ##modelobj##Converter;\r\n\r\n        public List<NodeFieldDto> getAllNodeFields(){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findAll());\r\n    }\r\n\r\n    public NodeFieldDto getNodeField(final String id){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findOne(id));\r\n    }\r\n\r\n    public NodeFieldDto createNodeField(NodeFieldDto ##modelobj##Dto){\r\n        NodeFieldEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public NodeFieldDto updateNodeField(String id, NodeFieldDto ##modelobj##Dto){\r\n        ##modelobj##Repository.delete(id);\r\n        NodeFieldEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public void deleteNodeField(String id){\r\n        ##modelobj##Repository.delete(id);\r\n    }\r\n}\r\n','NodeFieldServiceAction.java',19,NULL,NULL),(16,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.LinkDto;\r\nimport net.nodepad.web.app.api.rest.service.LinkService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Links\")\r\n@Api(value = \"Link API\")\r\npublic class LinkResource {\r\n\r\n    @Autowired\r\n    private LinkService ##modelobj##Service;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<LinkDto> getAllLinks() {\r\n        return ##modelobj##Service.getAllLinks();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public LinkDto getLink(@PathVariable final String id) {\r\n        return ##modelobj##Service.getLink(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<LinkDto> addLink(@RequestBody final LinkDto ##modelobj##) {\r\n        LinkDto createdLink = ##modelobj##Service.createLink(##modelobj##);\r\n        return new ResponseEntity<>(createdLink, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteLink(@PathVariable final String id) {\r\n        ##modelobj##Service.deleteLink(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<LinkDto> updateLink(@PathVariable final String id, @RequestBody final LinkDto ##modelobj##) {\r\n        LinkDto createdLink = ##modelobj##Service.updateLink(id, ##modelobj##);\r\n        return new ResponseEntity<>(createdLink, HttpStatus.OK);\r\n    }\r\n}\r\n','LinkResource.javaAction.java',20,NULL,NULL),(17,'package net.nodepad.web.app.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.dto.LinkDto;\r\nimport net.nodepad.web.app.api.rest.entity.LinkEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class LinkConverter extends AbstractConverter<LinkEntity, LinkDto> {\r\n\r\n    @Override\r\n    public void toDto(final LinkEntity entity, final LinkDto dto) {\r\n        // convert LinkEntity to LinkDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final LinkEntity entity, final LinkDto dto) {\r\n        // convert LinkDto to LinkEntity\r\n}\r\n','LinkConverterAction.java',20,NULL,NULL),(18,'package net.nodepad.web.app.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class LinkDto {\r\n\r\n    public LinkDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','LinkDtoAction.java',20,NULL,NULL),(19,'package net.nodepad.web.app.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"Links\")\r\npublic class LinkEntity extends Link {\r\n\r\n    public LinkEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','LinkEntityAction.java',20,NULL,NULL),(20,'package net.nodepad.web.app.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport net.nodepad.web.app.api.rest.entity.LinkEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface LinkRepository extends JpaRepository<LinkEntity, String> {\r\n\r\n}','LinkRepositoryAction.java',20,NULL,NULL),(21,'package net.nodepad.web.app.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.converter.LinkConverter;\r\nimport net.nodepad.web.app.api.rest.dto.LinkDto;\r\nimport net.nodepad.web.app.api.rest.entity.LinkEntity;\r\nimport net.nodepad.web.app.api.rest.repository.LinkRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class LinkService {\r\n\r\n    @Autowired\r\n    private LinkRepository ##modelobj##Repository;\r\n\r\n    @Autowired\r\n    private LinkConverter ##modelobj##Converter;\r\n\r\n        public List<LinkDto> getAllLinks(){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findAll());\r\n    }\r\n\r\n    public LinkDto getLink(final String id){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findOne(id));\r\n    }\r\n\r\n    public LinkDto createLink(LinkDto ##modelobj##Dto){\r\n        LinkEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public LinkDto updateLink(String id, LinkDto ##modelobj##Dto){\r\n        ##modelobj##Repository.delete(id);\r\n        LinkEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public void deleteLink(String id){\r\n        ##modelobj##Repository.delete(id);\r\n    }\r\n}\r\n','LinkServiceAction.java',20,NULL,NULL),(22,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.UserDto;\r\nimport net.nodepad.web.app.api.rest.service.UserService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Users\")\r\n@Api(value = \"User API\")\r\npublic class UserResource {\r\n\r\n    @Autowired\r\n    private UserService ##modelobj##Service;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<UserDto> getAllUsers() {\r\n        return ##modelobj##Service.getAllUsers();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public UserDto getUser(@PathVariable final String id) {\r\n        return ##modelobj##Service.getUser(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<UserDto> addUser(@RequestBody final UserDto ##modelobj##) {\r\n        UserDto createdUser = ##modelobj##Service.createUser(##modelobj##);\r\n        return new ResponseEntity<>(createdUser, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteUser(@PathVariable final String id) {\r\n        ##modelobj##Service.deleteUser(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<UserDto> updateUser(@PathVariable final String id, @RequestBody final UserDto ##modelobj##) {\r\n        UserDto createdUser = ##modelobj##Service.updateUser(id, ##modelobj##);\r\n        return new ResponseEntity<>(createdUser, HttpStatus.OK);\r\n    }\r\n}\r\n','UserResource.javaAction.java',21,NULL,NULL),(23,'package net.nodepad.web.app.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.dto.UserDto;\r\nimport net.nodepad.web.app.api.rest.entity.UserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class UserConverter extends AbstractConverter<UserEntity, UserDto> {\r\n\r\n    @Override\r\n    public void toDto(final UserEntity entity, final UserDto dto) {\r\n        // convert UserEntity to UserDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final UserEntity entity, final UserDto dto) {\r\n        // convert UserDto to UserEntity\r\n}\r\n','UserConverterAction.java',21,NULL,NULL),(24,'package net.nodepad.web.app.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class UserDto {\r\n\r\n    public UserDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','UserDtoAction.java',21,NULL,NULL),(25,'package net.nodepad.web.app.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"Users\")\r\npublic class UserEntity extends User {\r\n\r\n    public UserEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','UserEntityAction.java',21,NULL,NULL),(26,'package net.nodepad.web.app.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport net.nodepad.web.app.api.rest.entity.UserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<UserEntity, String> {\r\n\r\n}','UserRepositoryAction.java',21,NULL,NULL),(27,'package net.nodepad.web.app.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.converter.UserConverter;\r\nimport net.nodepad.web.app.api.rest.dto.UserDto;\r\nimport net.nodepad.web.app.api.rest.entity.UserEntity;\r\nimport net.nodepad.web.app.api.rest.repository.UserRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class UserService {\r\n\r\n    @Autowired\r\n    private UserRepository ##modelobj##Repository;\r\n\r\n    @Autowired\r\n    private UserConverter ##modelobj##Converter;\r\n\r\n        public List<UserDto> getAllUsers(){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findAll());\r\n    }\r\n\r\n    public UserDto getUser(final String id){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findOne(id));\r\n    }\r\n\r\n    public UserDto createUser(UserDto ##modelobj##Dto){\r\n        UserEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public UserDto updateUser(String id, UserDto ##modelobj##Dto){\r\n        ##modelobj##Repository.delete(id);\r\n        UserEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public void deleteUser(String id){\r\n        ##modelobj##Repository.delete(id);\r\n    }\r\n}\r\n','UserServiceAction.java',21,NULL,NULL),(28,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.LinkUseDto;\r\nimport net.nodepad.web.app.api.rest.service.LinkUseService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/LinkUses\")\r\n@Api(value = \"LinkUse API\")\r\npublic class LinkUseResource {\r\n\r\n    @Autowired\r\n    private LinkUseService ##modelobj##Service;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<LinkUseDto> getAllLinkUses() {\r\n        return ##modelobj##Service.getAllLinkUses();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public LinkUseDto getLinkUse(@PathVariable final String id) {\r\n        return ##modelobj##Service.getLinkUse(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<LinkUseDto> addLinkUse(@RequestBody final LinkUseDto ##modelobj##) {\r\n        LinkUseDto createdLinkUse = ##modelobj##Service.createLinkUse(##modelobj##);\r\n        return new ResponseEntity<>(createdLinkUse, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteLinkUse(@PathVariable final String id) {\r\n        ##modelobj##Service.deleteLinkUse(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<LinkUseDto> updateLinkUse(@PathVariable final String id, @RequestBody final LinkUseDto ##modelobj##) {\r\n        LinkUseDto createdLinkUse = ##modelobj##Service.updateLinkUse(id, ##modelobj##);\r\n        return new ResponseEntity<>(createdLinkUse, HttpStatus.OK);\r\n    }\r\n}\r\n','LinkUseResource.javaAction.java',22,NULL,NULL),(29,'package net.nodepad.web.app.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.dto.LinkUseDto;\r\nimport net.nodepad.web.app.api.rest.entity.LinkUseEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class LinkUseConverter extends AbstractConverter<LinkUseEntity, LinkUseDto> {\r\n\r\n    @Override\r\n    public void toDto(final LinkUseEntity entity, final LinkUseDto dto) {\r\n        // convert LinkUseEntity to LinkUseDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final LinkUseEntity entity, final LinkUseDto dto) {\r\n        // convert LinkUseDto to LinkUseEntity\r\n}\r\n','LinkUseConverterAction.java',22,NULL,NULL),(30,'package net.nodepad.web.app.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class LinkUseDto {\r\n\r\n    public LinkUseDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','LinkUseDtoAction.java',22,NULL,NULL),(31,'package net.nodepad.web.app.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"LinkUses\")\r\npublic class LinkUseEntity extends LinkUse {\r\n\r\n    public LinkUseEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','LinkUseEntityAction.java',22,NULL,NULL),(32,'package net.nodepad.web.app.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport net.nodepad.web.app.api.rest.entity.LinkUseEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface LinkUseRepository extends JpaRepository<LinkUseEntity, String> {\r\n\r\n}','LinkUseRepositoryAction.java',22,NULL,NULL),(33,'package net.nodepad.web.app.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.converter.LinkUseConverter;\r\nimport net.nodepad.web.app.api.rest.dto.LinkUseDto;\r\nimport net.nodepad.web.app.api.rest.entity.LinkUseEntity;\r\nimport net.nodepad.web.app.api.rest.repository.LinkUseRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class LinkUseService {\r\n\r\n    @Autowired\r\n    private LinkUseRepository ##modelobj##Repository;\r\n\r\n    @Autowired\r\n    private LinkUseConverter ##modelobj##Converter;\r\n\r\n        public List<LinkUseDto> getAllLinkUses(){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findAll());\r\n    }\r\n\r\n    public LinkUseDto getLinkUse(final String id){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findOne(id));\r\n    }\r\n\r\n    public LinkUseDto createLinkUse(LinkUseDto ##modelobj##Dto){\r\n        LinkUseEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public LinkUseDto updateLinkUse(String id, LinkUseDto ##modelobj##Dto){\r\n        ##modelobj##Repository.delete(id);\r\n        LinkUseEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public void deleteLinkUse(String id){\r\n        ##modelobj##Repository.delete(id);\r\n    }\r\n}\r\n','LinkUseServiceAction.java',22,NULL,NULL),(34,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.NodeUserDto;\r\nimport net.nodepad.web.app.api.rest.service.NodeUserService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/NodeUsers\")\r\n@Api(value = \"NodeUser API\")\r\npublic class NodeUserResource {\r\n\r\n    @Autowired\r\n    private NodeUserService ##modelobj##Service;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeUserDto> getAllNodeUsers() {\r\n        return ##modelobj##Service.getAllNodeUsers();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeUserDto getNodeUser(@PathVariable final String id) {\r\n        return ##modelobj##Service.getNodeUser(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeUserDto> addNodeUser(@RequestBody final NodeUserDto ##modelobj##) {\r\n        NodeUserDto createdNodeUser = ##modelobj##Service.createNodeUser(##modelobj##);\r\n        return new ResponseEntity<>(createdNodeUser, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNodeUser(@PathVariable final String id) {\r\n        ##modelobj##Service.deleteNodeUser(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeUserDto> updateNodeUser(@PathVariable final String id, @RequestBody final NodeUserDto ##modelobj##) {\r\n        NodeUserDto createdNodeUser = ##modelobj##Service.updateNodeUser(id, ##modelobj##);\r\n        return new ResponseEntity<>(createdNodeUser, HttpStatus.OK);\r\n    }\r\n}\r\n','NodeUserResource.javaAction.java',23,NULL,NULL),(35,'package net.nodepad.web.app.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.dto.NodeUserDto;\r\nimport net.nodepad.web.app.api.rest.entity.NodeUserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class NodeUserConverter extends AbstractConverter<NodeUserEntity, NodeUserDto> {\r\n\r\n    @Override\r\n    public void toDto(final NodeUserEntity entity, final NodeUserDto dto) {\r\n        // convert NodeUserEntity to NodeUserDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final NodeUserEntity entity, final NodeUserDto dto) {\r\n        // convert NodeUserDto to NodeUserEntity\r\n}\r\n','NodeUserConverterAction.java',23,NULL,NULL),(36,'package net.nodepad.web.app.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class NodeUserDto {\r\n\r\n    public NodeUserDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','NodeUserDtoAction.java',23,NULL,NULL),(37,'package net.nodepad.web.app.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"NodeUsers\")\r\npublic class NodeUserEntity extends NodeUser {\r\n\r\n    public NodeUserEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','NodeUserEntityAction.java',23,NULL,NULL),(38,'package net.nodepad.web.app.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport net.nodepad.web.app.api.rest.entity.NodeUserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface NodeUserRepository extends JpaRepository<NodeUserEntity, String> {\r\n\r\n}','NodeUserRepositoryAction.java',23,NULL,NULL),(39,'package net.nodepad.web.app.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport net.nodepad.web.app.api.rest.converter.NodeUserConverter;\r\nimport net.nodepad.web.app.api.rest.dto.NodeUserDto;\r\nimport net.nodepad.web.app.api.rest.entity.NodeUserEntity;\r\nimport net.nodepad.web.app.api.rest.repository.NodeUserRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class NodeUserService {\r\n\r\n    @Autowired\r\n    private NodeUserRepository ##modelobj##Repository;\r\n\r\n    @Autowired\r\n    private NodeUserConverter ##modelobj##Converter;\r\n\r\n        public List<NodeUserDto> getAllNodeUsers(){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findAll());\r\n    }\r\n\r\n    public NodeUserDto getNodeUser(final String id){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findOne(id));\r\n    }\r\n\r\n    public NodeUserDto createNodeUser(NodeUserDto ##modelobj##Dto){\r\n        NodeUserEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public NodeUserDto updateNodeUser(String id, NodeUserDto ##modelobj##Dto){\r\n        ##modelobj##Repository.delete(id);\r\n        NodeUserEntity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public void deleteNodeUser(String id){\r\n        ##modelobj##Repository.delete(id);\r\n    }\r\n}\r\n','NodeUserServiceAction.java',23,NULL,NULL),(40,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.NodeFieldDto;\r\nimport net.nodepad.web.app.api.rest.service.NodeFieldService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/NodeFields\")\r\n@Api(value = \"NodeField API\")\r\npublic class NodeFieldResource {\r\n\r\n    @Autowired\r\n    private NodeFieldService nodeFieldService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeFieldDto> getAllNodeFields() {\r\n        return nodeFieldService.getAllNodeFields();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeFieldDto getNodeField(@PathVariable final String id) {\r\n        return nodeFieldService.getNodeField(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeFieldDto> addNodeField(@RequestBody final NodeFieldDto nodeField) {\r\n        NodeFieldDto createdNodeField = nodeFieldService.createNodeField(nodeField);\r\n        return new ResponseEntity<>(createdNodeField, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNodeField(@PathVariable final String id) {\r\n        nodeFieldService.deleteNodeField(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeFieldDto> updateNodeField(@PathVariable final String id, @RequestBody final NodeFieldDto nodeField) {\r\n        NodeFieldDto createdNodeField = nodeFieldService.updateNodeField(id, nodeField);\r\n        return new ResponseEntity<>(createdNodeField, HttpStatus.OK);\r\n    }\r\n}\r\n','NodeFieldResource.java.java',19,NULL,NULL),(41,'package com.theuniversalgraph.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.dto.NodeFieldDto;\r\nimport com.theuniversalgraph.api.rest.entity.NodeFieldEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class NodeFieldConverter extends AbstractConverter<NodeFieldEntity, NodeFieldDto> {\r\n\r\n    @Override\r\n    public void toDto(final NodeFieldEntity entity, final NodeFieldDto dto) {\r\n        // convert NodeFieldEntity to NodeFieldDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final NodeFieldEntity entity, final NodeFieldDto dto) {\r\n        // convert NodeFieldDto to NodeFieldEntity\r\n}\r\n','NodeFieldConverter.java',19,NULL,NULL),(42,'package\r\n\r\nimport java.util.Collection;\r\n\r\ncom.theuniversalgraph.api.rest.converter;\r\n\r\nimport java.lang.reflect.ParameterizedType;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\npublic abstract class AbstractConverter<EntityClass, DtoClass> {\r\n\r\n    private final Class<EntityClass> entityClass;\r\n    private final Class<DtoClass> dtoClass;\r\n\r\n    @SuppressWarnings(\"unchecked\")\r\n    public AbstractConverter() {\r\n        final ParameterizedType genericSuperclass = (ParameterizedType) getClass().getGenericSuperclass();\r\n        this.entityClass = (Class<EntityClass>) genericSuperclass.getActualTypeArguments()[0];\r\n        this.dtoClass = (Class<DtoClass>) genericSuperclass.getActualTypeArguments()[1];\r\n    }\r\n\r\n    protected DtoClass newDto() {\r\n        try {\r\n            return dtoClass.newInstance();\r\n        } catch (InstantiationException | IllegalAccessException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    protected EntityClass newEntity() {\r\n        try {\r\n            return entityClass.newInstance();\r\n        } catch (InstantiationException | IllegalAccessException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public abstract void toDto(final EntityClass entity, final DtoClass dto);\r\n\r\n    public DtoClass toDto(final EntityClass entity) {\r\n        if (entity == null) {\r\n            return null;\r\n        }\r\n        final DtoClass dto = newDto();\r\n        toDto(entity, dto);\r\n        return dto;\r\n    }\r\n\r\n    public List<DtoClass> toDto(final Collection<? extends EntityClass> entities) {\r\n        final List<DtoClass> dtoCollection = new ArrayList<>();\r\n        entities.forEach(entity -> dtoCollection.add(toDto(entity)));\r\n        return dtoCollection;\r\n    }\r\n\r\n    public abstract void fromDto(final EntityClass entity, final DtoClass dto);\r\n\r\n\r\n    public EntityClass fromDto(final DtoClass dto) {\r\n        final EntityClass entity = newEntity();\r\n        fromDto(entity, dto);\r\n        return entity;\r\n    }\r\n}\r\n','AbstractConverter.java',3,NULL,NULL),(43,'package com.theuniversalgraph.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class NodeFieldDto {\r\n\r\n    public NodeFieldDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','NodeFieldDto.java',19,NULL,NULL),(44,'package com.theuniversalgraph.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"NodeFields\")\r\npublic class NodeFieldEntity extends NodeField {\r\n\r\n    public NodeFieldEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','NodeFieldEntity.java',19,NULL,NULL),(45,'package com.theuniversalgraph.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport com.theuniversalgraph.api.rest.entity.NodeFieldEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface NodeFieldRepository extends JpaRepository<NodeFieldEntity, String> {\r\n\r\n}','NodeFieldRepository.java',19,NULL,NULL),(46,'package com.theuniversalgraph.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.converter.NodeFieldConverter;\r\nimport com.theuniversalgraph.api.rest.dto.NodeFieldDto;\r\nimport com.theuniversalgraph.api.rest.entity.NodeFieldEntity;\r\nimport com.theuniversalgraph.api.rest.repository.NodeFieldRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class NodeFieldService {\r\n\r\n    @Autowired\r\n    private NodeFieldRepository nodeFieldRepository;\r\n\r\n    @Autowired\r\n    private NodeFieldConverter nodeFieldConverter;\r\n\r\n        public List<NodeFieldDto> getAllNodeFields(){\r\n        return nodeFieldConverter.toDto(nodeFieldRepository.findAll());\r\n    }\r\n\r\n    public NodeFieldDto getNodeField(final String id){\r\n        return nodeFieldConverter.toDto(nodeFieldRepository.findOne(id));\r\n    }\r\n\r\n    public NodeFieldDto createNodeField(NodeFieldDto nodeFieldDto){\r\n        NodeFieldEntity nodeFieldEntity = nodeFieldConverter.fromDto(nodeFieldDto);\r\n        return nodeFieldConverter.toDto(nodeFieldRepository.save(nodeFieldEntity));\r\n    }\r\n\r\n    public NodeFieldDto updateNodeField(String id, NodeFieldDto nodeFieldDto){\r\n        nodeFieldRepository.delete(id);\r\n        NodeFieldEntity nodeFieldEntity = nodeFieldConverter.fromDto(nodeFieldDto);\r\n        return nodeFieldConverter.toDto(nodeFieldRepository.save(nodeFieldEntity));\r\n    }\r\n\r\n    public void deleteNodeField(String id){\r\n        nodeFieldRepository.delete(id);\r\n    }\r\n}\r\n','NodeFieldService.java',19,NULL,NULL),(47,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.UserDto;\r\nimport net.nodepad.web.app.api.rest.service.UserService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Users\")\r\n@Api(value = \"User API\")\r\npublic class UserResource {\r\n\r\n    @Autowired\r\n    private UserService userService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<UserDto> getAllUsers() {\r\n        return userService.getAllUsers();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public UserDto getUser(@PathVariable final String id) {\r\n        return userService.getUser(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<UserDto> addUser(@RequestBody final UserDto user) {\r\n        UserDto createdUser = userService.createUser(user);\r\n        return new ResponseEntity<>(createdUser, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteUser(@PathVariable final String id) {\r\n        userService.deleteUser(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<UserDto> updateUser(@PathVariable final String id, @RequestBody final UserDto user) {\r\n        UserDto createdUser = userService.updateUser(id, user);\r\n        return new ResponseEntity<>(createdUser, HttpStatus.OK);\r\n    }\r\n}\r\n','UserResource.java.java',21,NULL,NULL),(48,'package com.theuniversalgraph.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.dto.UserDto;\r\nimport com.theuniversalgraph.api.rest.entity.UserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class UserConverter extends AbstractConverter<UserEntity, UserDto> {\r\n\r\n    @Override\r\n    public void toDto(final UserEntity entity, final UserDto dto) {\r\n        // convert UserEntity to UserDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final UserEntity entity, final UserDto dto) {\r\n        // convert UserDto to UserEntity\r\n}\r\n','UserConverter.java',21,NULL,NULL),(49,'package com.theuniversalgraph.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class UserDto {\r\n\r\n    public UserDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','UserDto.java',21,NULL,NULL),(50,'package com.theuniversalgraph.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"Users\")\r\npublic class UserEntity extends User {\r\n\r\n    public UserEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','UserEntity.java',21,NULL,NULL),(51,'package com.theuniversalgraph.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport com.theuniversalgraph.api.rest.entity.UserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<UserEntity, String> {\r\n\r\n}','UserRepository.java',21,NULL,NULL),(52,'package com.theuniversalgraph.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.converter.UserConverter;\r\nimport com.theuniversalgraph.api.rest.dto.UserDto;\r\nimport com.theuniversalgraph.api.rest.entity.UserEntity;\r\nimport com.theuniversalgraph.api.rest.repository.UserRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class UserService {\r\n\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Autowired\r\n    private UserConverter userConverter;\r\n\r\n        public List<UserDto> getAllUsers(){\r\n        return userConverter.toDto(userRepository.findAll());\r\n    }\r\n\r\n    public UserDto getUser(final String id){\r\n        return userConverter.toDto(userRepository.findOne(id));\r\n    }\r\n\r\n    public UserDto createUser(UserDto userDto){\r\n        UserEntity userEntity = userConverter.fromDto(userDto);\r\n        return userConverter.toDto(userRepository.save(userEntity));\r\n    }\r\n\r\n    public UserDto updateUser(String id, UserDto userDto){\r\n        userRepository.delete(id);\r\n        UserEntity userEntity = userConverter.fromDto(userDto);\r\n        return userConverter.toDto(userRepository.save(userEntity));\r\n    }\r\n\r\n    public void deleteUser(String id){\r\n        userRepository.delete(id);\r\n    }\r\n}\r\n','UserService.java',21,NULL,NULL),(53,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.LinkDto;\r\nimport net.nodepad.web.app.api.rest.service.LinkService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Links\")\r\n@Api(value = \"Link API\")\r\npublic class LinkResource {\r\n\r\n    @Autowired\r\n    private LinkService linkService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<LinkDto> getAllLinks() {\r\n        return linkService.getAllLinks();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public LinkDto getLink(@PathVariable final String id) {\r\n        return linkService.getLink(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<LinkDto> addLink(@RequestBody final LinkDto link) {\r\n        LinkDto createdLink = linkService.createLink(link);\r\n        return new ResponseEntity<>(createdLink, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteLink(@PathVariable final String id) {\r\n        linkService.deleteLink(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<LinkDto> updateLink(@PathVariable final String id, @RequestBody final LinkDto link) {\r\n        LinkDto createdLink = linkService.updateLink(id, link);\r\n        return new ResponseEntity<>(createdLink, HttpStatus.OK);\r\n    }\r\n}\r\n','LinkResource.java.java',20,NULL,NULL),(54,'package com.theuniversalgraph.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.dto.LinkDto;\r\nimport com.theuniversalgraph.api.rest.entity.LinkEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class LinkConverter extends AbstractConverter<LinkEntity, LinkDto> {\r\n\r\n    @Override\r\n    public void toDto(final LinkEntity entity, final LinkDto dto) {\r\n        // convert LinkEntity to LinkDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final LinkEntity entity, final LinkDto dto) {\r\n        // convert LinkDto to LinkEntity\r\n}\r\n','LinkConverter.java',20,NULL,NULL),(55,'package com.theuniversalgraph.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class LinkDto {\r\n\r\n    public LinkDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','LinkDto.java',20,NULL,NULL),(56,'package com.theuniversalgraph.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"Links\")\r\npublic class LinkEntity extends Link {\r\n\r\n    public LinkEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','LinkEntity.java',20,NULL,NULL),(57,'package com.theuniversalgraph.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport com.theuniversalgraph.api.rest.entity.LinkEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface LinkRepository extends JpaRepository<LinkEntity, String> {\r\n\r\n}','LinkRepository.java',20,NULL,NULL),(58,'package com.theuniversalgraph.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.converter.LinkConverter;\r\nimport com.theuniversalgraph.api.rest.dto.LinkDto;\r\nimport com.theuniversalgraph.api.rest.entity.LinkEntity;\r\nimport com.theuniversalgraph.api.rest.repository.LinkRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class LinkService {\r\n\r\n    @Autowired\r\n    private LinkRepository linkRepository;\r\n\r\n    @Autowired\r\n    private LinkConverter linkConverter;\r\n\r\n        public List<LinkDto> getAllLinks(){\r\n        return linkConverter.toDto(linkRepository.findAll());\r\n    }\r\n\r\n    public LinkDto getLink(final String id){\r\n        return linkConverter.toDto(linkRepository.findOne(id));\r\n    }\r\n\r\n    public LinkDto createLink(LinkDto linkDto){\r\n        LinkEntity linkEntity = linkConverter.fromDto(linkDto);\r\n        return linkConverter.toDto(linkRepository.save(linkEntity));\r\n    }\r\n\r\n    public LinkDto updateLink(String id, LinkDto linkDto){\r\n        linkRepository.delete(id);\r\n        LinkEntity linkEntity = linkConverter.fromDto(linkDto);\r\n        return linkConverter.toDto(linkRepository.save(linkEntity));\r\n    }\r\n\r\n    public void deleteLink(String id){\r\n        linkRepository.delete(id);\r\n    }\r\n}\r\n','LinkService.java',20,NULL,NULL),(59,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.LinkUseDto;\r\nimport net.nodepad.web.app.api.rest.service.LinkUseService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/LinkUses\")\r\n@Api(value = \"LinkUse API\")\r\npublic class LinkUseResource {\r\n\r\n    @Autowired\r\n    private LinkUseService linkUseService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<LinkUseDto> getAllLinkUses() {\r\n        return linkUseService.getAllLinkUses();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public LinkUseDto getLinkUse(@PathVariable final String id) {\r\n        return linkUseService.getLinkUse(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<LinkUseDto> addLinkUse(@RequestBody final LinkUseDto linkUse) {\r\n        LinkUseDto createdLinkUse = linkUseService.createLinkUse(linkUse);\r\n        return new ResponseEntity<>(createdLinkUse, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteLinkUse(@PathVariable final String id) {\r\n        linkUseService.deleteLinkUse(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<LinkUseDto> updateLinkUse(@PathVariable final String id, @RequestBody final LinkUseDto linkUse) {\r\n        LinkUseDto createdLinkUse = linkUseService.updateLinkUse(id, linkUse);\r\n        return new ResponseEntity<>(createdLinkUse, HttpStatus.OK);\r\n    }\r\n}\r\n','LinkUseResource.java.java',22,NULL,NULL),(60,'package com.theuniversalgraph.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.dto.LinkUseDto;\r\nimport com.theuniversalgraph.api.rest.entity.LinkUseEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class LinkUseConverter extends AbstractConverter<LinkUseEntity, LinkUseDto> {\r\n\r\n    @Override\r\n    public void toDto(final LinkUseEntity entity, final LinkUseDto dto) {\r\n        // convert LinkUseEntity to LinkUseDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final LinkUseEntity entity, final LinkUseDto dto) {\r\n        // convert LinkUseDto to LinkUseEntity\r\n}\r\n','LinkUseConverter.java',22,NULL,NULL),(61,'package com.theuniversalgraph.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class LinkUseDto {\r\n\r\n    public LinkUseDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','LinkUseDto.java',22,NULL,NULL),(62,'package com.theuniversalgraph.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"LinkUses\")\r\npublic class LinkUseEntity extends LinkUse {\r\n\r\n    public LinkUseEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','LinkUseEntity.java',22,NULL,NULL),(63,'package com.theuniversalgraph.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport com.theuniversalgraph.api.rest.entity.LinkUseEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface LinkUseRepository extends JpaRepository<LinkUseEntity, String> {\r\n\r\n}','LinkUseRepository.java',22,NULL,NULL),(64,'package com.theuniversalgraph.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.converter.LinkUseConverter;\r\nimport com.theuniversalgraph.api.rest.dto.LinkUseDto;\r\nimport com.theuniversalgraph.api.rest.entity.LinkUseEntity;\r\nimport com.theuniversalgraph.api.rest.repository.LinkUseRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class LinkUseService {\r\n\r\n    @Autowired\r\n    private LinkUseRepository linkUseRepository;\r\n\r\n    @Autowired\r\n    private LinkUseConverter linkUseConverter;\r\n\r\n        public List<LinkUseDto> getAllLinkUses(){\r\n        return linkUseConverter.toDto(linkUseRepository.findAll());\r\n    }\r\n\r\n    public LinkUseDto getLinkUse(final String id){\r\n        return linkUseConverter.toDto(linkUseRepository.findOne(id));\r\n    }\r\n\r\n    public LinkUseDto createLinkUse(LinkUseDto linkUseDto){\r\n        LinkUseEntity linkUseEntity = linkUseConverter.fromDto(linkUseDto);\r\n        return linkUseConverter.toDto(linkUseRepository.save(linkUseEntity));\r\n    }\r\n\r\n    public LinkUseDto updateLinkUse(String id, LinkUseDto linkUseDto){\r\n        linkUseRepository.delete(id);\r\n        LinkUseEntity linkUseEntity = linkUseConverter.fromDto(linkUseDto);\r\n        return linkUseConverter.toDto(linkUseRepository.save(linkUseEntity));\r\n    }\r\n\r\n    public void deleteLinkUse(String id){\r\n        linkUseRepository.delete(id);\r\n    }\r\n}\r\n','LinkUseService.java',22,NULL,NULL),(77,'package com.theuniversalgraph.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport com.theuniversalgraph.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport com.theuniversalgraph.api.rest.dto.NodeDto;\r\nimport com.theuniversalgraph.api.rest.service.NodeService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Nodes\")\r\n@Api(value = \"Node API\")\r\npublic class NodeResource {\r\n\r\n    @Autowired\r\n    private NodeService nodeService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeDto> getAllNodes() {\r\n        return nodeService.getAllNodes();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeDto getNode(@PathVariable final String id) {\r\n        return nodeService.getNode(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeDto> addNode(@RequestBody final NodeDto node) {\r\n        NodeDto createdNode = nodeService.createNode(node);\r\n        return new ResponseEntity<>(createdNode, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNode(@PathVariable final String id) {\r\n        nodeService.deleteNode(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeDto> updateNode(@PathVariable final String id, @RequestBody final NodeDto node) {\r\n        NodeDto createdNode = nodeService.updateNode(id, node);\r\n        return new ResponseEntity<>(createdNode, HttpStatus.OK);\r\n    }\r\n}','NodeResource.java',3,NULL,NULL),(65,'package net.nodepad.web.app.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport net.nodepad.web.app.api.rest.dto.NodeUserDto;\r\nimport net.nodepad.web.app.api.rest.service.NodeUserService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/NodeUsers\")\r\n@Api(value = \"NodeUser API\")\r\npublic class NodeUserResource {\r\n\r\n    @Autowired\r\n    private NodeUserService nodeUserService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeUserDto> getAllNodeUsers() {\r\n        return nodeUserService.getAllNodeUsers();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeUserDto getNodeUser(@PathVariable final String id) {\r\n        return nodeUserService.getNodeUser(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeUserDto> addNodeUser(@RequestBody final NodeUserDto nodeUser) {\r\n        NodeUserDto createdNodeUser = nodeUserService.createNodeUser(nodeUser);\r\n        return new ResponseEntity<>(createdNodeUser, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNodeUser(@PathVariable final String id) {\r\n        nodeUserService.deleteNodeUser(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeUserDto> updateNodeUser(@PathVariable final String id, @RequestBody final NodeUserDto nodeUser) {\r\n        NodeUserDto createdNodeUser = nodeUserService.updateNodeUser(id, nodeUser);\r\n        return new ResponseEntity<>(createdNodeUser, HttpStatus.OK);\r\n    }\r\n}\r\n','NodeUserResource.java.java',23,NULL,NULL),(66,'package com.theuniversalgraph.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.dto.NodeUserDto;\r\nimport com.theuniversalgraph.api.rest.entity.NodeUserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Service\r\npublic class NodeUserConverter extends AbstractConverter<NodeUserEntity, NodeUserDto> {\r\n\r\n    @Override\r\n    public void toDto(final NodeUserEntity entity, final NodeUserDto dto) {\r\n        // convert NodeUserEntity to NodeUserDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final NodeUserEntity entity, final NodeUserDto dto) {\r\n        // convert NodeUserDto to NodeUserEntity\r\n}\r\n','NodeUserConverter.java',25,NULL,NULL),(67,'package com.theuniversalgraph.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport net.nodepad.model.*;\r\n\r\npublic class NodeUserDto {\r\n\r\n    public NodeUserDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','NodeUserDto.java',25,NULL,NULL),(68,'package com.theuniversalgraph.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"NodeUsers\")\r\npublic class NodeUserEntity extends NodeUser {\r\n\r\n    public NodeUserEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','NodeUserEntity.java',25,NULL,NULL),(69,'package com.theuniversalgraph.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport com.theuniversalgraph.api.rest.entity.NodeUserEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface NodeUserRepository extends JpaRepository<NodeUserEntity, String> {\r\n\r\n}','NodeUserRepository.java',25,NULL,NULL),(70,'package com.theuniversalgraph.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.converter.NodeUserConverter;\r\nimport com.theuniversalgraph.api.rest.dto.NodeUserDto;\r\nimport com.theuniversalgraph.api.rest.entity.NodeUserEntity;\r\nimport com.theuniversalgraph.api.rest.repository.NodeUserRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class NodeUserService {\r\n\r\n    @Autowired\r\n    private NodeUserRepository nodeUserRepository;\r\n\r\n    @Autowired\r\n    private NodeUserConverter nodeUserConverter;\r\n\r\n        public List<NodeUserDto> getAllNodeUsers(){\r\n        return nodeUserConverter.toDto(nodeUserRepository.findAll());\r\n    }\r\n\r\n    public NodeUserDto getNodeUser(final String id){\r\n        return nodeUserConverter.toDto(nodeUserRepository.findOne(id));\r\n    }\r\n\r\n    public NodeUserDto createNodeUser(NodeUserDto nodeUserDto){\r\n        NodeUserEntity nodeUserEntity = nodeUserConverter.fromDto(nodeUserDto);\r\n        return nodeUserConverter.toDto(nodeUserRepository.save(nodeUserEntity));\r\n    }\r\n\r\n    public NodeUserDto updateNodeUser(String id, NodeUserDto nodeUserDto){\r\n        nodeUserRepository.delete(id);\r\n        NodeUserEntity nodeUserEntity = nodeUserConverter.fromDto(nodeUserDto);\r\n        return nodeUserConverter.toDto(nodeUserRepository.save(nodeUserEntity));\r\n    }\r\n\r\n    public void deleteNodeUser(String id){\r\n        nodeUserRepository.delete(id);\r\n    }\r\n}\r\n','NodeUserService.java',25,NULL,NULL),(80,'package com.theuniversalgraph.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport com.theuniversalgraph.api.rest.dto.NodeUserDto;\r\nimport com.theuniversalgraph.api.rest.service.NodeUserService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/NodeUsers\")\r\n@Api(value = \"NodeUser API\")\r\npublic class NodeUserResource {\r\n\r\n    @Autowired\r\n    private NodeUserService nodeUserService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeUserDto> getAllNodeUsers() {\r\n        return nodeUserService.getAllNodeUsers();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeUserDto getNodeUser(@PathVariable final String id) {\r\n        return nodeUserService.getNodeUser(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeUserDto> addNodeUser(@RequestBody final NodeUserDto nodeUser) {\r\n        NodeUserDto createdNodeUser = nodeUserService.createNodeUser(nodeUser);\r\n        return new ResponseEntity<>(createdNodeUser, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNodeUser(@PathVariable final String id) {\r\n        nodeUserService.deleteNodeUser(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeUserDto> updateNodeUser(@PathVariable final String id, @RequestBody final NodeUserDto nodeUser) {\r\n        NodeUserDto createdNodeUser = nodeUserService.updateNodeUser(id, nodeUser);\r\n        return new ResponseEntity<>(createdNodeUser, HttpStatus.OK);\r\n    }\r\n}\r\n','NodeUserResource.java',25,NULL,NULL),(72,'package com.theuniversalgraph.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.dto.NodeDto;\r\nimport com.theuniversalgraph.api.rest.entity.NodeEntity;\r\nimport com.theuniversalgraph.model.*;\r\n\r\n@Service\r\npublic class NodeConverter extends AbstractConverter<NodeEntity, NodeDto> {\r\n\r\n    @Override\r\n    public void toDto(final NodeEntity entity, final NodeDto dto) {\r\n        // convert NodeEntity to NodeDto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final NodeEntity entity, final NodeDto dto) {\r\n        // convert NodeDto to NodeEntity\r\n     }\r\n}\r\n','NodeConverter.java',3,NULL,NULL),(73,'package com.theuniversalgraph.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport com.theuniversalgraph.model.*;\r\n\r\npublic class NodeDto {\r\n\r\n    public NodeDto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','NodeDto.java',3,NULL,NULL),(74,'package com.theuniversalgraph.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport net.nodepad.model.*;\r\n\r\n@Entity\r\n@Table(name = \"Nodes\")\r\npublic class NodeEntity extends Node {\r\n\r\n    public NodeEntity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','NodeEntity.java',3,NULL,NULL),(75,'package com.theuniversalgraph.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport com.theuniversalgraph.api.rest.entity.NodeEntity;\r\nimport net.nodepad.model.*;\r\n\r\n@Repository\r\npublic interface NodeRepository extends JpaRepository<NodeEntity, String> {\r\n\r\n}','NodeRepository.java',3,NULL,NULL),(76,'package com.theuniversalgraph.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport com.theuniversalgraph.api.rest.converter.NodeConverter;\r\nimport com.theuniversalgraph.api.rest.dto.NodeDto;\r\nimport com.theuniversalgraph.api.rest.entity.NodeEntity;\r\nimport com.theuniversalgraph.api.rest.repository.NodeRepository;\r\nimport net.nodepad.model.*;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class NodeService {\r\n\r\n    @Autowired\r\n    private NodeRepository nodeRepository;\r\n\r\n    @Autowired\r\n    private NodeConverter nodeConverter;\r\n\r\n        public List<NodeDto> getAllNodes(){\r\n        return nodeConverter.toDto(nodeRepository.findAll());\r\n    }\r\n\r\n    public NodeDto getNode(final String id){\r\n        return nodeConverter.toDto(nodeRepository.findOne(id));\r\n    }\r\n\r\n    public NodeDto createNode(NodeDto nodeDto){\r\n        NodeEntity nodeEntity = nodeConverter.fromDto(nodeDto);\r\n        return nodeConverter.toDto(nodeRepository.save(nodeEntity));\r\n    }\r\n\r\n    public NodeDto updateNode(String id, NodeDto nodeDto){\r\n        nodeRepository.delete(id);\r\n        NodeEntity nodeEntity = nodeConverter.fromDto(nodeDto);\r\n        return nodeConverter.toDto(nodeRepository.save(nodeEntity));\r\n    }\r\n\r\n    public void deleteNode(String id){\r\n        nodeRepository.delete(id);\r\n    }\r\n}\r\n','NodeService.java',3,NULL,NULL),(78,'package com.theuniversalgraph.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport com.theuniversalgraph.api.rest.dto.NodeFieldDto;\r\nimport com.theuniversalgraph.api.rest.service.NodeFieldService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/NodeFields\")\r\n@Api(value = \"NodeField API\")\r\npublic class NodeFieldResource {\r\n\r\n    @Autowired\r\n    private NodeFieldService nodeFieldService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<NodeFieldDto> getAllNodeFields() {\r\n        return nodeFieldService.getAllNodeFields();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public NodeFieldDto getNodeField(@PathVariable final String id) {\r\n        return nodeFieldService.getNodeField(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<NodeFieldDto> addNodeField(@RequestBody final NodeFieldDto nodeField) {\r\n        NodeFieldDto createdNodeField = nodeFieldService.createNodeField(nodeField);\r\n        return new ResponseEntity<>(createdNodeField, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteNodeField(@PathVariable final String id) {\r\n        nodeFieldService.deleteNodeField(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<NodeFieldDto> updateNodeField(@PathVariable final String id, @RequestBody final NodeFieldDto nodeField) {\r\n        NodeFieldDto createdNodeField = nodeFieldService.updateNodeField(id, nodeField);\r\n        return new ResponseEntity<>(createdNodeField, HttpStatus.OK);\r\n    }\r\n}\r\n','NodeFieldResource.java',19,NULL,NULL),(79,'package com.theuniversalgraph.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport com.theuniversalgraph.api.rest.dto.LinkUseDto;\r\nimport com.theuniversalgraph.api.rest.service.LinkUseService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/LinkUses\")\r\n@Api(value = \"LinkUse API\")\r\npublic class LinkUseResource {\r\n\r\n    @Autowired\r\n    private LinkUseService linkUseService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<LinkUseDto> getAllLinkUses() {\r\n        return linkUseService.getAllLinkUses();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public LinkUseDto getLinkUse(@PathVariable final String id) {\r\n        return linkUseService.getLinkUse(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<LinkUseDto> addLinkUse(@RequestBody final LinkUseDto linkUse) {\r\n        LinkUseDto createdLinkUse = linkUseService.createLinkUse(linkUse);\r\n        return new ResponseEntity<>(createdLinkUse, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteLinkUse(@PathVariable final String id) {\r\n        linkUseService.deleteLinkUse(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<LinkUseDto> updateLinkUse(@PathVariable final String id, @RequestBody final LinkUseDto linkUse) {\r\n        LinkUseDto createdLinkUse = linkUseService.updateLinkUse(id, linkUse);\r\n        return new ResponseEntity<>(createdLinkUse, HttpStatus.OK);\r\n    }\r\n}\r\n','LinkUseResource.java',22,NULL,NULL),(82,'package com.theuniversalgraph.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport net.nodepad.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport com.theuniversalgraph.api.rest.dto.UserDto;\r\nimport com.theuniversalgraph.api.rest.service.UserService;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/Users\")\r\n@Api(value = \"User API\")\r\npublic class UserResource {\r\n\r\n    @Autowired\r\n    private UserService userService;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<UserDto> getAllUsers() {\r\n        return userService.getAllUsers();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public UserDto getUser(@PathVariable final String id) {\r\n        return userService.getUser(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<UserDto> addUser(@RequestBody final UserDto user) {\r\n        UserDto createdUser = userService.createUser(user);\r\n        return new ResponseEntity<>(createdUser, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity deleteUser(@PathVariable final String id) {\r\n        userService.deleteUser(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<UserDto> updateUser(@PathVariable final String id, @RequestBody final UserDto user) {\r\n        UserDto createdUser = userService.updateUser(id, user);\r\n        return new ResponseEntity<>(createdUser, HttpStatus.OK);\r\n    }\r\n}\r\n','UserResource.java',21,NULL,NULL),(83,'package net.secual.web;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class SecualEventDetail extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		SecualEvent secualEvent = new SecualEventImpl();\r\n		Criteria criteria = session.createCriteria(SecualEvent.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			secualEvent = (SecualEvent) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			secualEvent = (SecualEvent) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"secualEvent\",secualEvent);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','SecualEventDetail.java',26,NULL,NULL),(84,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\npublic class SecualEventVP extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		SecualEvent secualEvent = new SecualEventImpl();\r\n		SecualEventForm secualEventform = (SecualEventForm) form;\r\n		\r\n                \r\n		\r\n		BeanUtils.copyProperties(secualEvent,secualEventform);\r\n		StringFullfiller.fullfil(secualEvent);\r\n		if(secualEventform.getId() == null || secualEventform.getId().intValue() == 0){\r\n			secualEvent.setId(null);\r\n		}else{\r\n			secualEvent.setId(secualEventform.getId());\r\n		}\r\n\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		\r\n                \r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(secualEvent);\r\n		transaction.commit();\r\n		session.flush();\r\n		\r\n		new HTTPGetRedirection(req, res, \"SecualEventDetail.do\", secualEvent.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','SecualEventVP.java',26,NULL,NULL),(85,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class SecualEvents extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(SecualEvent.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			SecualEvent secualEvent = (SecualEvent) iter.next();\r\n			vector.add(secualEvent);\r\n		}\r\n		SecualEvent secualEvent = new SecualEventImpl();\r\n		Criteria criteria2 = session.createCriteria(SecualEvent.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			secualEvent = (SecualEvent) criteria2.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			secualEvent = (SecualEvent) criteria2.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"secualEvent\",secualEvent);\r\n\r\n		\r\n		req.setAttribute(\"secualEvents\",vector);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','SecualEvents.java',26,NULL,NULL),(86,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class DeleteSecualEvent extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		Criteria criteria = session.createCriteria(SecualEvent.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n\r\n\r\n		SecualEvent secualEvent = (SecualEvent) criteria.uniqueResult();\r\n		session.delete(secualEvent);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','DeleteSecualEvent.java',26,NULL,NULL),(87,'package net.secual.web;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Date;\r\nimport java.util.Iterator;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.RssDublinCore;\r\nimport churchillobjects.rss4j.generator.RssGenerator;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class SecualEventRSSExport extends Action{\r\n\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n\r\n	        try{\r\n	        	RssDocument objRss=new RssDocument();\r\n	        	objRss.setVersion(\"1.0\");\r\n\r\n\r\n 		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n	    		Criteria criteria = session.createCriteria(SecualEvent.class);\r\n	    		criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n//	    		##secoundclass## ##secoundobj## = secualEvent.get##secoundclass##();\r\n	    			criteria = session.createCriteria(SecualEvent.class);\r\n//	    			criteria.addOrder(Order.desc(\"date\"));\r\n//	    			criteria.add(Restrictions.eq(\"##secoundobj##\", ##secoundobj##));\r\n	    			criteria.setMaxResults(30);\r\n	    			if(req.getParameter(\"q\") !=null && !req.getParameter(\"q\").equals(\"\")){\r\n	    				criteria.add(Restrictions.like(\"##aiueo##\",\"%\" + new String(req.getParameter(\"q\").getBytes(\"8859_1\"), \"UTF-8\")  + \"%\"));\r\n	    			}\r\n\r\n	    			ChannelBuilder builder = new ChannelBuilder();\r\n	    			ChannelIF newChannel = builder.createChannel(\"SecualEvents\");\r\n	    			newChannel.setFormat(ChannelFormat.RSS_1_0);\r\n	    			newChannel.setLanguage(\"ja\");\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setDescription(\"SecualEvents\");\r\n\r\n\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n		        	newChannel.setDescription(\"SecualEvents\");\r\n	    			for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n	    				SecualEvent secualEvent = (SecualEvent)iter.next();\r\n					ItemIF item = new Item();\r\n					//item.setDate(new Date());\r\n\r\n	    				item.setTitle(secualEvent.getName());\r\n	    				item.setLink(new URL(\"http://\"+req.getServerName()+req.getRequestURI());\r\n	    				item.setDescription(secualEvent.getName());\r\n		    			newChannel.addItem(item);\r\n	    			}\r\n	    			StringWriter stringWriter = new StringWriter();\r\n	    			res.setContentType(\"text/xml;charset=utf-8\");\r\n	    			res.setCharacterEncoding(\"utf-8\");\r\n	    			RSS_1_0_Exporter writer = new RSS_1_0_Exporter(stringWriter,\"utf-8\");\r\n	    			writer.write(newChannel);\r\n	    			res.getWriter().write(stringWriter.toString());\r\n		    			\r\n	    			PrintWriter printWriter = new PrintWriter(new File(this.getServlet().getServletContext().getRealPath(\"SecualEventRssExport.xml\")),\"utf-8\");\r\n	    			printWriter.write(stringWriter.toString());\r\n\r\n	    			session.flush();\r\n\r\n	        }catch(IOException e){\r\n	            System.out.println(e.toString());\r\n	        }finally{\r\n	        }\r\n\r\n\r\n\r\n        \r\n		return mapping.findForward(\"success\");\r\n	}\r\n    public String url2link(String string){\r\n    	return string.replaceAll(\"(http://|https://){1}[\\\\w\\\\.\\\\-/:]+\",\"<a href=\'$0\'>$0</a>\");\r\n    }\r\n    public String nl2br(String string){\r\n    	string = string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	return string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	\r\n    }\r\n\r\n\r\n	\r\n}','SecualEventRSSExport.java',26,NULL,NULL),(88,'package net.secual.web;\r\n\r\nimport java.net.URL;\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class SecualEventInputRss extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		String urlstr = req.getParameter(\"url\");\r\n        try {\r\n           URL url = new URL(urlstr);\r\n		HttpClient client = new HttpClient();\r\n       		URL url = new URL(urlstr);\r\n		GetMethod method = new GetMethod(url.toString());\r\n		client.executeMethod(method);\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		RssDocument doc = RssParser.parseRss(method.getResponseBodyAsString());\r\n		Enumeration enum = doc.channels();\r\n		while(enum.hasMoreElements()){\r\n		  RssChannel channel = (RssChannel)enum.nextElement();\r\n		  System.out.println(\"Channel: \"+channel.getChannelTitle());\r\n		  Enumeration items = channel.items();\r\n		  while(items.hasMoreElements()){\r\n                  	RssChannelItem item = (RssChannelItem) items.nextElement();	     		                SecualEvent secualEvent = new SecualEventImpl();\r\n			secualEvent.setContent(item.getItemDescription());\r\n			secualEvent.setTitle(itemIf.getItemTitle());\r\n		//	##EDITSNIP## textStr = this.nl2br(textStr);\r\n			StringFullfiller.fullfil(secualEvent);\r\n			Transaction transaction = session.beginTransaction();\r\n			session.saveOrUpdate(secualEvent);\r\n			transaction.commit();\r\n		  }\r\n		session.flush();\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n		return mapping.findForward(\"success\");\r\n	}	\r\n}','SecualEventInputRss.java',26,NULL,NULL),(89,'','SetSelectionOfSecualEvent##attr##.java',26,NULL,NULL),(90,'','SetSecualEvent##Attr##.java',26,NULL,NULL),(91,'','SetSecualEventNon##attr##.java',26,NULL,NULL),(92,'package net.secual.web;\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class CopyASecualEventFromASecualEvent extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n\r\n		Criteria criteria = session.createCriteria(SecualEvent.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n		SecualEvent secualEvent = (SecualEvent) criteria.uniqueResult();\r\n		SecualEvent secualEvent2 = new SecualEventImpl();\r\n		BeanUtils.copyProperties(secualEvent2,secualEvent);\r\n                secualEvent2.setId(null);\r\n		//secualEvent2.setSomething(null);\r\n		session.saveOrUpdate(secualEvent2);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n		req.setAttribute(\"id\", secualEvent2.getId());\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','CopyASecualEventFromASecualEvent.java',26,NULL,NULL),(93,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport java.awt.font.NumericShaper;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.util.Iterator;\r\nimport java.util.Locale;\r\nimport java.util.Vector;\r\n\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.criterion.Order;\r\n\r\nimport jxl.Workbook;\r\nimport jxl.WorkbookSettings;\r\nimport jxl.write.Label;\r\nimport jxl.write.Number;\r\nimport jxl.write.WritableSheet;\r\nimport jxl.write.WritableWorkbook;\r\nimport net.pmcsm.model.Componey;\r\nimport net.pmcsm.model.Manual;\r\nimport net.pmcsm.model.Outsourcing;\r\n\r\n\r\npublic class XlsExportOfSecualEvent{\r\n	public XlsExportOfSecualEvent(Vector vector,OutputStream outputStream,Session session){\r\n\r\n        try{\r\n        	WorkbookSettings ws = new WorkbookSettings();\r\n\r\n        	ws.setLocale(new Locale(\"ja\", \"JP\"));\r\n        	ws.setEncoding(\"Windows-31J\");\r\n        	WritableWorkbook workbook = Workbook.createWorkbook(outputStream, ws);\r\n        	WritableSheet sheet = workbook.createSheet(\"sheet\", 0);\r\n        	ws.setGCDisabled(true);\r\n        	\r\n                int x = 0;\r\n                sheet.addCell(new Label(x++, 0, \"1\"));\r\n        	sheet.addCell(new Label(x++, 0, \"2\"));\r\n        	sheet.addCell(new Label(x++, 0, \"3\"));\r\n        	sheet.addCell(new Label(x++, 0, \"4\"));\r\n        	sheet.addCell(new Label(x++, 0, \"5\"));\r\n        	sheet.addCell(new Label(x++, 0, \"6\"));\r\n        	sheet.addCell(new Label(x++, 0, \"7\"));\r\n        	sheet.addCell(new Label(x++, 0, \"8\"));\r\n        	sheet.addCell(new Label(x++, 0, \"9\"));\r\n        	sheet.addCell(new Label(x++, 0, \"10\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n        	x = 0;\r\n        	int y= 1;\r\n    		for (Iterator iter = vector.iterator(); iter.hasNext();) {\r\n    			SecualEvent secualEvent = (SecualEvent) iter.next();\r\n    			sheet.addCell(new Label(x++, y, secualEvent.get().getTypename()));\r\n    			sheet.addCell(new Label(x++, y, secualEvent.get().getModelcode()));\r\n    			sheet.addCell(new Label(x++, y, secualEvent.get().getShimuke()));\r\n    			sheet.addCell(new Label(x++, y, secualEvent.get().getName()));\r\n    			sheet.addCell(new Number(x++, y, secualEvent.get()));\r\n    			sheet.addCell(new Number(x++, y, secualEvent.get()));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			i++;\r\n    		}\r\n        	\r\n        	workbook.write();\r\n        	workbook.close();\r\n		\r\n        }catch(Exception e){\r\n            System.out.println(e.toString());\r\n        }finally{\r\n        }\r\n	}\r\n	\r\n\r\n\r\n}','XlsExportOfSecualEvent.java',26,NULL,NULL),(94,'','GrepSecualEventOn##attr##.java',26,NULL,NULL),(95,'/* \r\n * File:   gateway.c\r\n */\r\n\r\n#include \"gateway.h\"\r\n\r\nGateway* model_new_gateway(USTRING gatewayID)\r\n{\r\n  Gateway* gateway = (Gateway*) malloc(sizeof(Gateway));\r\n  gateway->awakeFreq = 0;\r\ngateway->buzzer = false;\r\ngateway->gatewayID = gatewayID;\r\ngateway->secret = NULL;\r\ngateway->sleepFreq = 0;\r\n\r\n  gateway->sensors = NULL;\r\n  gateway->next = NULL;\r\n  return gateway;\r\n}\r\n\r\nvoid model_delete_gateway(Gateway* gateway)\r\n{\r\n  free(gateway);\r\n}\r\n\r\nvoid model_add_sensor(Gateway* gateway, Sensor* sensor)\r\n{\r\n  sensor->next = gateway->sensors;\r\n  gateway->sensors = sensor;\r\n}\r\n\r\nvoid model_remove_sensor(Gateway* gateway, Sensor* sensor)\r\n{\r\n  Sensor** sensorPtr;\r\n  \r\n  for (sensorPtr = &gateway->sensors; *sensorPtr != NULL; sensorPtr = &((*sensorPtr)->next))\r\n  {\r\n    if (*sensorPtr == sensor)\r\n    {\r\n      *sensorPtr = sensor->next;\r\n      sensor->next = NULL;\r\n      break;\r\n    }  \r\n  }  \r\n}\r\n\r\nSensor* model_lookup_sensor(Gateway* gateway, USTRING sensorID)\r\n{\r\n  Sensor* sensorPtr;\r\n  \r\n  for (sensorPtr = gateway->sensors; sensorPtr != NULL; sensorPtr = sensorPtr->next)\r\n  {\r\n    if (strcmp(sensorPtr->sensorID, sensorID) == 0)\r\n      return sensorPtr;\r\n  }\r\n  return NULL;  \r\n}  \r\n\r\nint model_sensors_num(Gateway* gateway)\r\n{\r\n  Sensor* sensorPtr;\r\n  int sensorsNum = 0;\r\n  \r\n  for (sensorPtr = gateway->sensors; sensorPtr != NULL; \r\n       sensorPtr = sensorPtr->next)\r\n  {\r\n    sensorsNum++;\r\n  }  \r\n  return sensorsNum;\r\n}\r\n\r\nSensor* model_sensor_at(Gateway* gateway, int index)\r\n{\r\n  Sensor* sensorPtr;\r\n  int i;\r\n  \r\n  if (index < 0)\r\n    return NULL;\r\n  for (i= 0, sensorPtr = gateway->sensors; sensorPtr != NULL; \r\n       sensorPtr = sensorPtr->next, i++)\r\n  {\r\n    if (i == index)\r\n      break;\r\n  }  \r\n  return sensorPtr;\r\n}\r\n\r\nvoid model_put_gateway_values(Gateway* gateway, JSONTree* tree)\r\n{\r\n  int i;\r\n  JSONTree* gateway_tree;\r\n  JSONTree* sensors_tree;\r\n  JSONTree* sensor_tree;\r\n  JSONTree* value;\r\n  USTRING sensorID;\r\n  Sensor* sensor;\r\n  \r\n  gateway_tree = json_lookup_value(tree, \"gateway\"); // maybe gateway->gatewayID ?\r\n  if (gateway_tree == NULL)\r\n    return;\r\n  \r\n  value = json_lookup_value(gateway_tree, \"awakeFreq\");\nif (value != NULL)\ngateway->awakeFreq = json_get_integer(value);\nvalue = json_lookup_value(gateway_tree, \"buzzer\");\nif (value != NULL)\ngateway->buzzer = json_is_true(value);\nvalue = json_lookup_value(gateway_tree, \"secret\");\nif (value != NULL)\n{\n      if (gateway->secret != NULL)\n      free(gateway->secret);\ngateway->secret = strdup(json_get_string(value));\n  }\r\nvalue = json_lookup_value(gateway_tree, \"sleepFreq\");\nif (value != NULL)\ngateway->sleepFreq = json_get_integer(value);\n\r\n  \r\n  sensors_tree = json_lookup_value(gateway_tree, \"sensors_attributes\");\r\n  if (sensors_tree == NULL)\r\n    return;\r\n  if (!json_is_array(sensors_tree))\r\n    return;\r\n  for (i = 0; i < json_get_array_size(sensors_tree); i++)\r\n  {\r\n    sensor_tree = json_get_array_element(sensors_tree, i);\r\n    value = json_lookup_value(sensor_tree, \"id\");\r\n    if (!json_is_string(value))\r\n      continue;\r\n    sensorID = json_get_string(value);\r\n    sensor = model_lookup_sensor(gateway, sensorID);\r\n    if (sensor == NULL)\r\n      continue;\r\n    model_put_sensor_values(sensor, sensor_tree);\r\n  }  \r\n}\r\n\r\nJSONTree* model_get_gateway_values(Gateway* gateway)\r\n{\r\n  int i;\r\n  JSONTree* awakeFreq = json_new_integer(gateway->awakeFreq);\r\nJSONTree* buzzer = json_new_boolean(gateway->buzzer);\r\nJSONTree* gatewayID = json_new_string(gateway->gatewayID);\r\nJSONTree* secret = json_new_string(gateway->secret);\r\nJSONTree* sleepFreq = json_new_integer(gateway->sleepFreq);\r\n \r\n  JSONTree* gateway_tree = json_new_object();\r\n  JSONTree* sensors = json_new_array();\r\n  \r\n  // Add the sensors array subtree\r\n  for (i = 0; i < model_sensors_num(gateway); i++)\r\n  {\r\n    Sensor* sensor = model_sensor_at(gateway, i);\r\n    JSONTree* sensor_tree = model_get_sensor_values(sensor);\r\n    json_add_array_element(sensors, sensor_tree);\r\n  }  \r\n  \r\njson_add_value(gateway_tree, \"awakeFreq\", awakeFreq);\r\njson_add_value(gateway_tree, \"buzzer\", buzzer);\r\njson_add_value(gateway_tree, \"id\", gatewayID);\r\njson_add_value(gateway_tree, \"secret\", secret);\r\njson_add_value(gateway_tree, \"sleepFreq\", sleepFreq);\r\n\r\n  json_add_value(gateway_tree, \"sensors_attributes\", sensors);\r\n  return gateway_tree;\r\n}\r\n\r\n#ifdef MODEL_DEBUG\r\n\r\nvoid model_print_gateway(Gateway* gateway, FILE* f, int indent)\r\n{\r\n  Sensor* sensPtr;\r\n  char margin[16];\r\n  int i;\r\n  \r\n  for (i = 0; i < indent; i++)\r\n    margin[i] = \' \';\r\n  margin[i] = 0;\r\n  \r\n  fprintf(f, \"%sGateway:\\n\", margin);\r\n  fprintf(f, \"%s{\\n\", margin);\r\n  fprintf(f, \"%s  awakeFreq= %dn\", margin, gateway->awakeFreq);\r\nfprintf(f, \"%s  buzzer= %sn\", margin, boolean_to_string(gateway->buzzer));\r\nfprintf(f, \"%s  gatewayID= \"%s\"n\", margin, gateway->gatewayID);\r\nif(gateway->secret!= NULL)\r\nfprintf(f, \"%s  secret= \"%s\"n\", margin, gateway->secret);\r\nelse fprintf(f, \"%s  secret = NULLn\", margin);\r\nfprintf(f, \"%s  sleepFreq= %dn\", margin, gateway->sleepFreq);\r\n\r\n  fprintf(f, \"\\n%s  Sensors:\\n\", margin);\r\n  fprintf(f, \"%s  {\\n\", margin);\r\n  for (i = 0; i <  model_sensors_num(gateway); i++)\r\n  {\r\n    sensPtr = model_sensor_at(gateway, i);\r\n    model_print_sensor(sensPtr, f, indent + 4);\r\n  }\r\n  fprintf(f, \"%s  }\\n\", margin);\r\n  \r\n  fprintf(f, \"%s}\\n\", margin);\r\n}\r\n\r\n#endif /* MODEL_DEBUG */','gateway.c.java',39,NULL,NULL),(96,'/* \r\n * File:   gateway.h\r\n */\r\n\r\n#ifndef _GATEWAY_H\r\n#define	_GATEWAY_H\r\n\r\n#ifdef	__cplusplus\r\nextern \"C\" {\r\n#endif\r\n\r\n#include \"jsondefs.h\"\r\n#include \"sensor.h\"  \r\n\r\ntypedef struct Gateway\r\n{\r\n   int32_t awakeFreq;\r\nboolean buzzer;\r\nUSTRING gatewayID;\r\nSTRING secret;\r\nint32_t sleepFreq;\r\n    \r\n   Sensor* sensors; // pointer to list of sensors\r\n  struct Gateway* next;  // pointer to next Gateway in gateway list\r\n} Gateway;  \r\n\r\n/* Create and init a new Gatewaystructure with gatewayID identifier */\r\nGateway* model_new_gateway(USTRING gatewayID);\r\n\r\n/* Delete gateway and free allocated for gateway memory  */\r\nvoid model_delete_gateway(Gateway* gateway);\r\n\r\n/* Add new sensor to gateway list of sensors */\r\nvoid model_add_sensor(Gateway* gateway, Sensor* sensor);\r\n\r\n/* \r\n * Remove Sensor from gateway list of sensors.\r\n * Sensor structure only removed from gateway, but not deleted.\r\n */\r\nvoid model_remove_sensor(Gateway* gateway, Sensor* sensor);\r\n\r\n/*\r\n * Lookup sensor in gateway with given sensorID \r\n * \r\n * Returns: a pointer to Sensor or NULL if sensor not found\r\n */\r\nSensor* model_lookup_sensor(Gateway* gateway, USTRING sensorID);\r\n\r\n/*\r\n * Get a number of Sensors in gateway list\r\n */\r\nint model_sensors_num(Gateway* gateway);\r\n\r\n/*\r\n * Get a sensor from Gateway list of sensors\r\n * index - sensor index\r\n * \r\n * Returns Sensor data of NULL for invalid index\r\n */\r\nSensor* model_sensor_at(Gateway* gateway, int index);\r\n\r\n/*\r\n * Put values from JSON parsed tree to Gateway and it\'s substructures\r\n *   ( sensors etc.)\r\n */\r\nvoid model_put_gateway_values(Gateway* gateway, JSONTree* tree);\r\n\r\n/*\r\n * Get Gateway object property values as JSON object tree\r\n * Gateway properies includes also properies of all \r\n *   Gateway sub-objects, like Sensors\r\n */\r\nJSONTree* model_get_gateway_values(Gateway* gateway);\r\n\r\n#ifdef MODEL_DEBUG\r\n\r\n/*\r\n * Debbuging function to pretty print a gateway contents into a file f\r\n * indent - number of left indent spaces in printing\r\n */\r\nvoid model_print_gateway(Gateway* gateway, FILE* f, int indent);\r\n\r\n#endif /* GATEWAY_MODEL_DEBUG */\r\n\r\n#ifdef	 __cplusplus\r\n}\r\n#endif\r\n\r\n#endif	/* _GATEWAY_H */','gateway.h.java',39,NULL,NULL),(146,'.accounts{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','accounts.scss.java',44,NULL,NULL),(147,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountsController\', AccountsController);\r\n\r\n  	/** @ngInject */\n	function AccountsController(toastr, ) {\n	}\r\n})();','accounts.controller.js.java',55,NULL,NULL),(243,'.add-account {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','account.add.scss.java',55,NULL,NULL),(244,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/accounts.add/accounts.add.html\',\r\n        controller: \'AccountAddController\',\r\n        controllerAs: \'accountAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','account.add.route.js.java',55,NULL,NULL),(148,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'SecualEventService\', SecualEventService);\r\n\r\n    SecualEventService.$inject = [\'Restangular\', \'$q\'];\r\n    function SecualEventService(Restangular, $q) {\r\n        var secualEventService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var secualEventRepository = Restangular.one(\'secualEvent\');\r\n\r\n        function get() {             \r\n            return secualEventRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return secualEventRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return secualEventRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return secualEventRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(secualEventId){\r\n          \r\n\r\n            return secualEventRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return secualEventService;\r\n    }\r\n})();\r\n','secualEvent.service.js.java',58,NULL,NULL),(144,' <md-list class=\"accounts\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"account in accountsList.accounts\" >\r\n    <a ui-sref=\"app.accounts.edit({id:account.id})\">\r\n\r\n                <div class=\"account-name col-md-6 col-sm-6 col-xs-6\">{{account.email}}\r\n                </div>\r\n                <div class=\"account-group col-md-6 col-sm-6 col-xs-6\">{{account.groupName}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.accounts.add\">Create account</a>','accounts.html.java',44,NULL,NULL),(145,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts\', {\r\n        url: \'/accounts\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.accounts.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/accounts/accounts.html\',\r\n        controller: \'AccountsController\',\r\n        controllerAs: \'accountsList\',\r\n        resolve: {\r\n          groups: function(GroupService){ \r\n            return GroupService.get();\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','accounts.route.js.java',44,NULL,NULL),(143,'<div class=\"add-account\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountEditInfo.account.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountAddInfo.account.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountAddInfo.account.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountAddInfo.account.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"accountAddInfo.account.group.name\">\r\n          <md-option ng-repeat=\"group in accountAddInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-account-btn\" ng-click=\"accountAddInfo.create()\">Save account</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','accounts.add.html.java',44,NULL,NULL),(141,'.add-account {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','accounts.add.scss.java',44,NULL,NULL),(142,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountAddController\', AccountEditController);\r\n\r\n  /** @ngInject */\r\n  function AccountAddController(toastr, AccountService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.account = {};\r\n    vm.groups = [];\r\n    vm.create = createAccount;\r\n\r\n    function createAccount(){\r\n      accountService.create(vm.account).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','accounts.add.controller.js.java',44,NULL,NULL),(140,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/accounts.add/accounts.add.html\',\r\n        controller: \'AccountAddController\',\r\n        controllerAs: \'accountAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','accounts.add.route.js.java',44,NULL,NULL),(137,'.edit-account {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','accounts.edit.scss.java',44,NULL,NULL),(138,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountEditController\', AccountEditController);\r\n\r\n  /** @ngInject */\r\n  function AccountEditController(toastr, account, AccountService, $scope) {\r\n    var vm = this;\r\n     $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.account = account;\r\n    vm.groups = [];\r\n    vm.delete = deleteAccount;\r\n\r\n    function deleteAccount(){\r\n      accountService.delete(vm.account.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','accounts.edit.controller.js.java',44,NULL,NULL),(139,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/accounts.edit/accounts.edit.html\',\r\n        controller: \'AccountEditController\',\r\n        controllerAs: \'accountEditInfo\',\r\n        resolve: {\r\n          account: function(AccountService, $stateParams){ \r\n            return AccountService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','accounts.edit.route.js.java',44,NULL,NULL),(247,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'ConfigurationChangeEditController\', ConfigurationChangeEditController);\r\n\r\n  /** @ngInject */\r\n  function ConfigurationChangeEditController(toastr, configurationChange, ConfigurationChangeService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.configurationChange = configurationChange;\r\n    \r\n    vm.delete = deleteConfigurationChange;\r\n\r\n    function deleteConfigurationChange(){\r\n      configurationChangeService.delete(vm.configurationChange.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','configurationChange.edit.controller.js.java',56,NULL,NULL),(136,'<div class=\"edit-account\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{account.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountEditInfo.account.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountEditInfo.account.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountEditInfo.account.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"accountEditInfo.account.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"accountEditInfo.account.group.name\">\r\n          <md-option ng-repeat=\"group in accountEditInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-account-btn\" ng-click=\"delete()\">Delete account</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','accounts.edit.html.java',44,NULL,NULL),(135,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'AccountService\', AccountService);\r\n\r\n    AccountService.$inject = [\'Restangular\', \'$q\'];\r\n    function AccountService(Restangular, $q) {\r\n        var accountService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var accountRepository = Restangular.one(\'account\');\r\n\r\n        function get() {             \r\n            return accountRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return accountRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return accountRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return accountRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(accountId){\r\n          \r\n\r\n            return accountRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return accountService;\r\n    }\r\n})();\r\n','account.service.js.java',55,NULL,NULL),(110,'package net.secual.web;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class SubscriptionLisenseDetail extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		SubscriptionLisense subscriptionLisense = new SubscriptionLisenseImpl();\r\n		Criteria criteria = session.createCriteria(SubscriptionLisense.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			subscriptionLisense = (SubscriptionLisense) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			subscriptionLisense = (SubscriptionLisense) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"subscriptionLisense\",subscriptionLisense);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','SubscriptionLisenseDetail.java',27,NULL,NULL),(111,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\npublic class SubscriptionLisenseVP extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		SubscriptionLisense subscriptionLisense = new SubscriptionLisenseImpl();\r\n		SubscriptionLisenseForm subscriptionLisenseform = (SubscriptionLisenseForm) form;\r\n		\r\n                \r\n		\r\n		BeanUtils.copyProperties(subscriptionLisense,subscriptionLisenseform);\r\n		StringFullfiller.fullfil(subscriptionLisense);\r\n		if(subscriptionLisenseform.getId() == null || subscriptionLisenseform.getId().intValue() == 0){\r\n			subscriptionLisense.setId(null);\r\n		}else{\r\n			subscriptionLisense.setId(subscriptionLisenseform.getId());\r\n		}\r\n\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		\r\n                \r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(subscriptionLisense);\r\n		transaction.commit();\r\n		session.flush();\r\n		\r\n		new HTTPGetRedirection(req, res, \"SubscriptionLisenseDetail.do\", subscriptionLisense.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','SubscriptionLisenseVP.java',27,NULL,NULL),(112,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class SubscriptionLisenses extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(SubscriptionLisense.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			SubscriptionLisense subscriptionLisense = (SubscriptionLisense) iter.next();\r\n			vector.add(subscriptionLisense);\r\n		}\r\n		SubscriptionLisense subscriptionLisense = new SubscriptionLisenseImpl();\r\n		Criteria criteria2 = session.createCriteria(SubscriptionLisense.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			subscriptionLisense = (SubscriptionLisense) criteria2.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			subscriptionLisense = (SubscriptionLisense) criteria2.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"subscriptionLisense\",subscriptionLisense);\r\n\r\n		\r\n		req.setAttribute(\"subscriptionLisenses\",vector);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','SubscriptionLisenses.java',27,NULL,NULL),(113,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class DeleteSubscriptionLisense extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		Criteria criteria = session.createCriteria(SubscriptionLisense.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n\r\n\r\n		SubscriptionLisense subscriptionLisense = (SubscriptionLisense) criteria.uniqueResult();\r\n		session.delete(subscriptionLisense);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','DeleteSubscriptionLisense.java',27,NULL,NULL),(114,'package net.secual.web;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Date;\r\nimport java.util.Iterator;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.RssDublinCore;\r\nimport churchillobjects.rss4j.generator.RssGenerator;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class SubscriptionLisenseRSSExport extends Action{\r\n\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n\r\n	        try{\r\n	        	RssDocument objRss=new RssDocument();\r\n	        	objRss.setVersion(\"1.0\");\r\n\r\n\r\n 		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n	    		Criteria criteria = session.createCriteria(SubscriptionLisense.class);\r\n	    		criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n//	    		##secoundclass## ##secoundobj## = subscriptionLisense.get##secoundclass##();\r\n	    			criteria = session.createCriteria(SubscriptionLisense.class);\r\n//	    			criteria.addOrder(Order.desc(\"date\"));\r\n//	    			criteria.add(Restrictions.eq(\"##secoundobj##\", ##secoundobj##));\r\n	    			criteria.setMaxResults(30);\r\n	    			if(req.getParameter(\"q\") !=null && !req.getParameter(\"q\").equals(\"\")){\r\n	    				criteria.add(Restrictions.like(\"##aiueo##\",\"%\" + new String(req.getParameter(\"q\").getBytes(\"8859_1\"), \"UTF-8\")  + \"%\"));\r\n	    			}\r\n\r\n	    			ChannelBuilder builder = new ChannelBuilder();\r\n	    			ChannelIF newChannel = builder.createChannel(\"SubscriptionLisenses\");\r\n	    			newChannel.setFormat(ChannelFormat.RSS_1_0);\r\n	    			newChannel.setLanguage(\"ja\");\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setDescription(\"SubscriptionLisenses\");\r\n\r\n\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n		        	newChannel.setDescription(\"SubscriptionLisenses\");\r\n	    			for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n	    				SubscriptionLisense subscriptionLisense = (SubscriptionLisense)iter.next();\r\n					ItemIF item = new Item();\r\n					//item.setDate(new Date());\r\n\r\n	    				item.setTitle(subscriptionLisense.getName());\r\n	    				item.setLink(new URL(\"http://\"+req.getServerName()+req.getRequestURI());\r\n	    				item.setDescription(subscriptionLisense.getName());\r\n		    			newChannel.addItem(item);\r\n	    			}\r\n	    			StringWriter stringWriter = new StringWriter();\r\n	    			res.setContentType(\"text/xml;charset=utf-8\");\r\n	    			res.setCharacterEncoding(\"utf-8\");\r\n	    			RSS_1_0_Exporter writer = new RSS_1_0_Exporter(stringWriter,\"utf-8\");\r\n	    			writer.write(newChannel);\r\n	    			res.getWriter().write(stringWriter.toString());\r\n		    			\r\n	    			PrintWriter printWriter = new PrintWriter(new File(this.getServlet().getServletContext().getRealPath(\"SubscriptionLisenseRssExport.xml\")),\"utf-8\");\r\n	    			printWriter.write(stringWriter.toString());\r\n\r\n	    			session.flush();\r\n\r\n	        }catch(IOException e){\r\n	            System.out.println(e.toString());\r\n	        }finally{\r\n	        }\r\n\r\n\r\n\r\n        \r\n		return mapping.findForward(\"success\");\r\n	}\r\n    public String url2link(String string){\r\n    	return string.replaceAll(\"(http://|https://){1}[\\\\w\\\\.\\\\-/:]+\",\"<a href=\'$0\'>$0</a>\");\r\n    }\r\n    public String nl2br(String string){\r\n    	string = string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	return string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	\r\n    }\r\n\r\n\r\n	\r\n}','SubscriptionLisenseRSSExport.java',27,NULL,NULL),(115,'package net.secual.web;\r\n\r\nimport java.net.URL;\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class SubscriptionLisenseInputRss extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		String urlstr = req.getParameter(\"url\");\r\n        try {\r\n           URL url = new URL(urlstr);\r\n		HttpClient client = new HttpClient();\r\n       		URL url = new URL(urlstr);\r\n		GetMethod method = new GetMethod(url.toString());\r\n		client.executeMethod(method);\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		RssDocument doc = RssParser.parseRss(method.getResponseBodyAsString());\r\n		Enumeration enum = doc.channels();\r\n		while(enum.hasMoreElements()){\r\n		  RssChannel channel = (RssChannel)enum.nextElement();\r\n		  System.out.println(\"Channel: \"+channel.getChannelTitle());\r\n		  Enumeration items = channel.items();\r\n		  while(items.hasMoreElements()){\r\n                  	RssChannelItem item = (RssChannelItem) items.nextElement();	     		                SubscriptionLisense subscriptionLisense = new SubscriptionLisenseImpl();\r\n			subscriptionLisense.setContent(item.getItemDescription());\r\n			subscriptionLisense.setTitle(itemIf.getItemTitle());\r\n		//	##EDITSNIP## textStr = this.nl2br(textStr);\r\n			StringFullfiller.fullfil(subscriptionLisense);\r\n			Transaction transaction = session.beginTransaction();\r\n			session.saveOrUpdate(subscriptionLisense);\r\n			transaction.commit();\r\n		  }\r\n		session.flush();\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n		return mapping.findForward(\"success\");\r\n	}	\r\n}','SubscriptionLisenseInputRss.java',27,NULL,NULL),(116,'','SetSelectionOfSubscriptionLisense##attr##.java',27,NULL,NULL),(117,'','SetSubscriptionLisense##Attr##.java',27,NULL,NULL),(118,'','SetSubscriptionLisenseNon##attr##.java',27,NULL,NULL),(119,'package net.secual.web;\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class CopyASubscriptionLisenseFromASubscriptionLisense extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n\r\n		Criteria criteria = session.createCriteria(SubscriptionLisense.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n		SubscriptionLisense subscriptionLisense = (SubscriptionLisense) criteria.uniqueResult();\r\n		SubscriptionLisense subscriptionLisense2 = new SubscriptionLisenseImpl();\r\n		BeanUtils.copyProperties(subscriptionLisense2,subscriptionLisense);\r\n                subscriptionLisense2.setId(null);\r\n		//subscriptionLisense2.setSomething(null);\r\n		session.saveOrUpdate(subscriptionLisense2);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n		req.setAttribute(\"id\", subscriptionLisense2.getId());\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','CopyASubscriptionLisenseFromASubscriptionLisense.java',27,NULL,NULL),(120,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport java.awt.font.NumericShaper;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.util.Iterator;\r\nimport java.util.Locale;\r\nimport java.util.Vector;\r\n\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.criterion.Order;\r\n\r\nimport jxl.Workbook;\r\nimport jxl.WorkbookSettings;\r\nimport jxl.write.Label;\r\nimport jxl.write.Number;\r\nimport jxl.write.WritableSheet;\r\nimport jxl.write.WritableWorkbook;\r\nimport net.pmcsm.model.Componey;\r\nimport net.pmcsm.model.Manual;\r\nimport net.pmcsm.model.Outsourcing;\r\n\r\n\r\npublic class XlsExportOfSubscriptionLisense{\r\n	public XlsExportOfSubscriptionLisense(Vector vector,OutputStream outputStream,Session session){\r\n\r\n        try{\r\n        	WorkbookSettings ws = new WorkbookSettings();\r\n\r\n        	ws.setLocale(new Locale(\"ja\", \"JP\"));\r\n        	ws.setEncoding(\"Windows-31J\");\r\n        	WritableWorkbook workbook = Workbook.createWorkbook(outputStream, ws);\r\n        	WritableSheet sheet = workbook.createSheet(\"sheet\", 0);\r\n        	ws.setGCDisabled(true);\r\n        	\r\n                int x = 0;\r\n                sheet.addCell(new Label(x++, 0, \"1\"));\r\n        	sheet.addCell(new Label(x++, 0, \"2\"));\r\n        	sheet.addCell(new Label(x++, 0, \"3\"));\r\n        	sheet.addCell(new Label(x++, 0, \"4\"));\r\n        	sheet.addCell(new Label(x++, 0, \"5\"));\r\n        	sheet.addCell(new Label(x++, 0, \"6\"));\r\n        	sheet.addCell(new Label(x++, 0, \"7\"));\r\n        	sheet.addCell(new Label(x++, 0, \"8\"));\r\n        	sheet.addCell(new Label(x++, 0, \"9\"));\r\n        	sheet.addCell(new Label(x++, 0, \"10\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n        	x = 0;\r\n        	int y= 1;\r\n    		for (Iterator iter = vector.iterator(); iter.hasNext();) {\r\n    			SubscriptionLisense subscriptionLisense = (SubscriptionLisense) iter.next();\r\n    			sheet.addCell(new Label(x++, y, subscriptionLisense.get().getTypename()));\r\n    			sheet.addCell(new Label(x++, y, subscriptionLisense.get().getModelcode()));\r\n    			sheet.addCell(new Label(x++, y, subscriptionLisense.get().getShimuke()));\r\n    			sheet.addCell(new Label(x++, y, subscriptionLisense.get().getName()));\r\n    			sheet.addCell(new Number(x++, y, subscriptionLisense.get()));\r\n    			sheet.addCell(new Number(x++, y, subscriptionLisense.get()));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			i++;\r\n    		}\r\n        	\r\n        	workbook.write();\r\n        	workbook.close();\r\n		\r\n        }catch(Exception e){\r\n            System.out.println(e.toString());\r\n        }finally{\r\n        }\r\n	}\r\n	\r\n\r\n\r\n}','XlsExportOfSubscriptionLisense.java',27,NULL,NULL),(121,'','GrepSubscriptionLisenseOn##attr##.java',27,NULL,NULL),(245,'.accounts{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','account.scss.java',55,NULL,NULL),(246,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts\', {\r\n        url: \'/accounts\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.accounts.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/accounts/accounts.html\',\r\n        controller: \'AccountsController\',\r\n        controllerAs: \'accountsList\',\r\n		\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','account.route.js.java',55,NULL,NULL),(240,'<div class=\"add-account\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n	\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-account-btn\" ng-click=\"accountAddInfo.create()\">Save account</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','account.add.html.java',55,NULL,NULL),(241,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountAddController\', AccountEditController);\r\n\r\n  /** @ngInject */\r\n  function AccountAddController(toastr, AccountService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.account = {};\r\n	\r\n    vm.create = createAccount;\r\n\r\n    function createAccount(){\r\n      accountService.create(vm.account).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','account.add.controller.js.java',55,NULL,NULL),(242,' <md-list class=\"accounts\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"account in accountsList.accounts\" >\r\n    <a ui-sref=\"app.accounts.edit({id:account.id})\">\r\n\r\n                <div class=\"account-name col-md-6 col-sm-6 col-xs-6\">{{account.email}}\r\n                </div>\r\n                <div class=\"account-group col-md-6 col-sm-6 col-xs-6\">{{account.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.accounts.add\">Create account</a>','account.html.java',55,NULL,NULL),(239,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/accounts.edit/accounts.edit.html\',\r\n        controller: \'AccountEditController\',\r\n        controllerAs: \'accountEditInfo\',\r\n        resolve: {\r\n          account: function(AccountService, $stateParams){ \r\n            return AccountService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','account.edit.route.js.java',55,NULL,NULL),(237,'<div class=\"edit-account\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{account.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  \r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-account-btn\" ng-click=\"delete()\">Delete account</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','account.edit.html.java',55,NULL,NULL),(238,'.edit-account {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','account.edit.scss.java',55,NULL,NULL),(236,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountEditController\', AccountEditController);\r\n\r\n  /** @ngInject */\r\n  function AccountEditController(toastr, account, AccountService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.account = account;\r\n    \r\n    vm.delete = deleteAccount;\r\n\r\n    function deleteAccount(){\r\n      accountService.delete(vm.account.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','account.edit.controller.js.java',55,NULL,NULL),(235,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.groups\', {\r\n        url: \'/groups\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.groups.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/groups/groups.html\',\r\n        controller: \'GroupsController\',\r\n        controllerAs: \'groupsList\',\r\n		\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','group.route.js.java',52,NULL,NULL),(234,'.groups{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','group.scss.java',52,NULL,NULL),(229,'<div class=\"add-group\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n	\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-group-btn\" ng-click=\"groupAddInfo.create()\">Save group</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','group.add.html.java',52,NULL,NULL),(230,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GroupAddController\', GroupEditController);\r\n\r\n  /** @ngInject */\r\n  function GroupAddController(toastr, GroupService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.group = {};\r\n	\r\n    vm.create = createGroup;\r\n\r\n    function createGroup(){\r\n      groupService.create(vm.group).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','group.add.controller.js.java',52,NULL,NULL),(231,' <md-list class=\"groups\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"group in groupsList.groups\" >\r\n    <a ui-sref=\"app.groups.edit({id:group.id})\">\r\n\r\n                <div class=\"group-name col-md-6 col-sm-6 col-xs-6\">{{group.email}}\r\n                </div>\r\n                <div class=\"group-group col-md-6 col-sm-6 col-xs-6\">{{group.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.groups.add\">Create group</a>','group.html.java',52,NULL,NULL),(227,'.edit-group {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','group.edit.scss.java',52,NULL,NULL),(228,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.groups.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/groups.edit/groups.edit.html\',\r\n        controller: \'GroupEditController\',\r\n        controllerAs: \'groupEditInfo\',\r\n        resolve: {\r\n          group: function(GroupService, $stateParams){ \r\n            return GroupService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','group.edit.route.js.java',52,NULL,NULL),(226,'<div class=\"edit-group\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{group.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  \r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-group-btn\" ng-click=\"delete()\">Delete group</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','group.edit.html.java',52,NULL,NULL),(224,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'UserService\', UserService);\r\n\r\n    UserService.$inject = [\'Restangular\', \'$q\'];\r\n    function UserService(Restangular, $q) {\r\n        var userService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var userRepository = Restangular.one(\'user\');\r\n\r\n        function get() {             \r\n            return userRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return userRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return userRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return userRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(userId){\r\n          \r\n\r\n            return userRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return userService;\r\n    }\r\n})();\r\n','user.service.js.java',51,NULL,NULL),(225,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GroupEditController\', GroupEditController);\r\n\r\n  /** @ngInject */\r\n  function GroupEditController(toastr, group, GroupService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.group = group;\r\n    \r\n    vm.delete = deleteGroup;\r\n\r\n    function deleteGroup(){\r\n      groupService.delete(vm.group.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','group.edit.controller.js.java',52,NULL,NULL),(149,'<div class=\"edit-secualEvent\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{secualEvent.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventEditInfo.secualEvent.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventEditInfo.secualEvent.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventEditInfo.secualEvent.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventEditInfo.secualEvent.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"secualEventEditInfo.secualEvent.group.name\">\r\n          <md-option ng-repeat=\"group in secualEventEditInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-secualEvent-btn\" ng-click=\"delete()\">Delete secualEvent</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','secualEvents.edit.html.java',45,NULL,NULL),(150,'.edit-secualEvent {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','secualEvents.edit.scss.java',45,NULL,NULL),(151,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualEventEditController\', SecualEventEditController);\r\n\r\n  /** @ngInject */\r\n  function SecualEventEditController(toastr, secualEvent, SecualEventService, $scope) {\r\n    var vm = this;\r\n     $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.secualEvent = secualEvent;\r\n    vm.groups = [];\r\n    vm.delete = deleteSecualEvent;\r\n\r\n    function deleteSecualEvent(){\r\n      secualEventService.delete(vm.secualEvent.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','secualEvents.edit.controller.js.java',45,NULL,NULL),(152,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualEvents.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/secualEvents.edit/secualEvents.edit.html\',\r\n        controller: \'SecualEventEditController\',\r\n        controllerAs: \'secualEventEditInfo\',\r\n        resolve: {\r\n          secualEvent: function(SecualEventService, $stateParams){ \r\n            return SecualEventService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualEvents.edit.route.js.java',45,NULL,NULL),(153,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualEvents.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/secualEvents.add/secualEvents.add.html\',\r\n        controller: \'SecualEventAddController\',\r\n        controllerAs: \'secualEventAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualEvents.add.route.js.java',45,NULL,NULL),(154,'.add-secualEvent {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','secualEvents.add.scss.java',45,NULL,NULL),(155,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualEventAddController\', SecualEventEditController);\r\n\r\n  /** @ngInject */\r\n  function SecualEventAddController(toastr, SecualEventService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.secualEvent = {};\r\n    vm.groups = [];\r\n    vm.create = createSecualEvent;\r\n\r\n    function createSecualEvent(){\r\n      secualEventService.create(vm.secualEvent).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','secualEvents.add.controller.js.java',45,NULL,NULL),(156,'<div class=\"add-secualEvent\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventEditInfo.secualEvent.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventAddInfo.secualEvent.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventAddInfo.secualEvent.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"secualEventAddInfo.secualEvent.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"secualEventAddInfo.secualEvent.group.name\">\r\n          <md-option ng-repeat=\"group in secualEventAddInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-secualEvent-btn\" ng-click=\"secualEventAddInfo.create()\">Save secualEvent</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','secualEvents.add.html.java',45,NULL,NULL),(157,' <md-list class=\"secualEvents\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"secualEvent in secualEventsList.secualEvents\" >\r\n    <a ui-sref=\"app.secualEvents.edit({id:secualEvent.id})\">\r\n\r\n                <div class=\"secualEvent-name col-md-6 col-sm-6 col-xs-6\">{{secualEvent.email}}\r\n                </div>\r\n                <div class=\"secualEvent-group col-md-6 col-sm-6 col-xs-6\">{{secualEvent.groupName}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.secualEvents.add\">Create secualEvent</a>','secualEvents.html.java',45,NULL,NULL),(158,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualEvents\', {\r\n        url: \'/secualEvents\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.secualEvents.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/secualEvents/secualEvents.html\',\r\n        controller: \'SecualEventsController\',\r\n        controllerAs: \'secualEventsList\',\r\n        resolve: {\r\n          groups: function(GroupService){ \r\n            return GroupService.get();\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualEvents.route.js.java',45,NULL,NULL),(159,'.secualEvents{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','secualEvents.scss.java',45,NULL,NULL),(160,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualEventsController\', SecualEventsController);\r\n\r\n  	/** @ngInject */\n	function SecualEventsController(toastr, ) {\n	}\r\n})();','secualEvents.controller.js.java',58,NULL,NULL),(280,'.add-secualEvent {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','secualEvent.add.scss.java',58,NULL,NULL),(281,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualEvents.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/secualEvents.add/secualEvents.add.html\',\r\n        controller: \'SecualEventAddController\',\r\n        controllerAs: \'secualEventAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualEvent.add.route.js.java',58,NULL,NULL),(161,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'GatewayService\', GatewayService);\r\n\r\n    GatewayService.$inject = [\'Restangular\', \'$q\'];\r\n    function GatewayService(Restangular, $q) {\r\n        var gatewayService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var gatewayRepository = Restangular.one(\'gateway\');\r\n\r\n        function get() {             \r\n            return gatewayRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(accountId, updObject) {\r\n\r\n           return gatewayRepository.one(\'accounts\', accountId).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(accountId) {\r\n           \r\n           return gatewayRepository.one(\'accounts\', accountId).get();\r\n        }\r\n\r\n        function create(data){\r\n            return gatewayRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(gatewayId){\r\n          \r\n\r\n            return gatewayRepository.one(\'accounts\', accountId).remove();\r\n\r\n       \r\n        }\r\n\r\n        return gatewayService;\r\n    }\r\n})();\r\n','gateway.service.js.java',46,NULL,NULL),(162,'<div class=\"edit-gateway\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{gateway.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayEditInfo.gateway.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayEditInfo.gateway.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayEditInfo.gateway.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayEditInfo.gateway.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"gatewayEditInfo.gateway.group.name\">\r\n          <md-option ng-repeat=\"group in gatewayEditInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-gateway-btn\" ng-click=\"delete()\">Delete gateway</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','gateways.edit.html.java',46,NULL,NULL),(163,'.edit-gateway {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','gateways.edit.scss.java',46,NULL,NULL),(164,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GatewayEditController\', GatewayEditController);\r\n\r\n  /** @ngInject */\r\n  function GatewayEditController(toastr, gateway, GatewayService, $scope) {\r\n    var vm = this;\r\n     $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.gateway = gateway;\r\n    vm.groups = [];\r\n    vm.delete = deleteGateway;\r\n\r\n    function deleteGateway(){\r\n      gatewayService.delete(vm.gateway.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','gateways.edit.controller.js.java',46,NULL,NULL),(165,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.gateways.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/gateways.edit/gateways.edit.html\',\r\n        controller: \'GatewayEditController\',\r\n        controllerAs: \'gatewayEditInfo\',\r\n        resolve: {\r\n          gateway: function(GatewayService, $stateParams){ \r\n            return GatewayService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','gateways.edit.route.js.java',46,NULL,NULL),(166,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.gateways.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/gateways.add/gateways.add.html\',\r\n        controller: \'GatewayAddController\',\r\n        controllerAs: \'gatewayAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','gateways.add.route.js.java',46,NULL,NULL),(167,'.add-gateway {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','gateways.add.scss.java',46,NULL,NULL),(168,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GatewayAddController\', GatewayEditController);\r\n\r\n  /** @ngInject */\r\n  function GatewayAddController(toastr, GatewayService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.gateway = {};\r\n    vm.groups = [];\r\n    vm.create = createGateway;\r\n\r\n    function createGateway(){\r\n      gatewayService.create(vm.gateway).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','gateways.add.controller.js.java',46,NULL,NULL),(169,'<div class=\"add-gateway\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayEditInfo.gateway.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayAddInfo.gateway.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayAddInfo.gateway.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"gatewayAddInfo.gateway.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"gatewayAddInfo.gateway.group.name\">\r\n          <md-option ng-repeat=\"group in gatewayAddInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-gateway-btn\" ng-click=\"gatewayAddInfo.create()\">Save gateway</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','gateways.add.html.java',46,NULL,NULL),(170,' <md-list class=\"gateways\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"gateway in gatewaysList.gateways\" >\r\n    <a ui-sref=\"app.gateways.edit({id:gateway.id})\">\r\n\r\n                <div class=\"gateway-name col-md-6 col-sm-6 col-xs-6\">{{gateway.email}}\r\n                </div>\r\n                <div class=\"gateway-group col-md-6 col-sm-6 col-xs-6\">{{gateway.groupName}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.gateways.add\">Create gateway</a>','gateways.html.java',46,NULL,NULL),(171,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.gateways\', {\r\n        url: \'/gateways\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.gateways.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/gateways/gateways.html\',\r\n        controller: \'GatewaysController\',\r\n        controllerAs: \'gatewaysList\',\r\n        resolve: {\r\n          groups: function(GroupService){ \r\n            return GroupService.get();\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','gateways.route.js.java',46,NULL,NULL),(172,'.gateways{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','gateways.scss.java',46,NULL,NULL),(173,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GatewayController\', GatewayController);\r\n\r\n  /** @ngInject */\r\n  function GatewayController(toastr, groups) {\r\n    var vm = this;\r\n    vm.groups = groups.plain().groups;\r\n\r\n    vm.gateways = extractAccounts(vm.groups);\r\n   \r\n    function extractAccounts(groups){\r\n      var result = [];\r\n\r\n      for (var i = 0; i < groups.length; i++) {\r\n        var gr = groups[i];\r\n        var _us = assignGroupName(gr.gateways, gr.name);\r\n        result = result.concat(_us);\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    function assignGroupName(gateways, groupName){\r\n      var result = [];\r\n\r\n      for (var i = 0; i < gateways.length; i++) {\r\n        var gateway = gateways[i];\r\n        gateway.groupName = groupName;\r\n        result.push(gateway);\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n})();\r\n','gateways.controller.js.java',46,NULL,NULL),(174,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'GroupService\', GroupService);\r\n\r\n    GroupService.$inject = [\'Restangular\', \'$q\'];\r\n    function GroupService(Restangular, $q) {\r\n        var groupService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var groupRepository = Restangular.one(\'group\');\r\n\r\n        function get() {             \r\n            return groupRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return groupRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return groupRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return groupRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(groupId){\r\n          \r\n\r\n            return groupRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return groupService;\r\n    }\r\n})();\r\n','group.service.js.java',52,NULL,NULL),(175,'<div class=\"edit-group\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{group.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupEditInfo.group.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupEditInfo.group.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupEditInfo.group.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupEditInfo.group.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"groupEditInfo.group.group.name\">\r\n          <md-option ng-repeat=\"group in groupEditInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-group-btn\" ng-click=\"delete()\">Delete group</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','groups.edit.html.java',47,NULL,NULL),(176,'.edit-group {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','groups.edit.scss.java',47,NULL,NULL),(177,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GroupEditController\', GroupEditController);\r\n\r\n  /** @ngInject */\r\n  function GroupEditController(toastr, group, GroupService, $scope) {\r\n    var vm = this;\r\n     $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.group = group;\r\n    vm.groups = [];\r\n    vm.delete = deleteGroup;\r\n\r\n    function deleteGroup(){\r\n      groupService.delete(vm.group.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','groups.edit.controller.js.java',47,NULL,NULL),(178,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.groups.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/groups.edit/groups.edit.html\',\r\n        controller: \'GroupEditController\',\r\n        controllerAs: \'groupEditInfo\',\r\n        resolve: {\r\n          group: function(GroupService, $stateParams){ \r\n            return GroupService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','groups.edit.route.js.java',47,NULL,NULL),(179,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.groups.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/groups.add/groups.add.html\',\r\n        controller: \'GroupAddController\',\r\n        controllerAs: \'groupAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','groups.add.route.js.java',47,NULL,NULL),(180,'.add-group {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','groups.add.scss.java',47,NULL,NULL),(181,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GroupAddController\', GroupEditController);\r\n\r\n  /** @ngInject */\r\n  function GroupAddController(toastr, GroupService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.group = {};\r\n    vm.groups = [];\r\n    vm.create = createGroup;\r\n\r\n    function createGroup(){\r\n      groupService.create(vm.group).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','groups.add.controller.js.java',47,NULL,NULL),(182,'<div class=\"add-group\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n      <md-list-item class=\"md-1-line\">\r\n       \r\n        <div class=\"md-list-item-text\">\r\n         Name\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupEditInfo.group.name\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupAddInfo.group.password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         Confirm Password\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupAddInfo.group.confirm_password\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         email\r\n        </div>\r\n        <input type=\"text\" ng-model=\"groupAddInfo.group.email\" />\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n       <md-list-item class=\"md-1-line\">\r\n        <div class=\"md-list-item-text\">\r\n         groups\r\n        </div>\r\n         <md-select ng-model=\"groupAddInfo.group.group.name\">\r\n          <md-option ng-repeat=\"group in groupAddInfo.groups\" value=\"{{group.name}}\">\r\n            {{group.name}}\r\n          </md-option>\r\n        </md-select>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-group-btn\" ng-click=\"groupAddInfo.create()\">Save group</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','groups.add.html.java',47,NULL,NULL),(183,' <md-list class=\"groups\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"group in groupsList.groups\" >\r\n    <a ui-sref=\"app.groups.edit({id:group.id})\">\r\n\r\n                <div class=\"group-name col-md-6 col-sm-6 col-xs-6\">{{group.email}}\r\n                </div>\r\n                <div class=\"group-group col-md-6 col-sm-6 col-xs-6\">{{group.groupName}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.groups.add\">Create group</a>','groups.html.java',47,NULL,NULL),(184,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.groups\', {\r\n        url: \'/groups\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.groups.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/groups/groups.html\',\r\n        controller: \'GroupsController\',\r\n        controllerAs: \'groupsList\',\r\n        resolve: {\r\n          groups: function(GroupService){ \r\n            return GroupService.get();\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','groups.route.js.java',47,NULL,NULL),(185,'.groups{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','groups.scss.java',47,NULL,NULL),(186,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'GroupsController\', GroupsController);\r\n\r\n  	/** @ngInject */\n	function GroupsController(toastr, ) {\n	}\r\n})();','groups.controller.js.java',52,NULL,NULL),(232,'.add-group {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','group.add.scss.java',52,NULL,NULL),(233,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.groups.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/groups.add/groups.add.html\',\r\n        controller: \'GroupAddController\',\r\n        controllerAs: \'groupAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','group.add.route.js.java',52,NULL,NULL),(220,'.add-user {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','user.add.scss.java',51,NULL,NULL),(221,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.users.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/users.add/users.add.html\',\r\n        controller: \'UserAddController\',\r\n        controllerAs: \'userAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','user.add.route.js.java',51,NULL,NULL),(222,'.users{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','user.scss.java',51,NULL,NULL),(223,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.users\', {\r\n        url: \'/users\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.users.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/users/users.html\',\r\n        controller: \'UsersController\',\r\n        controllerAs: \'usersList\',\r\n		resolve: {\n		groups: function(GroupService {\n			return GroupService.get();\n		}\n	}\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','user.route.js.java',51,NULL,NULL),(218,' <md-list class=\"users\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"user in usersList.users\" >\r\n    <a ui-sref=\"app.users.edit({id:user.id})\">\r\n\r\n                <div class=\"user-name col-md-6 col-sm-6 col-xs-6\">{{user.email}}\r\n                </div>\r\n                <div class=\"user-group col-md-6 col-sm-6 col-xs-6\">{{user.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.users.add\">Create user</a>','user.html.java',51,NULL,NULL),(219,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'UsersController\', UsersController);\r\n\r\n  \r\n})();','users.controller.js.java',51,NULL,NULL),(217,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'UserAddController\', UserEditController);\r\n\r\n  /** @ngInject */\r\n  function UserAddController(toastr, UserService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.user = {};\r\n		vm.groupss = [];\n\r\n    vm.create = createUser;\r\n\r\n    function createUser(){\r\n      userService.create(vm.user).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','user.add.controller.js.java',51,NULL,NULL),(215,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.users.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/users.edit/users.edit.html\',\r\n        controller: \'UserEditController\',\r\n        controllerAs: \'userEditInfo\',\r\n        resolve: {\r\n          user: function(UserService, $stateParams){ \r\n            return UserService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','user.edit.route.js.java',51,NULL,NULL),(216,'<div class=\"add-user\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n		<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Name\n	</div>\n	<input type=\"text\" ng-model=\"userAddInfo.user.name\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Password\n	</div>\n	<input type=\"text\" ng-model=\"userAddInfo.user.password\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Confirm_password\n	</div>\n	<input type=\"text\" ng-model=\"userAddInfo.user.confirm_password\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Email\n	</div>\n	<input type=\"text\" ng-model=\"userAddInfo.user.email\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Groups\n	</div>\n	<md-select ng-model=\"groupsAddInfo.user.group.name\">\n	<md-option ng-repeat=\"group in userAddInfo.groups\" value=\"{{groups.name}}\">\n		{{groups.name}}\n	</md-option>\n	</md-select>\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-user-btn\" ng-click=\"userAddInfo.create()\">Save user</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','user.add.html.java',51,NULL,NULL),(214,'.edit-user {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','user.edit.scss.java',51,NULL,NULL),(212,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'UserEditController\', UserEditController);\r\n\r\n  /** @ngInject */\r\n  function UserEditController(toastr, user, UserService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.user = user;\r\n    	vm.groupss = [];\n\r\n    vm.delete = deleteUser;\r\n\r\n    function deleteUser(){\r\n      userService.delete(vm.user.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','user.edit.controller.js.java',51,NULL,NULL),(213,'<div class=\"edit-user\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{user.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Name\n	</div>\n	<input type=\"text\" ng-model=\"userEditInfo.user.name\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Password\n	</div>\n	<input type=\"text\" ng-model=\"userEditInfo.user.password\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Confirm_password\n	</div>\n	<input type=\"text\" ng-model=\"userEditInfo.user.confirm_password\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Email\n	</div>\n	<input type=\"text\" ng-model=\"userEditInfo.user.email\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Groups\n	</div>\n	<md-select ng-model=\"groupsEditInfo.user.group.name\">\n	<md-option ng-repeat=\"group in userEditInfo.groups\" value=\"{{groups.name}}\">\n		{{groups.name}}\n	</md-option>\n	</md-select>\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-user-btn\" ng-click=\"delete()\">Delete user</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','user.edit.html.java',51,NULL,NULL),(248,'<div class=\"edit-configurationChange\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{configurationChange.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  \r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-configurationChange-btn\" ng-click=\"delete()\">Delete configurationChange</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','configurationChange.edit.html.java',56,NULL,NULL),(249,'.edit-configurationChange {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','configurationChange.edit.scss.java',56,NULL,NULL),(250,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.configurationChanges.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/configurationChanges.edit/configurationChanges.edit.html\',\r\n        controller: \'ConfigurationChangeEditController\',\r\n        controllerAs: \'configurationChangeEditInfo\',\r\n        resolve: {\r\n          configurationChange: function(ConfigurationChangeService, $stateParams){ \r\n            return ConfigurationChangeService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','configurationChange.edit.route.js.java',56,NULL,NULL),(251,'<div class=\"add-configurationChange\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n	\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-configurationChange-btn\" ng-click=\"configurationChangeAddInfo.create()\">Save configurationChange</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','configurationChange.add.html.java',56,NULL,NULL),(252,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'ConfigurationChangeAddController\', ConfigurationChangeEditController);\r\n\r\n  /** @ngInject */\r\n  function ConfigurationChangeAddController(toastr, ConfigurationChangeService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.configurationChange = {};\r\n	\r\n    vm.create = createConfigurationChange;\r\n\r\n    function createConfigurationChange(){\r\n      configurationChangeService.create(vm.configurationChange).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','configurationChange.add.controller.js.java',56,NULL,NULL),(253,' <md-list class=\"configurationChanges\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"configurationChange in configurationChangesList.configurationChanges\" >\r\n    <a ui-sref=\"app.configurationChanges.edit({id:configurationChange.id})\">\r\n\r\n                <div class=\"configurationChange-name col-md-6 col-sm-6 col-xs-6\">{{configurationChange.email}}\r\n                </div>\r\n                <div class=\"configurationChange-group col-md-6 col-sm-6 col-xs-6\">{{configurationChange.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.configurationChanges.add\">Create configurationChange</a>','configurationChange.html.java',56,NULL,NULL),(254,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'ConfigurationChangesController\', ConfigurationChangesController);\r\n\r\n  	/** @ngInject */\n	function ConfigurationChangesController(toastr, ) {\n	}\r\n})();','configurationChanges.controller.js.java',56,NULL,NULL),(255,'.add-configurationChange {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','configurationChange.add.scss.java',56,NULL,NULL),(256,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.configurationChanges.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/configurationChanges.add/configurationChanges.add.html\',\r\n        controller: \'ConfigurationChangeAddController\',\r\n        controllerAs: \'configurationChangeAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','configurationChange.add.route.js.java',56,NULL,NULL),(257,'.configurationChanges{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','configurationChange.scss.java',56,NULL,NULL),(258,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.configurationChanges\', {\r\n        url: \'/configurationChanges\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.configurationChanges.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/configurationChanges/configurationChanges.html\',\r\n        controller: \'ConfigurationChangesController\',\r\n        controllerAs: \'configurationChangesList\',\r\n		\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','configurationChange.route.js.java',56,NULL,NULL),(259,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'ConfigurationChangeService\', ConfigurationChangeService);\r\n\r\n    ConfigurationChangeService.$inject = [\'Restangular\', \'$q\'];\r\n    function ConfigurationChangeService(Restangular, $q) {\r\n        var configurationChangeService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var configurationChangeRepository = Restangular.one(\'configurationChange\');\r\n\r\n        function get() {             \r\n            return configurationChangeRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return configurationChangeRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return configurationChangeRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return configurationChangeRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(configurationChangeId){\r\n          \r\n\r\n            return configurationChangeRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return configurationChangeService;\r\n    }\r\n})();\r\n','configurationChange.service.js.java',56,NULL,NULL),(260,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualAlertEditController\', SecualAlertEditController);\r\n\r\n  /** @ngInject */\r\n  function SecualAlertEditController(toastr, secualAlert, SecualAlertService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.secualAlert = secualAlert;\r\n    \r\n    vm.delete = deleteSecualAlert;\r\n\r\n    function deleteSecualAlert(){\r\n      secualAlertService.delete(vm.secualAlert.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','secualAlert.edit.controller.js.java',57,NULL,NULL),(261,'<div class=\"edit-secualAlert\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{secualAlert.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Unnotified\n	</div>\n	<input type=\"text\" ng-model=\"secualAlertEditInfo.secualAlert.unnotified\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Events\n	</div>\n	<input type=\"text\" ng-model=\"secualAlertEditInfo.secualAlert.events\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-secualAlert-btn\" ng-click=\"delete()\">Delete secualAlert</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','secualAlert.edit.html.java',57,NULL,NULL),(262,'.edit-secualAlert {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','secualAlert.edit.scss.java',57,NULL,NULL),(263,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualAlerts.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/secualAlerts.edit/secualAlerts.edit.html\',\r\n        controller: \'SecualAlertEditController\',\r\n        controllerAs: \'secualAlertEditInfo\',\r\n        resolve: {\r\n          secualAlert: function(SecualAlertService, $stateParams){ \r\n            return SecualAlertService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualAlert.edit.route.js.java',57,NULL,NULL),(264,'<div class=\"add-secualAlert\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n		<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Unnotified\n	</div>\n	<input type=\"text\" ng-model=\"secualAlertAddInfo.secualAlert.unnotified\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Events\n	</div>\n	<input type=\"text\" ng-model=\"secualAlertAddInfo.secualAlert.events\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-secualAlert-btn\" ng-click=\"secualAlertAddInfo.create()\">Save secualAlert</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','secualAlert.add.html.java',57,NULL,NULL),(265,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualAlertAddController\', SecualAlertEditController);\r\n\r\n  /** @ngInject */\r\n  function SecualAlertAddController(toastr, SecualAlertService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.secualAlert = {};\r\n	\r\n    vm.create = createSecualAlert;\r\n\r\n    function createSecualAlert(){\r\n      secualAlertService.create(vm.secualAlert).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','secualAlert.add.controller.js.java',57,NULL,NULL),(266,' <md-list class=\"secualAlerts\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"secualAlert in secualAlertsList.secualAlerts\" >\r\n    <a ui-sref=\"app.secualAlerts.edit({id:secualAlert.id})\">\r\n\r\n                <div class=\"secualAlert-name col-md-6 col-sm-6 col-xs-6\">{{secualAlert.email}}\r\n                </div>\r\n                <div class=\"secualAlert-group col-md-6 col-sm-6 col-xs-6\">{{secualAlert.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.secualAlerts.add\">Create secualAlert</a>','secualAlert.html.java',57,NULL,NULL),(267,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualAlertsController\', SecualAlertsController);\r\n\r\n  	/** @ngInject */\n	function SecualAlertsController(toastr, ) {\n	}\r\n})();','secualAlerts.controller.js.java',57,NULL,NULL),(268,'.add-secualAlert {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','secualAlert.add.scss.java',57,NULL,NULL),(269,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualAlerts.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/secualAlerts.add/secualAlerts.add.html\',\r\n        controller: \'SecualAlertAddController\',\r\n        controllerAs: \'secualAlertAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualAlert.add.route.js.java',57,NULL,NULL),(270,'.secualAlerts{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','secualAlert.scss.java',57,NULL,NULL),(271,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualAlerts\', {\r\n        url: \'/secualAlerts\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.secualAlerts.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/secualAlerts/secualAlerts.html\',\r\n        controller: \'SecualAlertsController\',\r\n        controllerAs: \'secualAlertsList\',\r\n		\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualAlert.route.js.java',57,NULL,NULL),(272,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'SecualAlertService\', SecualAlertService);\r\n\r\n    SecualAlertService.$inject = [\'Restangular\', \'$q\'];\r\n    function SecualAlertService(Restangular, $q) {\r\n        var secualAlertService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var secualAlertRepository = Restangular.one(\'secualAlert\');\r\n\r\n        function get() {             \r\n            return secualAlertRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return secualAlertRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return secualAlertRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return secualAlertRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(secualAlertId){\r\n          \r\n\r\n            return secualAlertRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return secualAlertService;\r\n    }\r\n})();\r\n','secualAlert.service.js.java',57,NULL,NULL),(273,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualEventEditController\', SecualEventEditController);\r\n\r\n  /** @ngInject */\r\n  function SecualEventEditController(toastr, secualEvent, SecualEventService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.secualEvent = secualEvent;\r\n    \r\n    vm.delete = deleteSecualEvent;\r\n\r\n    function deleteSecualEvent(){\r\n      secualEventService.delete(vm.secualEvent.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','secualEvent.edit.controller.js.java',58,NULL,NULL),(274,'<div class=\"edit-secualEvent\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{secualEvent.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  \r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-secualEvent-btn\" ng-click=\"delete()\">Delete secualEvent</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','secualEvent.edit.html.java',58,NULL,NULL),(275,'.edit-secualEvent {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','secualEvent.edit.scss.java',58,NULL,NULL),(276,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualEvents.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/secualEvents.edit/secualEvents.edit.html\',\r\n        controller: \'SecualEventEditController\',\r\n        controllerAs: \'secualEventEditInfo\',\r\n        resolve: {\r\n          secualEvent: function(SecualEventService, $stateParams){ \r\n            return SecualEventService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualEvent.edit.route.js.java',58,NULL,NULL),(277,'<div class=\"add-secualEvent\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n	\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-secualEvent-btn\" ng-click=\"secualEventAddInfo.create()\">Save secualEvent</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','secualEvent.add.html.java',58,NULL,NULL),(278,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'SecualEventAddController\', SecualEventEditController);\r\n\r\n  /** @ngInject */\r\n  function SecualEventAddController(toastr, SecualEventService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.secualEvent = {};\r\n	\r\n    vm.create = createSecualEvent;\r\n\r\n    function createSecualEvent(){\r\n      secualEventService.create(vm.secualEvent).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','secualEvent.add.controller.js.java',58,NULL,NULL),(279,' <md-list class=\"secualEvents\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"secualEvent in secualEventsList.secualEvents\" >\r\n    <a ui-sref=\"app.secualEvents.edit({id:secualEvent.id})\">\r\n\r\n                <div class=\"secualEvent-name col-md-6 col-sm-6 col-xs-6\">{{secualEvent.email}}\r\n                </div>\r\n                <div class=\"secualEvent-group col-md-6 col-sm-6 col-xs-6\">{{secualEvent.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.secualEvents.add\">Create secualEvent</a>','secualEvent.html.java',58,NULL,NULL),(282,'.secualEvents{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','secualEvent.scss.java',58,NULL,NULL),(283,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.secualEvents\', {\r\n        url: \'/secualEvents\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.secualEvents.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/secualEvents/secualEvents.html\',\r\n        controller: \'SecualEventsController\',\r\n        controllerAs: \'secualEventsList\',\r\n		\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','secualEvent.route.js.java',58,NULL,NULL),(284,'package net.secual.web;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ConfigurationChangeDetail extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		ConfigurationChange configurationChange = new ConfigurationChangeImpl();\r\n		Criteria criteria = session.createCriteria(ConfigurationChange.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			configurationChange = (ConfigurationChange) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			configurationChange = (ConfigurationChange) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"configurationChange\",configurationChange);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','ConfigurationChangeDetail.java',31,NULL,NULL),(285,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\npublic class ConfigurationChangeVP extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		ConfigurationChange configurationChange = new ConfigurationChangeImpl();\r\n		ConfigurationChangeForm configurationChangeform = (ConfigurationChangeForm) form;\r\n		\r\n                \r\n		\r\n		BeanUtils.copyProperties(configurationChange,configurationChangeform);\r\n		StringFullfiller.fullfil(configurationChange);\r\n		if(configurationChangeform.getId() == null || configurationChangeform.getId().intValue() == 0){\r\n			configurationChange.setId(null);\r\n		}else{\r\n			configurationChange.setId(configurationChangeform.getId());\r\n		}\r\n\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		\r\n                \r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(configurationChange);\r\n		transaction.commit();\r\n		session.flush();\r\n		\r\n		new HTTPGetRedirection(req, res, \"ConfigurationChangeDetail.do\", configurationChange.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','ConfigurationChangeVP.java',31,NULL,NULL),(286,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ConfigurationChanges extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(ConfigurationChange.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			ConfigurationChange configurationChange = (ConfigurationChange) iter.next();\r\n			vector.add(configurationChange);\r\n		}\r\n		ConfigurationChange configurationChange = new ConfigurationChangeImpl();\r\n		Criteria criteria2 = session.createCriteria(ConfigurationChange.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			configurationChange = (ConfigurationChange) criteria2.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			configurationChange = (ConfigurationChange) criteria2.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"configurationChange\",configurationChange);\r\n\r\n		\r\n		req.setAttribute(\"configurationChanges\",vector);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','ConfigurationChanges.java',31,NULL,NULL),(287,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class DeleteConfigurationChange extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		Criteria criteria = session.createCriteria(ConfigurationChange.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n\r\n\r\n		ConfigurationChange configurationChange = (ConfigurationChange) criteria.uniqueResult();\r\n		session.delete(configurationChange);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','DeleteConfigurationChange.java',31,NULL,NULL),(288,'package net.secual.web;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Date;\r\nimport java.util.Iterator;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.RssDublinCore;\r\nimport churchillobjects.rss4j.generator.RssGenerator;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class ConfigurationChangeRSSExport extends Action{\r\n\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n\r\n	        try{\r\n	        	RssDocument objRss=new RssDocument();\r\n	        	objRss.setVersion(\"1.0\");\r\n\r\n\r\n 		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n	    		Criteria criteria = session.createCriteria(ConfigurationChange.class);\r\n	    		criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n//	    		##secoundclass## ##secoundobj## = configurationChange.get##secoundclass##();\r\n	    			criteria = session.createCriteria(ConfigurationChange.class);\r\n//	    			criteria.addOrder(Order.desc(\"date\"));\r\n//	    			criteria.add(Restrictions.eq(\"##secoundobj##\", ##secoundobj##));\r\n	    			criteria.setMaxResults(30);\r\n	    			if(req.getParameter(\"q\") !=null && !req.getParameter(\"q\").equals(\"\")){\r\n	    				criteria.add(Restrictions.like(\"##aiueo##\",\"%\" + new String(req.getParameter(\"q\").getBytes(\"8859_1\"), \"UTF-8\")  + \"%\"));\r\n	    			}\r\n\r\n	    			ChannelBuilder builder = new ChannelBuilder();\r\n	    			ChannelIF newChannel = builder.createChannel(\"ConfigurationChanges\");\r\n	    			newChannel.setFormat(ChannelFormat.RSS_1_0);\r\n	    			newChannel.setLanguage(\"ja\");\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setDescription(\"ConfigurationChanges\");\r\n\r\n\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n		        	newChannel.setDescription(\"ConfigurationChanges\");\r\n	    			for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n	    				ConfigurationChange configurationChange = (ConfigurationChange)iter.next();\r\n					ItemIF item = new Item();\r\n					//item.setDate(new Date());\r\n\r\n	    				item.setTitle(configurationChange.getName());\r\n	    				item.setLink(new URL(\"http://\"+req.getServerName()+req.getRequestURI());\r\n	    				item.setDescription(configurationChange.getName());\r\n		    			newChannel.addItem(item);\r\n	    			}\r\n	    			StringWriter stringWriter = new StringWriter();\r\n	    			res.setContentType(\"text/xml;charset=utf-8\");\r\n	    			res.setCharacterEncoding(\"utf-8\");\r\n	    			RSS_1_0_Exporter writer = new RSS_1_0_Exporter(stringWriter,\"utf-8\");\r\n	    			writer.write(newChannel);\r\n	    			res.getWriter().write(stringWriter.toString());\r\n		    			\r\n	    			PrintWriter printWriter = new PrintWriter(new File(this.getServlet().getServletContext().getRealPath(\"ConfigurationChangeRssExport.xml\")),\"utf-8\");\r\n	    			printWriter.write(stringWriter.toString());\r\n\r\n	    			session.flush();\r\n\r\n	        }catch(IOException e){\r\n	            System.out.println(e.toString());\r\n	        }finally{\r\n	        }\r\n\r\n\r\n\r\n        \r\n		return mapping.findForward(\"success\");\r\n	}\r\n    public String url2link(String string){\r\n    	return string.replaceAll(\"(http://|https://){1}[\\\\w\\\\.\\\\-/:]+\",\"<a href=\'$0\'>$0</a>\");\r\n    }\r\n    public String nl2br(String string){\r\n    	string = string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	return string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	\r\n    }\r\n\r\n\r\n	\r\n}','ConfigurationChangeRSSExport.java',31,NULL,NULL),(289,'package net.secual.web;\r\n\r\nimport java.net.URL;\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class ConfigurationChangeInputRss extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		String urlstr = req.getParameter(\"url\");\r\n        try {\r\n           URL url = new URL(urlstr);\r\n		HttpClient client = new HttpClient();\r\n       		URL url = new URL(urlstr);\r\n		GetMethod method = new GetMethod(url.toString());\r\n		client.executeMethod(method);\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		RssDocument doc = RssParser.parseRss(method.getResponseBodyAsString());\r\n		Enumeration enum = doc.channels();\r\n		while(enum.hasMoreElements()){\r\n		  RssChannel channel = (RssChannel)enum.nextElement();\r\n		  System.out.println(\"Channel: \"+channel.getChannelTitle());\r\n		  Enumeration items = channel.items();\r\n		  while(items.hasMoreElements()){\r\n                  	RssChannelItem item = (RssChannelItem) items.nextElement();	     		                ConfigurationChange configurationChange = new ConfigurationChangeImpl();\r\n			configurationChange.setContent(item.getItemDescription());\r\n			configurationChange.setTitle(itemIf.getItemTitle());\r\n		//	##EDITSNIP## textStr = this.nl2br(textStr);\r\n			StringFullfiller.fullfil(configurationChange);\r\n			Transaction transaction = session.beginTransaction();\r\n			session.saveOrUpdate(configurationChange);\r\n			transaction.commit();\r\n		  }\r\n		session.flush();\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n		return mapping.findForward(\"success\");\r\n	}	\r\n}','ConfigurationChangeInputRss.java',31,NULL,NULL),(290,'','SetSelectionOfConfigurationChange##attr##.java',31,NULL,NULL),(291,'','SetConfigurationChange##Attr##.java',31,NULL,NULL),(292,'','SetConfigurationChangeNon##attr##.java',31,NULL,NULL),(293,'package net.secual.web;\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class CopyAConfigurationChangeFromAConfigurationChange extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n\r\n		Criteria criteria = session.createCriteria(ConfigurationChange.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n		ConfigurationChange configurationChange = (ConfigurationChange) criteria.uniqueResult();\r\n		ConfigurationChange configurationChange2 = new ConfigurationChangeImpl();\r\n		BeanUtils.copyProperties(configurationChange2,configurationChange);\r\n                configurationChange2.setId(null);\r\n		//configurationChange2.setSomething(null);\r\n		session.saveOrUpdate(configurationChange2);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n		req.setAttribute(\"id\", configurationChange2.getId());\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','CopyAConfigurationChangeFromAConfigurationChange.java',31,NULL,NULL),(294,'package net.secual.web;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport java.awt.font.NumericShaper;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.util.Iterator;\r\nimport java.util.Locale;\r\nimport java.util.Vector;\r\n\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.criterion.Order;\r\n\r\nimport jxl.Workbook;\r\nimport jxl.WorkbookSettings;\r\nimport jxl.write.Label;\r\nimport jxl.write.Number;\r\nimport jxl.write.WritableSheet;\r\nimport jxl.write.WritableWorkbook;\r\nimport net.pmcsm.model.Componey;\r\nimport net.pmcsm.model.Manual;\r\nimport net.pmcsm.model.Outsourcing;\r\n\r\n\r\npublic class XlsExportOfConfigurationChange{\r\n	public XlsExportOfConfigurationChange(Vector vector,OutputStream outputStream,Session session){\r\n\r\n        try{\r\n        	WorkbookSettings ws = new WorkbookSettings();\r\n\r\n        	ws.setLocale(new Locale(\"ja\", \"JP\"));\r\n        	ws.setEncoding(\"Windows-31J\");\r\n        	WritableWorkbook workbook = Workbook.createWorkbook(outputStream, ws);\r\n        	WritableSheet sheet = workbook.createSheet(\"sheet\", 0);\r\n        	ws.setGCDisabled(true);\r\n        	\r\n                int x = 0;\r\n                sheet.addCell(new Label(x++, 0, \"1\"));\r\n        	sheet.addCell(new Label(x++, 0, \"2\"));\r\n        	sheet.addCell(new Label(x++, 0, \"3\"));\r\n        	sheet.addCell(new Label(x++, 0, \"4\"));\r\n        	sheet.addCell(new Label(x++, 0, \"5\"));\r\n        	sheet.addCell(new Label(x++, 0, \"6\"));\r\n        	sheet.addCell(new Label(x++, 0, \"7\"));\r\n        	sheet.addCell(new Label(x++, 0, \"8\"));\r\n        	sheet.addCell(new Label(x++, 0, \"9\"));\r\n        	sheet.addCell(new Label(x++, 0, \"10\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n        	x = 0;\r\n        	int y= 1;\r\n    		for (Iterator iter = vector.iterator(); iter.hasNext();) {\r\n    			ConfigurationChange configurationChange = (ConfigurationChange) iter.next();\r\n    			sheet.addCell(new Label(x++, y, configurationChange.get().getTypename()));\r\n    			sheet.addCell(new Label(x++, y, configurationChange.get().getModelcode()));\r\n    			sheet.addCell(new Label(x++, y, configurationChange.get().getShimuke()));\r\n    			sheet.addCell(new Label(x++, y, configurationChange.get().getName()));\r\n    			sheet.addCell(new Number(x++, y, configurationChange.get()));\r\n    			sheet.addCell(new Number(x++, y, configurationChange.get()));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			i++;\r\n    		}\r\n        	\r\n        	workbook.write();\r\n        	workbook.close();\r\n		\r\n        }catch(Exception e){\r\n            System.out.println(e.toString());\r\n        }finally{\r\n        }\r\n	}\r\n	\r\n\r\n\r\n}','XlsExportOfConfigurationChange.java',31,NULL,NULL),(295,'','GrepConfigurationChangeOn##attr##.java',31,NULL,NULL),(296,'package net.secual.web.app;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.beans.*;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\n\r\npublic class PostAccountVPForPassword extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Account account = new AccountImpl();\r\n		AccountForm accountform = (AccountForm) form;\r\n\r\n                String error = \"\";\r\nif(StringUtils.isNotBlank(error)){\r\n	req.getSession().setAttribute(\"error\",error);\r\n	req.setAttribute(\"form\",accountform);\r\n	return mapping.findForward(\"error\");\r\n}\r\n\r\n\r\n                \r\n		\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		if(accountform.getId() == null || accountform.getId().intValue() == 0){\r\n			account.setId(null);\r\n			accountform.setId(null);\r\n		}else{\r\n			account.setId(accountform.getId());\r\n			Criteria criteria = session.createCriteria(Account.class);\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n			account = (Account) criteria.uniqueResult();\r\n\r\n		}\r\n                		account.setAccountID(accountform.getAccountID());\r\n\r\n\r\n		\r\n		StringFullfiller.fullfil(account);\r\n                \r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(account);\r\n		transaction.commit();\r\n		session.flush();\r\nif(req.getParameter(\"from\")!=null && req.getParameter(\"from\").equals(\"detail\")){\r\n		new HTTPGetRedirection(req, res, \"PostAccountDetail.do\", account.getId().toString());\r\n\r\n}\r\n		\r\n		new HTTPGetRedirection(req, res, \"Accounts.do\", account.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','PostAccountVPForPassword.java',79,NULL,NULL),(298,'class V1::GatewaysController < V1::BaseController\r\n  before_action :authenticate_agent!, only: [:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :find_gateway!, only:[:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :authenticate_user!, only: [:index]\r\n\r\n  def index\r\n    if current_user.role.name == \"operator\"\r\n      gateways = Gateway.all\r\n    elsif (current_user.role.name == \"owner\") || (current_user.role.name == \"user\")\r\n      gateways = current_user.account.gateways\r\n    else\r\n      render json: {error: \'authentication failed\'} , status: 401 and return\r\n    end\r\n    render json: {gateways: gateways}\r\n  end\r\n\r\n  def create\r\n    gateway = Gateway.new(gateway_params)\r\n    if gateway.save\r\n      render json: gateway , status: :created\r\n    else\r\n      render json: {error: gateway.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def show\r\n    if (user_signed_in?)\r\n      if ([\'owner\', \'user\'].include? current_user.role.name)\r\n        if current_user.account.gateways.exclude?(@gateway)\r\n          render json: {error: \'User can access his own gateway\'}, status: 403 and return\r\n        end\r\n      end\r\n\r\n      render json: {gateway: @gateway}\r\n    else\r\n      short_resp = @gateway.as_json(gateway_only_fields)\r\n      render json: {gateway: short_resp}\r\n    end\r\n  end\r\n\r\n  def update\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.gateways.exclude?(@gateway)\r\n        render json: {error: \'User can access his own gateway\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @gateway.update(gateway_params)\r\n      render json: {gateway: @gateway}\r\n    else\r\n      render json: {error: @gateway.errors.messages} , status: :forbidden\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.gateways.exclude?(@gateway)\r\n        render json: {error: \'User can access his own gateway\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @gateway.destroy\r\n      render json: {gateway: @gateway}, status: :ok\r\n    else\r\n      render json: {error: @gateway.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def modified_fields\r\n    resp = {}\r\n\r\n    trail = @gateway.gateway_trail\r\n    resp = trail.diff_gateway\r\n\r\n    render json: {gateway: resp}\r\n  end\r\n\r\n  def confirm_modify\r\n    trail = @gateway.gateway_trail\r\n    render json: {error: \'No Command\'}, status: 404 and return if trail.nil?\r\n\r\n    # marked gateway\'s fields\r\n    trail.mark_completed params[:gateway]\r\n\r\n    render json: {confirmed: \'OK\'}\r\n  end\r\n\r\n  private\r\n\r\n    def gateway_params\r\n      params.require(:gateway).permit(:awakeFreq,:buzzer,:gatewayID,:secret,:sleepFreq,:id,:accountId,:light,:ssid,:security,:pskkey,:ipaddress,:netmask,:gw,:dns,:dhcp,:mac,:ble,:otamcu,:otawifi,:otaaf,:wifiTO,:bleTO,:buzTO,:buzAct,:voiceAct,:name)          \r\n    end\r\n\r\n    def gateway_only_fields\r\n      {only: [:awakeFreq,:buzzer,:gatewayID,:secret,:sleepFreq,:id,:accountId,:light,:ssid,:security,:pskkey,:ipaddress,:netmask,:gw,:dns,:dhcp,:mac,:ble,:otamcu,:otawifi,:otaaf,:wifiTO,:bleTO,:buzTO,:buzAct,:voiceAct,:name]}\r\n    end\r\nend','gateway.controller.rbgateway-railcontroller.java',82,NULL,NULL),(297,'package net.secual.web.app;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class PostAccountDetailForPassword extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Account account = new AccountImpl();\r\n		AccountForm accountform = new AccountForm();\r\n		Criteria criteria = session.createCriteria(Account.class);\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			account = (Account) criteria.uniqueResult();\r\n			new CopyProperties(account,accountform);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        accountform = (AccountForm)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(accountform.getId()));\r\n			account = (Account) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",account);\r\n		req.setAttribute(\"form\",accountform);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','PostAccountDetailForPassword.java',79,NULL,NULL),(299,'class V1::AccountsController < V1::BaseController\r\n  before_action :authenticate_agent!, only: [:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :find_account!, only:[:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :authenticate_user!, only: [:index]\r\n\r\n  def index\r\n    if current_user.role.name == \"operator\"\r\n      accounts = Account.all\r\n    elsif (current_user.role.name == \"owner\") || (current_user.role.name == \"user\")\r\n      accounts = current_user.account.accounts\r\n    else\r\n      render json: {error: \'authentication failed\'} , status: 401 and return\r\n    end\r\n    render json: {accounts: accounts}\r\n  end\r\n\r\n  def create\r\n    account = Account.new(account_params)\r\n    if account.save\r\n      render json: account , status: :created\r\n    else\r\n      render json: {error: account.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def show\r\n    if (user_signed_in?)\r\n      if ([\'owner\', \'user\'].include? current_user.role.name)\r\n        if current_user.account.accounts.exclude?(@account)\r\n          render json: {error: \'User can access his own account\'}, status: 403 and return\r\n        end\r\n      end\r\n\r\n      render json: {account: @account}\r\n    else\r\n      short_resp = @account.as_json(account_only_fields)\r\n      render json: {account: short_resp}\r\n    end\r\n  end\r\n\r\n  def update\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.accounts.exclude?(@account)\r\n        render json: {error: \'User can access his own account\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @account.update(account_params)\r\n      render json: {account: @account}\r\n    else\r\n      render json: {error: @account.errors.messages} , status: :forbidden\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.accounts.exclude?(@account)\r\n        render json: {error: \'User can access his own account\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @account.destroy\r\n      render json: {account: @account}, status: :ok\r\n    else\r\n      render json: {error: @account.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def modified_fields\r\n    resp = {}\r\n\r\n    trail = @account.account_trail\r\n    resp = trail.diff_account\r\n\r\n    render json: {account: resp}\r\n  end\r\n\r\n  def confirm_modify\r\n    trail = @account.account_trail\r\n    render json: {error: \'No Command\'}, status: 404 and return if trail.nil?\r\n\r\n    # marked account\'s fields\r\n    trail.mark_completed params[:account]\r\n\r\n    render json: {confirmed: \'OK\'}\r\n  end\r\n\r\n  private\r\n\r\n    def account_params\r\n      params.require(:account).permit(:id,:accountID,:lock,:currentPatternId,:gmoMemberId,:address,:createdAt,:updatedAt,:status)          \r\n    end\r\n\r\n    def account_only_fields\r\n      {only: [:id,:accountID,:lock,:currentPatternId,:gmoMemberId,:address,:createdAt,:updatedAt,:status]}\r\n    end\r\nend','account.controller.rbaccountrailcontroller.java',83,NULL,NULL),(300,'package net.secual.web.app;\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\n\r\nimport java.util.Calendar;\r\n\r\nimport javax.servlet.http.Cookie;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.pmcsm.model.IntraUser;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport filters.pmcsm.HibernateSession;\r\n\r\npublic class LoginAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n\r\n		\r\n		IntraUserForm intraUserForm = (IntraUserForm)form;\r\n\r\n\r\n		Criteria criteria = session.createCriteria(IntraUser.class);\r\n		criteria.add(Restrictions.eq(\"account\",intraUserForm.getAccount()));\r\n		criteria.add(Restrictions.eq(\"password\",intraUserForm.getPassword()));\r\n\r\n		IntraUser intraUser = null;\r\n		if(criteria.uniqueResult() !=null){\r\n			intraUser = (IntraUser)criteria.uniqueResult();\r\n			\r\n			/*\r\n			if(intraUser.isRemoved()){\r\n				req.setAttribute(\"message\",\"そのユーザはメールアドレスの認証が済んでいません。\");\r\n				return mapping.findForward(\"error\");\r\n			}\r\n			*/\r\n			\r\n			Calendar calendarnum = Calendar.getInstance();\r\n			Cookie cookie = new Cookie(\"pmcsmu\",intraUser.getMail());\r\n			cookie.setValue(intraUser.getMail());\r\n			cookie.setComment(\"hogehoge\");\r\n			cookie.setMaxAge(60 * 60 * 168);\r\n\r\n			res.addCookie(cookie); \r\n			res.flushBuffer();\r\n			\r\n		}else{\r\n\r\n			if(intraUserForm.getAccount()!=null){\r\n				req.setAttribute(\"message\",\"ユーザが存在しないか、パスワードが間違っています。\");\r\n			}\r\n			return mapping.findForward(\"error\");\r\n		}\r\n		session.flush();\r\n		new HTTPGetRedirection(req,res,\"index.jsp\",\"\");\r\n		return null;\r\n	}\r\n	\r\n	\r\n}\r\n','Logintest.java',84,NULL,NULL),(301,'package net.secual.web.app;\r\n\r\nimport java.net.URL;\r\nimport java.util.Enumeration;\r\n\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport net.secual.model.*;\r\nimport net.secual.model.crud.*;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.enclosing.util.StringFullfiller;\r\n\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\n\r\npublic class LoginPretest extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}\r\n','LoginPretest.java',84,NULL,NULL),(302,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountEditController\', AccountEditController);\r\n\r\n  /** @ngInject */\r\n  function AccountEditController(toastr, account, AccountService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.account = account;\r\n    \r\n    vm.delete = deleteAccount;\r\n\r\n    function deleteAccount(){\r\n      accountService.delete(vm.account.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','account.edit.controller.jsAccountAngularModel.java',85,NULL,NULL),(303,'<div class=\"edit-account\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{account.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		AccountID\n	</div>\n	<input type=\"text\" ng-model=\"accountEditInfo.account.accountID\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Lock\n	</div>\n	<input type=\"text\" ng-model=\"accountEditInfo.account.lock\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-account-btn\" ng-click=\"delete()\">Delete account</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','account.edit.htmlAccountAngularModel.java',85,NULL,NULL),(304,'.edit-account {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','account.edit.scssAccountAngularModel.java',85,NULL,NULL),(305,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/accounts.edit/accounts.edit.html\',\r\n        controller: \'AccountEditController\',\r\n        controllerAs: \'accountEditInfo\',\r\n        resolve: {\r\n          account: function(AccountService, $stateParams){ \r\n            return AccountService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','account.edit.route.jsAccountAngularModel.java',85,NULL,NULL),(306,'<div class=\"add-account\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n		<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		AccountID\n	</div>\n	<input type=\"text\" ng-model=\"accountAddInfo.account.accountID\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Lock\n	</div>\n	<input type=\"text\" ng-model=\"accountAddInfo.account.lock\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-account-btn\" ng-click=\"accountAddInfo.create()\">Save account</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','account.add.htmlAccountAngularModel.java',85,NULL,NULL),(317,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'UserEditController\', UserEditController);\r\n\r\n  /** @ngInject */\r\n  function UserEditController(toastr, user, UserService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.user = user;\r\n    	vm.groupss = [];\n\r\n    vm.delete = deleteUser;\r\n\r\n    function deleteUser(){\r\n      userService.delete(vm.user.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','user.edit.controller.jsAngularModelUser.java',86,NULL,NULL),(318,'<div class=\"edit-user\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{user.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Name\n	</div>\n	<input type=\"text\" ng-model=\"userEditInfo.user.name\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Password\n	</div>\n	<input type=\"text\" ng-model=\"userEditInfo.user.password\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Groups\n	</div>\n	<md-select ng-model=\"groupsEditInfo.user.group.name\">\n	<md-option ng-repeat=\"group in userEditInfo.groups\" value=\"{{groups.name}}\">\n		{{groups.name}}\n	</md-option>\n	</md-select>\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-user-btn\" ng-click=\"delete()\">Delete user</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','user.edit.htmlAngularModelUser.java',86,NULL,NULL),(307,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountAddController\', AccountEditController);\r\n\r\n  /** @ngInject */\r\n  function AccountAddController(toastr, AccountService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.account = {};\r\n	\r\n    vm.create = createAccount;\r\n\r\n    function createAccount(){\r\n      accountService.create(vm.account).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','account.add.controller.jsAccountAngularModel.java',85,NULL,NULL),(308,' <md-list class=\"accounts\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"account in accountsList.accounts\" >\r\n    <a ui-sref=\"app.accounts.edit({id:account.id})\">\r\n\r\n                <div class=\"account-name col-md-6 col-sm-6 col-xs-6\">{{account.email}}\r\n                </div>\r\n                <div class=\"account-group col-md-6 col-sm-6 col-xs-6\">{{account.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.accounts.add\">Create account</a>','account.htmlAccountAngularModel.java',85,NULL,NULL),(309,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'AccountsController\', AccountsController);\r\n\r\n  	/** @ngInject */\n	function AccountsController(toastr, ) {\n	}\r\n})();','accounts.controller.jsAccountAngularModel.java',85,NULL,NULL),(310,'.add-account {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','account.add.scssAccountAngularModel.java',85,NULL,NULL),(311,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/accounts.add/accounts.add.html\',\r\n        controller: \'AccountAddController\',\r\n        controllerAs: \'accountAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','account.add.route.jsAccountAngularModel.java',85,NULL,NULL),(312,'.accounts{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','account.scssAccountAngularModel.java',85,NULL,NULL),(313,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.accounts\', {\r\n        url: \'/accounts\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.accounts.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/accounts/accounts.html\',\r\n        controller: \'AccountsController\',\r\n        controllerAs: \'accountsList\',\r\n		\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','account.route.jsAccountAngularModel.java',85,NULL,NULL),(314,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'AccountService\', AccountService);\r\n\r\n    AccountService.$inject = [\'Restangular\', \'$q\'];\r\n    function AccountService(Restangular, $q) {\r\n        var accountService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var accountRepository = Restangular.one(\'account\');\r\n\r\n        function get() {             \r\n            return accountRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return accountRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return accountRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return accountRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(accountId){\r\n          \r\n\r\n            return accountRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return accountService;\r\n    }\r\n})();\r\n','account.service.jsAccountAngularModel.java',85,NULL,NULL),(315,'class V1::AccountsController < V1::BaseController\r\n  before_action :authenticate_agent!, only: [:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :find_account!, only:[:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :authenticate_user!, only: [:index]\r\n\r\n  def index\r\n    if current_user.role.name == \"operator\"\r\n      accounts = Account.all\r\n    elsif (current_user.role.name == \"owner\") || (current_user.role.name == \"user\")\r\n      accounts = current_user.account.accounts\r\n    else\r\n      render json: {error: \'authentication failed\'} , status: 401 and return\r\n    end\r\n    render json: {accounts: accounts}\r\n  end\r\n\r\n  def create\r\n    account = Account.new(account_params)\r\n    if account.save\r\n      render json: account , status: :created\r\n    else\r\n      render json: {error: account.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def show\r\n    if (user_signed_in?)\r\n      if ([\'owner\', \'user\'].include? current_user.role.name)\r\n        if current_user.account.accounts.exclude?(@account)\r\n          render json: {error: \'User can access his own account\'}, status: 403 and return\r\n        end\r\n      end\r\n\r\n      render json: {account: @account}\r\n    else\r\n      short_resp = @account.as_json(account_only_fields)\r\n      render json: {account: short_resp}\r\n    end\r\n  end\r\n\r\n  def update\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.accounts.exclude?(@account)\r\n        render json: {error: \'User can access his own account\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @account.update(account_params)\r\n      render json: {account: @account}\r\n    else\r\n      render json: {error: @account.errors.messages} , status: :forbidden\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.accounts.exclude?(@account)\r\n        render json: {error: \'User can access his own account\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @account.destroy\r\n      render json: {account: @account}, status: :ok\r\n    else\r\n      render json: {error: @account.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def modified_fields\r\n    resp = {}\r\n\r\n    trail = @account.account_trail\r\n    resp = trail.diff_account\r\n\r\n    render json: {account: resp}\r\n  end\r\n\r\n  def confirm_modify\r\n    trail = @account.account_trail\r\n    render json: {error: \'No Command\'}, status: 404 and return if trail.nil?\r\n\r\n    # marked account\'s fields\r\n    trail.mark_completed params[:account]\r\n\r\n    render json: {confirmed: \'OK\'}\r\n  end\r\n\r\n  private\r\n\r\n    def account_params\r\n      params.require(:account).permit(:id,:accountID,:lock,:currentPatternId,:gmoMemberId,:address,:createdAt,:updatedAt,:status)          \r\n    end\r\n\r\n    def account_only_fields\r\n      {only: [:id,:status,:address,:gmoMemberId]}\r\n    end\r\nend','account.controller.rbAccountRailsController.java',83,NULL,NULL),(316,'class V1::AccountsController < V1::BaseController\r\n  before_action :find_account!, only:[:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n\r\n  def index\r\n    accounts = Account.all\r\n    render json: {accounts: accounts}\r\n  end\r\n\r\n  def create\r\n    account = Account.new(account_params)\r\n    if account.save\r\n      render json: account , status: :created\r\n    else\r\n      render json: {error: account.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def show\r\n      render json: {account: @account}\r\n  end\r\n\r\n  def update\r\n    if @account.update(account_params)\r\n      render json: {account: @account}\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if @account.destroy\r\n      render json: {account: @account}, status: :ok\r\n    end\r\n  end\r\n\r\n  def modified_fields\r\n    resp = {}\r\n\r\n    trail = @account.account_trail\r\n    resp = trail.diff_account\r\n    render json: {account: resp}\r\n  end\r\n\r\n  def confirm_modify\r\n    trail = @account.account_trail\r\n    render json: {error: \'No Command\'}, status: 404 and return if trail.nil?\r\n\r\n    # marked account\'s fields\r\n    trail.mark_completed params[:account]\r\n\r\n    render json: {confirmed: \'OK\'}\r\n  end\r\n\r\n  private\r\n\r\n    def account_params\r\n      params.require(:account).permit(:id,:accountID,:lock,:currentPatternId,:gmoMemberId,:address,:createdAt,:updatedAt,:status)          \r\n    end\r\n\r\nend','account.basiccontroller.rbAccountRailsController.java',83,NULL,NULL),(319,'.edit-user {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','user.edit.scssAngularModelUser.java',86,NULL,NULL),(320,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.users.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/users.edit/users.edit.html\',\r\n        controller: \'UserEditController\',\r\n        controllerAs: \'userEditInfo\',\r\n        resolve: {\r\n          user: function(UserService, $stateParams){ \r\n            return UserService.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','user.edit.route.jsAngularModelUser.java',86,NULL,NULL),(321,'<div class=\"add-user\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n		<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Name\n	</div>\n	<input type=\"text\" ng-model=\"userAddInfo.user.name\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Password\n	</div>\n	<input type=\"text\" ng-model=\"userAddInfo.user.password\n	<md-divider></md-divider>\n	</md-list-item>\n	<md-list-item class=\"md-1-line\">\n	<div class=\"md-list-item-text\">\n		Groups\n	</div>\n	<md-select ng-model=\"groupsAddInfo.user.group.name\">\n	<md-option ng-repeat=\"group in userAddInfo.groups\" value=\"{{groups.name}}\">\n		{{groups.name}}\n	</md-option>\n	</md-select>\n	<md-divider></md-divider>\n	</md-list-item>\n\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-user-btn\" ng-click=\"userAddInfo.create()\">Save user</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','user.add.htmlAngularModelUser.java',86,NULL,NULL),(322,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'UserAddController\', UserEditController);\r\n\r\n  /** @ngInject */\r\n  function UserAddController(toastr, UserService, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.user = {};\r\n		vm.groupss = [];\n\r\n    vm.create = createUser;\r\n\r\n    function createUser(){\r\n      userService.create(vm.user).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','user.add.controller.jsAngularModelUser.java',86,NULL,NULL),(323,' <md-list class=\"users\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"user in usersList.users\" >\r\n    <a ui-sref=\"app.users.edit({id:user.id})\">\r\n\r\n                <div class=\"user-name col-md-6 col-sm-6 col-xs-6\">{{user.email}}\r\n                </div>\r\n                <div class=\"user-group col-md-6 col-sm-6 col-xs-6\">{{user.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.users.add\">Create user</a>','user.htmlAngularModelUser.java',86,NULL,NULL),(324,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .controller(\'UsersController\', UsersController);\r\n\r\n  	/** @ngInject */\n	function UsersController(toastr, groups) {\n		var vm = this;\n		vm.groups = groups.plain().groups;\n		vm.users = extractUsers(vm.groups);\n\n		function assignGroupName(users, groupName) {\n			var result = [];\n			for (var i = 0; i < users.length; i++) {\n				var user = users[i];\n				user.groupName = groupName;\n				result.push(user);\n			}\n			return result;\n		}\n\n		function extractUsers(groups) {\n			var result = [];\n			for (var i = 0; i < groups.length; i++) {\n				var gr = groups[i];\n				var _us = assignGroupName(gr.users, gr.name);\n				result = result.concat(_us);\n			}\n			return result;\n		}\n	}\r\n})();','users.controller.jsAngularModelUser.java',86,NULL,NULL),(325,'.add-user {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','user.add.scssAngularModelUser.java',86,NULL,NULL),(326,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.users.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/users.add/users.add.html\',\r\n        controller: \'UserAddController\',\r\n        controllerAs: \'userAddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','user.add.route.jsAngularModelUser.java',86,NULL,NULL),(327,'.users{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','user.scssAngularModelUser.java',86,NULL,NULL),(328,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'secual\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.users\', {\r\n        url: \'/users\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.users.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/users/users.html\',\r\n        controller: \'UsersController\',\r\n        controllerAs: \'usersList\',\r\n		resolve: {\n		groups: function(GroupService {\n			return GroupService.get();\n		}\n	}\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','user.route.jsAngularModelUser.java',86,NULL,NULL),(329,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'secual\')\r\n        .service(\'UserService\', UserService);\r\n\r\n    UserService.$inject = [\'Restangular\', \'$q\'];\r\n    function UserService(Restangular, $q) {\r\n        var userService = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var userRepository = Restangular.one(\'user\');\r\n\r\n        function get() {             \r\n            return userRepository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return userRepository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return userRepository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return userRepository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(userId){\r\n          \r\n\r\n            return userRepository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return userService;\r\n    }\r\n})();\r\n','user.service.jsAngularModelUser.java',86,NULL,NULL);
/*!40000 ALTER TABLE `struts_action` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `struts_action_template`
--

DROP TABLE IF EXISTS `struts_action_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `struts_action_template` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TEMPLATE` varchar(10000) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `NAMETEMPLATE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `VERB_FK` int(11) NOT NULL,
  `TARGETEEACTION_FK` int(11) DEFAULT NULL,
  `JSP_TEMPLATE_FK` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `STRUTS_ACTION_TEMPLATE_TARGETC` (`TARGETEEACTION_FK`),
  KEY `STRUTS_ACTION_TEMPLATE_VERB_FC` (`VERB_FK`),
  KEY `STRUTS_ACTION_TEMPLATE_JSP_TEC` (`JSP_TEMPLATE_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=86 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `struts_action_template`
--

LOCK TABLES `struts_action_template` WRITE;
/*!40000 ALTER TABLE `struts_action_template` DISABLE KEYS */;
INSERT INTO `struts_action_template` VALUES (1,'package ##packagename##;\r\n\r\nimport java.net.URL;\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.exception.DataException;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport de.nava.informa.core.ChannelIF;\r\nimport de.nava.informa.core.ItemIF;\r\nimport de.nava.informa.impl.basic.ChannelBuilder;\r\nimport de.nava.informa.parsers.FeedParser;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		String url = req.getParameter(\"url\");\r\n        try {\r\n           URL url = new URL(url);\r\n           ChannelIF channel = FeedParser.parse(new ChannelBuilder(), url);\r\n           Collection items = channel.getItems();\r\n           channel = FeedParser.parse(new ChannelBuilder(), url);\r\n           items = channel.getItems();\r\n           Vector vector = new Vector();\r\n            \r\n           for (Iterator iter = items.iterator(); iter.hasNext();) {\r\n		ItemIF itemIF = (ItemIF) iter.next();\r\n\r\n		String textStr = itemIF.getDescription();\r\n	//	textStr = this.nl2br(textStr);\r\n		vector.add(textStr);\r\n	   }\r\n           req.setAttribute(\"outputs\",vector);\r\n           req.setAttribute(\"rsstitle\",item.getTitle().replaceAll(\"<[^>]*?>\",\"\"));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n		return mapping.findForward(\"success\");\r\n	}	\r\n}','RSSBlock',1,NULL,1),(2,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		BeanFactory factory = WebApplicationContextUtils\r\n				.getWebApplicationContext(this.getServlet().getServletContext());\r\n		SessionFactory sessionFactory = (SessionFactory) factory\r\n				.getBean(\"sessionFactory\");\r\n		Session session = sessionFactory.openSession();\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"##modelobj##\",##modelobj##);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','##modelclass##Detail',2,NULL,3),(3,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = (##modelclass##Form) form;\r\n		\r\n		\r\n		BeanUtils.copyProperties(##modelobj##,##modelobj##form);\r\n		StringFullfiller.fullfil(##modelobj##);\r\n		if(##modelobj##form.getId() == null || ##modelobj##form.getId().intValue() == 0){\r\n			##modelobj##.setId(null);\r\n		}else{\r\n			##modelobj##.setId(##modelobj##form.getId());\r\n		}\r\n		\r\n		BeanFactory factory = WebApplicationContextUtils\r\n				.getWebApplicationContext(this.getServlet().getServletContext());\r\n		SessionFactory sessionFactory = (SessionFactory) factory\r\n				.getBean(\"sessionFactory\");\r\n		Session session = sessionFactory.openSession();\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n		sessionFactory.close();\r\n		\r\n		\r\n		req.setAttribute(\"id\", ##modelobj##.getId());\r\n		return mapping.findForward(\"success\");\r\n		\r\n	}\r\n	\r\n	\r\n}','##modelclass##VP',2,4,NULL),(4,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n		BeanFactory factory = WebApplicationContextUtils\r\n				.getWebApplicationContext(this.getServlet().getServletContext());\r\n		SessionFactory sessionFactory = (SessionFactory) factory\r\n				.getBean(\"sessionFactory\");\r\n		Session session = sessionFactory.openSession();\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			##modelclass## ##modelobj## = (##modelclass##) iter.next();\r\n			vector.add(##modelobj##);\r\n		}\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		Criteria criteria2 = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria2.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			##modelobj## = (##modelclass##) criteria2.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"##modelobj##\",##modelobj##);\r\n\r\n		\r\n		req.setAttribute(\"##modelobj##s\",vector);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','##modelclass##s',2,NULL,2),(5,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n		BeanFactory factory = WebApplicationContextUtils\r\n				.getWebApplicationContext(this.getServlet().getServletContext());\r\n		SessionFactory sessionFactory = (SessionFactory) factory\r\n				.getBean(\"sessionFactory\");\r\n		Session session = sessionFactory.openSession();\r\n		Transaction transaction = session.beginTransaction();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n\r\n\r\n		##modelclass## ##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		session.delete(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n		sessionFactory.close();\r\n\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','Delete##modelclass##',2,4,NULL),(6,'package ##packagename##;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Date;\r\nimport java.util.Iterator;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.RssDublinCore;\r\nimport churchillobjects.rss4j.generator.RssGenerator;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n\r\n	        try{\r\n	        	RssDocument objRss=new RssDocument();\r\n	        	objRss.setVersion(\"1.0\");\r\n\r\n\r\n 		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n	    		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n	    		criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n//	    		##secoundclass## ##secoundobj## = ##modelobj##.get##secoundclass##();\r\n	    			criteria = session.createCriteria(##modelclass##.class);\r\n//	    			criteria.addOrder(Order.desc(\"date\"));\r\n//	    			criteria.add(Restrictions.eq(\"##secoundobj##\", ##secoundobj##));\r\n	    			criteria.setMaxResults(30);\r\n	    			if(req.getParameter(\"q\") !=null && !req.getParameter(\"q\").equals(\"\")){\r\n	    				criteria.add(Restrictions.like(\"##aiueo##\",\"%\" + new String(req.getParameter(\"q\").getBytes(\"8859_1\"), \"UTF-8\")  + \"%\"));\r\n	    			}\r\n\r\n	    			ChannelBuilder builder = new ChannelBuilder();\r\n	    			ChannelIF newChannel = builder.createChannel(\"##modelclass##s\");\r\n	    			newChannel.setFormat(ChannelFormat.RSS_1_0);\r\n	    			newChannel.setLanguage(\"ja\");\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setDescription(\"##modelclass##s\");\r\n\r\n\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n		        	newChannel.setDescription(\"##modelclass##s\");\r\n	    			for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n	    				##modelclass## ##modelobj## = (##modelclass##)iter.next();\r\n					ItemIF item = new Item();\r\n					//item.setDate(new Date());\r\n\r\n	    				item.setTitle(##modelobj##.getName());\r\n	    				item.setLink(new URL(\"http://\"+req.getServerName()+req.getRequestURI());\r\n	    				item.setDescription(##modelobj##.getName());\r\n		    			newChannel.addItem(item);\r\n	    			}\r\n	    			StringWriter stringWriter = new StringWriter();\r\n	    			res.setContentType(\"text/xml;charset=utf-8\");\r\n	    			res.setCharacterEncoding(\"utf-8\");\r\n	    			RSS_1_0_Exporter writer = new RSS_1_0_Exporter(stringWriter,\"utf-8\");\r\n	    			writer.write(newChannel);\r\n	    			res.getWriter().write(stringWriter.toString());\r\n		    			\r\n	    			PrintWriter printWriter = new PrintWriter(new File(this.getServlet().getServletContext().getRealPath(\"##modelclass##RssExport.xml\")),\"utf-8\");\r\n	    			printWriter.write(stringWriter.toString());\r\n\r\n	    			session.flush();\r\n\r\n	        }catch(IOException e){\r\n	            System.out.println(e.toString());\r\n	        }finally{\r\n	        }\r\n\r\n\r\n\r\n        \r\n		return mapping.findForward(\"success\");\r\n	}\r\n    public String url2link(String string){\r\n    	return string.replaceAll(\"(http://|https://){1}[\\\\w\\\\.\\\\-/:]+\",\"<a href=\'$0\'>$0</a>\");\r\n    }\r\n    public String nl2br(String string){\r\n    	string = string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	return string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	\r\n    }\r\n\r\n\r\n	\r\n}','RSSExport##modelclass##',3,NULL,NULL),(7,'package ##packagename##;\r\n\r\nimport java.net.URL;\r\nimport java.util.Enumeration;\r\n\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.enclosing.util.StringFullfiller;\r\n\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		String urlstr = req.getParameter(\"url\");\r\n        try {\r\n           URL url = new URL(urlstr);\r\n		HttpClient client = new HttpClient();\r\n		GetMethod method = new GetMethod(url.toString());\r\n		client.executeMethod(method);\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		RssDocument doc = RssParser.parseRss(method.getResponseBodyAsString());\r\n		Enumeration enumeration = doc.channels();\r\n		while(enumeration.hasMoreElements()){\r\n	            RssChannel channel = (RssChannel)enumeration.nextElement();\r\n                    Criteria criteria = session.createCriteria(##modelclass##.class);\r\n//                    criteria.add(Restrictions.eq(\"##uniqattribute##\",new String(item.getItemLink())));\r\n                    if(criteria.list().size() == 0){\r\n                        System.out.println(\"Channel: \"+channel.getChannelTitle());\r\n                        Enumeration items = channel.items();\r\n                        while(items.hasMoreElements()){\r\n                           RssChannelItem item = (RssChannelItem) items.nextElement();\r\n                           ##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n                           ##modelobj##.setContent(item.getItemDescription());\r\n                           ##modelobj##.setTitle(item.getItemTitle());\r\n                           //	##EDITSNIP## textStr = this.nl2br(textStr);\r\n                           StringFullfiller.fullfil(##modelobj##);\r\n                           Transaction transaction = session.beginTransaction();\r\n                           session.saveOrUpdate(##modelobj##);\r\n                           transaction.commit();\r\n                        }\r\n                    }\r\n                }\r\n		session.flush();\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n		return mapping.findForward(\"success\");\r\n	}	\r\n}','RssImport##modelclass##',4,NULL,NULL),(8,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"##modelobj##\",##modelobj##);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','##modelclass##Detail',6,NULL,NULL),(9,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = (##modelclass##Form) form;\r\n		\r\n                ##relationvpcode##\r\n		\r\n		BeanUtils.copyProperties(##modelobj##,##modelobj##form);\r\n		StringFullfiller.fullfil(##modelobj##);\r\n		if(##modelobj##form.getId() == null || ##modelobj##form.getId().intValue() == 0){\r\n			##modelobj##.setId(null);\r\n		}else{\r\n			##modelobj##.setId(##modelobj##form.getId());\r\n		}\r\n\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		\r\n                ##relationvpsecoundcode##\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n		\r\n		new HTTPGetRedirection(req, res, \"##modelclass##Detail.do\", ##modelobj##.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','##modelclass##VP',6,NULL,NULL),(10,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			##modelclass## ##modelobj## = (##modelclass##) iter.next();\r\n			vector.add(##modelobj##);\r\n		}\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		Criteria criteria2 = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria2.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria2.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			##modelobj## = (##modelclass##) criteria2.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"##modelobj##\",##modelobj##);\r\n\r\n		\r\n		req.setAttribute(\"##modelobj##s\",vector);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','##modelclass##s',6,NULL,4),(11,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n\r\n\r\n		##modelclass## ##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		session.delete(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','Delete##modelclass##',6,10,NULL),(12,'package ##packagename##;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Date;\r\nimport java.util.Iterator;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.RssDublinCore;\r\nimport churchillobjects.rss4j.generator.RssGenerator;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n\r\n	        try{\r\n	        	RssDocument objRss=new RssDocument();\r\n	        	objRss.setVersion(\"1.0\");\r\n\r\n\r\n 		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n	    		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n	    		criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n//	    		##secoundclass## ##secoundobj## = ##modelobj##.get##secoundclass##();\r\n	    			criteria = session.createCriteria(##modelclass##.class);\r\n//	    			criteria.addOrder(Order.desc(\"date\"));\r\n//	    			criteria.add(Restrictions.eq(\"##secoundobj##\", ##secoundobj##));\r\n	    			criteria.setMaxResults(30);\r\n	    			if(req.getParameter(\"q\") !=null && !req.getParameter(\"q\").equals(\"\")){\r\n	    				criteria.add(Restrictions.like(\"##aiueo##\",\"%\" + new String(req.getParameter(\"q\").getBytes(\"8859_1\"), \"UTF-8\")  + \"%\"));\r\n	    			}\r\n\r\n	    			ChannelBuilder builder = new ChannelBuilder();\r\n	    			ChannelIF newChannel = builder.createChannel(\"##modelclass##s\");\r\n	    			newChannel.setFormat(ChannelFormat.RSS_1_0);\r\n	    			newChannel.setLanguage(\"ja\");\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setDescription(\"##modelclass##s\");\r\n\r\n\r\n	    			newChannel.setSite(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n	    			newChannel.setLocation(new URL(\"http://\"+req.getServerName()+req.getRequestURI()));\r\n		        	newChannel.setDescription(\"##modelclass##s\");\r\n	    			for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n	    				##modelclass## ##modelobj## = (##modelclass##)iter.next();\r\n					ItemIF item = new Item();\r\n					//item.setDate(new Date());\r\n\r\n	    				item.setTitle(##modelobj##.getName());\r\n	    				item.setLink(new URL(\"http://\"+req.getServerName()+req.getRequestURI());\r\n	    				item.setDescription(##modelobj##.getName());\r\n		    			newChannel.addItem(item);\r\n	    			}\r\n	    			StringWriter stringWriter = new StringWriter();\r\n	    			res.setContentType(\"text/xml;charset=utf-8\");\r\n	    			res.setCharacterEncoding(\"utf-8\");\r\n	    			RSS_1_0_Exporter writer = new RSS_1_0_Exporter(stringWriter,\"utf-8\");\r\n	    			writer.write(newChannel);\r\n	    			res.getWriter().write(stringWriter.toString());\r\n		    			\r\n	    			PrintWriter printWriter = new PrintWriter(new File(this.getServlet().getServletContext().getRealPath(\"##modelclass##RssExport.xml\")),\"utf-8\");\r\n	    			printWriter.write(stringWriter.toString());\r\n\r\n	    			session.flush();\r\n\r\n	        }catch(IOException e){\r\n	            System.out.println(e.toString());\r\n	        }finally{\r\n	        }\r\n\r\n\r\n\r\n        \r\n		return mapping.findForward(\"success\");\r\n	}\r\n    public String url2link(String string){\r\n    	return string.replaceAll(\"(http://|https://){1}[\\\\w\\\\.\\\\-/:]+\",\"<a href=\'$0\'>$0</a>\");\r\n    }\r\n    public String nl2br(String string){\r\n    	string = string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	return string.replaceAll(\"\\\\n\",\"<br />\");\r\n    	\r\n    }\r\n\r\n\r\n	\r\n}','##modelclass##RSSExport',6,NULL,NULL),(13,'package ##packagename##;\r\n\r\nimport java.net.URL;\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		String urlstr = req.getParameter(\"url\");\r\n        try {\r\n           URL url = new URL(urlstr);\r\n		HttpClient client = new HttpClient();\r\n       		URL url = new URL(urlstr);\r\n		GetMethod method = new GetMethod(url.toString());\r\n		client.executeMethod(method);\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		RssDocument doc = RssParser.parseRss(method.getResponseBodyAsString());\r\n		Enumeration enum = doc.channels();\r\n		while(enum.hasMoreElements()){\r\n		  RssChannel channel = (RssChannel)enum.nextElement();\r\n		  System.out.println(\"Channel: \"+channel.getChannelTitle());\r\n		  Enumeration items = channel.items();\r\n		  while(items.hasMoreElements()){\r\n                  	RssChannelItem item = (RssChannelItem) items.nextElement();	     		                ##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n			##modelobj##.setContent(item.getItemDescription());\r\n			##modelobj##.setTitle(itemIf.getItemTitle());\r\n		//	##EDITSNIP## textStr = this.nl2br(textStr);\r\n			StringFullfiller.fullfil(##modelobj##);\r\n			Transaction transaction = session.beginTransaction();\r\n			session.saveOrUpdate(##modelobj##);\r\n			transaction.commit();\r\n		  }\r\n		session.flush();\r\n\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n		return mapping.findForward(\"success\");\r\n	}	\r\n}','##modelclass##InputRss',6,NULL,NULL),(14,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n\r\n		for (int I = 0; I < req.getParameterValues(\"id\").length; i++) {\r\n			Criteria criteria2 = session.createCriteria(##modelclass##.class);\r\n			criteria2.add(Restrictions.idEq(Integer.valueOf(req.getParameterValues(\"id\")[i])));\r\n			##modelclass## ##modelobj## = (##modelclass##)criteria2.uniqueResult();\r\n			##modelobj##.set##attr##(true);\r\n			session.save(##modelobj##);\r\n		}\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','SetSelectionOf##modelclass####attr##',6,10,NULL),(15,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Transaction;\r\n\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n		##modelclass## ##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		##modelobj##.set##Attr##(true);\r\n		session.saveOrUpdate(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		new HTTPGetRedirection(req, res, \"##modelclass##s.do\", ##modelobj##.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','Set##modelclass####Attr##',6,10,NULL),(16,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n		##modelclass## ##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		##modelobj##.set##Attr##(false);\r\n		session.saveOrUpdate(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		new HTTPGetRedirection(req, res, \"##modelclass##s.do\", ##modelobj##.getId().toString());\r\n		return null;\r\n	}\r\n	\r\n	\r\n}','Set##modelclass##Non##attr##',6,10,NULL),(17,'package ##packagename##;\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n		##modelclass## ##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		##modelclass## ##modelobj##2 = new ##modelclass##Impl();\r\n		BeanUtils.copyProperties(##modelobj##2,##modelobj##);\r\n                ##modelobj##2.setId(null);\r\n		//##modelobj##2.setSomething(null);\r\n		session.saveOrUpdate(##modelobj##2);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n		req.setAttribute(\"id\", ##modelobj##2.getId());\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','CopyA##modelclass##FromA##modelclass##',6,10,NULL),(18,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport java.awt.font.NumericShaper;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.util.Iterator;\r\nimport java.util.Locale;\r\nimport java.util.Vector;\r\n\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.criterion.Order;\r\n\r\nimport jxl.Workbook;\r\nimport jxl.WorkbookSettings;\r\nimport jxl.write.Label;\r\nimport jxl.write.Number;\r\nimport jxl.write.WritableSheet;\r\nimport jxl.write.WritableWorkbook;\r\nimport net.pmcsm.model.Componey;\r\nimport net.pmcsm.model.Manual;\r\nimport net.pmcsm.model.Outsourcing;\r\n\r\n\r\npublic class ##nameofsentence##{\r\n	public ##nameofsentence##(Vector vector,OutputStream outputStream,Session session){\r\n\r\n        try{\r\n        	WorkbookSettings ws = new WorkbookSettings();\r\n\r\n        	ws.setLocale(new Locale(\"ja\", \"JP\"));\r\n        	ws.setEncoding(\"Windows-31J\");\r\n        	WritableWorkbook workbook = Workbook.createWorkbook(outputStream, ws);\r\n        	WritableSheet sheet = workbook.createSheet(\"sheet\", 0);\r\n        	ws.setGCDisabled(true);\r\n        	\r\n                int x = 0;\r\n                sheet.addCell(new Label(x++, 0, \"1\"));\r\n        	sheet.addCell(new Label(x++, 0, \"2\"));\r\n        	sheet.addCell(new Label(x++, 0, \"3\"));\r\n        	sheet.addCell(new Label(x++, 0, \"4\"));\r\n        	sheet.addCell(new Label(x++, 0, \"5\"));\r\n        	sheet.addCell(new Label(x++, 0, \"6\"));\r\n        	sheet.addCell(new Label(x++, 0, \"7\"));\r\n        	sheet.addCell(new Label(x++, 0, \"8\"));\r\n        	sheet.addCell(new Label(x++, 0, \"9\"));\r\n        	sheet.addCell(new Label(x++, 0, \"10\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n        	x = 0;\r\n        	int y= 1;\r\n    		for (Iterator iter = vector.iterator(); iter.hasNext();) {\r\n    			##modelclass## ##modelobj## = (##modelclass##) iter.next();\r\n    			sheet.addCell(new Label(x++, y, ##modelobj##.get().getTypename()));\r\n    			sheet.addCell(new Label(x++, y, ##modelobj##.get().getModelcode()));\r\n    			sheet.addCell(new Label(x++, y, ##modelobj##.get().getShimuke()));\r\n    			sheet.addCell(new Label(x++, y, ##modelobj##.get().getName()));\r\n    			sheet.addCell(new Number(x++, y, ##modelobj##.get()));\r\n    			sheet.addCell(new Number(x++, y, ##modelobj##.get()));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			sheet.addCell(new Label(x++, y, String.valueOf(true)));\r\n    			i++;\r\n    		}\r\n        	\r\n        	workbook.write();\r\n        	workbook.close();\r\n		\r\n        }catch(Exception e){\r\n            System.out.println(e.toString());\r\n        }finally{\r\n        }\r\n	}\r\n	\r\n\r\n\r\n}','XlsExportOf##modelclass##',6,NULL,NULL),(20,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.BufferedOutputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.InputStream;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.StringFullfiller;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.apache.struts.upload.FormFile;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Bean ##modelobj##form = (##modelclass##Bean) form;\r\n		\r\n		///////////////////////validation for file names jpgかJPGかJPEGじゃないなら\r\n		if(! (##modelobj##form.getFile().getFileName().endsWith(\".jpg\") || ##modelobj##form.getFile().getFileName().endsWith(\".JPG\") || ##modelobj##form.getFile().getFileName().endsWith(\".JPEG\") )){\r\n			req.getSession().setAttribute(\"systemmessage\",\"画像はJPEG画像のみアップロード可能です。\\\\\\\");\r\n//			new HTTPGetRedirection(req, res, \"##secoundmodelclass##Detail.do\", ##modelobj##form.get##addingtoclass##().toString());\r\n			req.setAttribute(\"id\",##modelobj##form.get##addingtoclass##());\r\n			return mapping.findForward(\"error\");\r\n		}\r\n		\r\n		Integer ##addingtoclass##Int = ##modelobj##form.get##addingtoclass##();\r\n		##modelobj##form.set##addingtoclass##(null);\r\n		\r\n		BeanUtils.copyProperties(##modelobj##,##modelobj##form);\r\n		StringFullfiller.fullfil(##modelobj##);\r\n		if(##modelobj##form.getId() == null || ##modelobj##form.getId().intValue() == 0){\r\n			##modelobj##.setId(null);\r\n		}else{\r\n			##modelobj##.setId(##modelobj##form.getId());\r\n		}\r\n		##modelobj##.setSetnumber(Integer.parseInt(req.getParameter(\"setnumber\")));\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n		Criteria criteria2 = session.createCriteria(##addingtoclass##.class);\r\n		criteria2.add(Restrictions.idEq(##addingtoclass##Int));\r\n		##addingtoclass## ##addingtoobj## = (##addingtoclass##) criteria2\r\n				.uniqueResult();\r\n		##modelobj##.set##addingtoclass##(##addingtoobj##);\r\n\r\n		\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n		sessionFactory.close();\r\n		\r\n\r\n		///////////////////putting file to upload\r\n		FormFile file = ##modelobj##form.getFile();\r\n		String filename = ##modelobj##.getId().toString() +\".jpg\";\r\n		\r\n		InputStream is = file.getInputStream();\r\n		String basepath = 		this.getServlet().getServletContext().getRealPath(\"upload\");\r\n\r\n		\r\n		BufferedInputStream inBuffer = new BufferedInputStream(is);\r\n		FileOutputStream fos = new FileOutputStream(basepath + \"/\" + filename);\r\n		BufferedOutputStream outBuffer = new BufferedOutputStream(fos);\r\n		int contents = 0;\r\n		while ((contents = inBuffer.read()) != -1) {\r\n			outBuffer.write(contents);\r\n		}\r\n		outBuffer.flush();\r\n		inBuffer.close();\r\n		outBuffer.close();\r\n		\r\n		\r\n		new HTTPGetRedirection(req, res, \"##addingtoclass##Detail.do\", ##addingtoclass##Int.toString());\r\n		return null;\r\n//		req.setAttribute(\"id\", ##modelobj##.getId());\r\n//		return mapping.findForward(\"success\");\r\n		\r\n	}\r\n	\r\n	\r\n}','##modelclass##FormFileUploadAddingTo##addingtoclass##',7,NULL,NULL),(19,'package ##packagename##;\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n	    	if(req.getParameter(\"q\") !=null && !req.getParameter(\"q\").equals(\"\")){\r\n	    	   criteria.add(Restrictions.like(\"##attr##\",\"%\" + new String(req.getParameter(\"q\").getBytes(\"8859_1\"), \"UTF-8\")  + \"%\"));\r\n	  	}\r\n		session.flush();\r\n		req.setAttribute(\"intrausers\", criteria.list());\r\n		req.setAttribute(\"from\",\"Grep##modelclass##On##Attr##\");\r\n		return mapping.findForward(\"success\");\r\n	}\r\n}','Grep##modelclass##On##attr##',6,NULL,4),(21,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##beanpackage##;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = (##modelclass##Form) form;\r\n\r\n                ##validation##\r\n\r\n                ##relationvpcode##\r\n		\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		if(##modelobj##form.getId() == null || ##modelobj##form.getId().intValue() == 0){\r\n			##modelobj##.setId(null);\r\n			##modelobj##form.setId(null);\r\n		}else{\r\n			##modelobj##.setId(##modelobj##form.getId());\r\n			Criteria criteria = session.createCriteria(##modelclass##.class);\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n\r\n		}\r\n                ##copyattrsatvp##\r\n\r\n		\r\n		StringFullfiller.fullfil(##modelobj##);\r\n                ##relationvpsecoundcode##\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\nif(req.getParameter(\"from\")!=null && req.getParameter(\"from\").equals(\"detail\")){\r\n		new HTTPGetRedirection(req, res, \"Post##modelclass##Detail.do\", ##modelobj##.getId().toString());\r\n\r\n}\r\n		\r\n		new HTTPGetRedirection(req, res, \"##modelclass##s.do\", ##modelobj##.getId().toString());\r\n		return null;\r\n\r\n		\r\n	}\r\n	\r\n	\r\n}','Post##modelclass##VP',8,NULL,NULL),(22,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = new ##modelclass##Form();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n			new CopyProperties(##modelobj##,##modelobj##form);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        ##modelobj##form = (##modelclass##Form)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(##modelobj##form.getId()));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",##modelobj##);\r\n		req.setAttribute(\"form\",##modelobj##form);\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','Post##modelclass##Detail',8,NULL,6),(23,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			##modelclass## ##modelobj## = (##modelclass##) iter.next();\r\n			vector.add(##modelobj##);\r\n		}\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = new ##modelclass##Form();\r\n		criteria = session.createCriteria(##modelclass##.class);\r\n\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n			new CopyProperties(##modelobj##,##modelobj##form);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        ##modelobj##form = (##modelclass##Form)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(##modelobj##form.getId()));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",##modelobj##);\r\n		req.setAttribute(\"form\",##modelobj##form);\r\n		\r\n		\r\n		req.setAttribute(\"##modelobj##s\",vector);\r\n		\r\n\r\n                if(req.getParameter(\"displayexport\") !=null){\r\n     		    return mapping.findForward(\"displayexport\");\r\n                }\r\n\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','##modelclass##s',9,NULL,7),(24,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"##modelobj##\",##modelobj##);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','Show##modelclass##',10,NULL,8),(25,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##beanpackage##;\r\n\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.BufferedOutputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.InputStream;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.StringFullfiller;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.apache.struts.upload.FormFile;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = (##modelclass##Form) form;\r\n		\r\n		///////////////////////validation for file names jpgかJPGかJPEGじゃないなら\r\n		if(! (##modelobj##form.getFormFile().getFileName().endsWith(\".jpg\") || ##modelobj##form.getFormFile().getFileName().endsWith(\".JPG\") || ##modelobj##form.getFormFile().getFileName().endsWith(\".JPEG\") )){\r\n			req.getSession().setAttribute(\"systemmessage\",\"jpg only\");\r\n//			new HTTPGetRedirection(req, res, \"##secoundmodelclass##Detail.do\", ##modelobj##form.get##addingtoclass##().toString());\r\n			req.setAttribute(\"id\",##modelobj##form.get##addingtoclass##());\r\n			return mapping.findForward(\"error\");\r\n		}\r\n		\r\n               	Integer ##addingtoclass##Int = ##modelobj##form.get##addingtoclass##();\r\n		##modelobj##form.set##addingtoclass##(null);\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n		Criteria criteria2 = session.createCriteria(##addingtoclass##.class);\r\n		criteria2.add(Restrictions.idEq(##addingtoclass##Int));\r\n		##addingtoclass## ##addingtoobj## = (##addingtoclass##) criteria2\r\n				.uniqueResult();\r\n\r\n                ##modelclass## prevobj = ##addingtoobj##.get##modelclass##();\r\n\r\n                if(prevobj!=null){\r\n                   prevobj.set##addingtoclass##(null);\r\n		Transaction transaction = session.beginTransaction();\r\n		session.delete(prevobj);\r\n		transaction.commit();\r\n                }\r\n				\r\n\r\n\r\n		BeanUtils.copyProperties(##modelobj##,##modelobj##form);\r\n		StringFullfiller.fullfil(##modelobj##);\r\n		\r\n		if(##modelobj##form.getId() == null || ##modelobj##form.getId().intValue() == 0){\r\n			##modelobj##.setId(null);\r\n                ##modelobj##.setId(null);\r\n\r\n		##modelobj##.set##addingtoclass##(##addingtoobj##);\r\n		##addingtoobj##.set##modelclass##(##modelobj##);\r\n\r\n		session.flush();\r\n		Transaction transaction = session.beginTransaction();\r\n		session.saveOrUpdate(##modelobj##);\r\n		session.saveOrUpdate(##addingtoobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n		}                \r\n		\r\n\r\n\r\n		\r\n\r\n		///////////////////putting file to upload\r\n		FormFile file = ##modelobj##form.getFormFile();\r\n		String filename = ##modelobj##.getId().toString() +\".jpg\";\r\n		\r\n		InputStream is = file.getInputStream();\r\n		String basepath = 		this.getServlet().getServletContext().getRealPath(\"upload\");\r\n\r\n		\r\n		BufferedInputStream inBuffer = new BufferedInputStream(is);\r\n		FileOutputStream fos = new FileOutputStream(basepath + \"/\" + filename);\r\n		BufferedOutputStream outBuffer = new BufferedOutputStream(fos);\r\n		int contents = 0;\r\n		while ((contents = inBuffer.read()) != -1) {\r\n			outBuffer.write(contents);\r\n		}\r\n		outBuffer.flush();\r\n		inBuffer.close();\r\n		outBuffer.close();\r\n		\r\n		\r\n		new HTTPGetRedirection(req, res, \"##addingtoclass##Detail.do\", ##addingtoclass##Int.toString());\r\n		return null;\r\n//		req.setAttribute(\"id\", ##modelobj##.getId());\r\n//		return mapping.findForward(\"success\");\r\n		\r\n	}\r\n	\r\n	\r\n}','##modelclass##FormFileUploadAddingTo##addingtoclass##',11,NULL,NULL),(26,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\n\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.HTTPGetRedirection;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n		Transaction transaction = session.beginTransaction();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		criteria.add(Restrictions.idEq(Integer.valueOf(req.getParameter(\"id\"))));\r\n\r\n\r\n		##modelclass## ##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		session.delete(##modelobj##);\r\n		transaction.commit();\r\n		session.flush();\r\n\r\n\r\n		\r\n				new HTTPGetRedirection(req, res, \"##modelclass##s.do\", ##modelobj##.getId().toString());\r\n		return null;\r\n\r\n	}\r\n	\r\n	\r\n}','Delete##modelclass##',14,NULL,NULL),(27,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##beanpackage##;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = new ##modelclass##Form();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n			new CopyProperties(##modelobj##,##modelobj##form);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        ##modelobj##form = (##modelclass##Form)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(##modelobj##form.getId()));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n                   \r\n                   \r\n		\r\n\r\n\r\n\r\n	}\r\n}','Update##modelclass##From##secoundmodelclass##',15,NULL,NULL),(28,'package ##packagename##;\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\n\r\nimport java.util.Calendar;\r\n\r\nimport javax.servlet.http.Cookie;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.pmcsm.model.IntraUser;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport filters.pmcsm.HibernateSession;\r\n\r\npublic class LoginAction extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n\r\n		\r\n		IntraUserForm intraUserForm = (IntraUserForm)form;\r\n\r\n\r\n		Criteria criteria = session.createCriteria(IntraUser.class);\r\n		criteria.add(Restrictions.eq(\"account\",intraUserForm.getAccount()));\r\n		criteria.add(Restrictions.eq(\"password\",intraUserForm.getPassword()));\r\n\r\n		IntraUser intraUser = null;\r\n		if(criteria.uniqueResult() !=null){\r\n			intraUser = (IntraUser)criteria.uniqueResult();\r\n			\r\n			/*\r\n			if(intraUser.isRemoved()){\r\n				req.setAttribute(\"message\",\"そのユーザはメールアドレスの認証が済んでいません。\");\r\n				return mapping.findForward(\"error\");\r\n			}\r\n			*/\r\n			\r\n			Calendar calendarnum = Calendar.getInstance();\r\n			Cookie cookie = new Cookie(\"pmcsmu\",intraUser.getMail());\r\n			cookie.setValue(intraUser.getMail());\r\n			cookie.setComment(\"hogehoge\");\r\n			cookie.setMaxAge(60 * 60 * 168);\r\n\r\n			res.addCookie(cookie); \r\n			res.flushBuffer();\r\n			\r\n		}else{\r\n\r\n			if(intraUserForm.getAccount()!=null){\r\n				req.setAttribute(\"message\",\"ユーザが存在しないか、パスワードが間違っています。\");\r\n			}\r\n			return mapping.findForward(\"error\");\r\n		}\r\n		session.flush();\r\n		new HTTPGetRedirection(req,res,\"index.jsp\",\"\");\r\n		return null;\r\n	}\r\n	\r\n	\r\n}\r\n','Login',12,NULL,NULL),(29,'package ##packagename##;\r\n\r\nimport java.net.URL;\r\nimport java.util.Enumeration;\r\n\r\nimport java.util.Collection;\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n\r\nimport ##modelpackage##;\r\nimport ##modelcrudpackage##;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.enclosing.util.StringFullfiller;\r\n\r\n\r\nimport org.apache.commons.httpclient.HttpClient;\r\nimport org.apache.commons.httpclient.methods.GetMethod;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport churchillobjects.rss4j.RssChannel;\r\nimport churchillobjects.rss4j.RssChannelItem;\r\nimport churchillobjects.rss4j.RssDocument;\r\nimport churchillobjects.rss4j.parser.RssParser;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}\r\n','LoginPre',12,NULL,NULL),(30,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##beanpackage##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport java.util.Iterator;\r\nimport java.util.Vector;\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\n\r\nimport net.enclosing.util.HibernateSession;\r\nimport net.storyteller.desktop.CopyProperties;\r\n\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n\r\n\r\n\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n                Vector vector = new Vector();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		for (Iterator iter = criteria.list().iterator(); iter.hasNext();) {\r\n			##modelclass## ##modelobj## = (##modelclass##) iter.next();\r\n			vector.add(##modelobj##);\r\n		}\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		##modelclass##Form ##modelobj##form = new ##modelclass##Form();\r\n		criteria = session.createCriteria(##modelclass##.class);\r\n\r\n\r\n		if (req.getAttribute(\"form\")== null && req.getParameter(\"id\")!=null){\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n			new CopyProperties(##modelobj##,##modelobj##form);\r\n		} else if(req.getAttribute(\"form\")!=null){\r\n                        ##modelobj##form = (##modelclass##Form)req.getAttribute(\"form\");\r\n			criteria.add(Restrictions.idEq(##modelobj##form.getId()));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n		\r\n\r\n		req.setAttribute(\"model\",##modelobj##);\r\n		req.setAttribute(\"form\",##modelobj##form);\r\n		\r\n		\r\n		req.setAttribute(\"##modelobj##s\",vector);\r\n		\r\n\r\n                if(req.getParameter(\"displayexport\") !=null){\r\n     		    return mapping.findForward(\"displayexport\");\r\n                }\r\n\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','DisplayXmlOf##modelclass##',17,NULL,14),(32,'package ##packagename##;\r\n\r\nimport ##modelpackage##;\r\nimport ##beanpackage##;\r\n\r\nimport java.io.File;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport net.enclosing.util.StringFullfiller;\r\nimport net.enclosing.util.HTTPGetRedirection;\r\nimport net.enclosing.util.HibernateSession;\r\n\r\nimport org.apache.commons.beanutils.BeanUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.Transaction;\r\nimport org.hibernate.criterion.Restrictions;\r\n\r\n\r\n\r\nimport java.util.Random;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n		Session session = new HibernateSession().currentSession(this.getServlet().getServletContext());\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n		Random random = new Random();\r\n		int  i = 		random.nextInt(criteria.list().size());\r\n		req.setAttribute(\"id\",new Integer(i));\r\n		req.setAttribute(\"museigen\",\"true\");\r\n\r\n		sessionFactory.close();\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}\r\n','Museigen##modelclass##',18,NULL,NULL),(33,'package ##packagename##;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport ##modelpackage##;\r\nimport ##beanpackage##;\r\n\r\nimport org.apache.struts.action.Action;\r\nimport org.apache.struts.action.ActionForm;\r\nimport org.apache.struts.action.ActionForward;\r\nimport org.apache.struts.action.ActionMapping;\r\nimport org.hibernate.Criteria;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.criterion.Restrictions;\r\nimport org.springframework.beans.factory.BeanFactory;\r\nimport org.springframework.web.context.support.WebApplicationContextUtils;\r\n\r\nimport net.enclosing.util.HibernateSession;\r\n\r\npublic class ##nameofsentence## extends Action{\r\n	public ActionForward execute(\r\n			ActionMapping mapping,\r\n			ActionForm form,\r\n			HttpServletRequest req,\r\n			HttpServletResponse res) throws Exception{\r\n		\r\n		Session session = new HibernateSession().currentSession(this\r\n				.getServlet().getServletContext());\r\n\r\n\r\n		##modelclass## ##modelobj## = new ##modelclass##Impl();\r\n		Criteria criteria = session.createCriteria(##modelclass##.class);\r\n\r\n		if (req.getParameter(\"id\") != null\r\n				&& !req.getParameter(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(Integer.valueOf(req\r\n					.getParameter(\"id\"))));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n\r\n		} else if (req.getAttribute(\"id\") != null\r\n				&& !req.getAttribute(\"id\").equals(\"\")) {\r\n			criteria.add(Restrictions.idEq(req.getAttribute(\"id\")));\r\n			##modelobj## = (##modelclass##) criteria.uniqueResult();\r\n		}\r\n\r\n		req.setAttribute(\"##modelobj##\",##modelobj##);\r\n		\r\n		\r\n		\r\n		return mapping.findForward(\"success\");\r\n	}\r\n	\r\n	\r\n}','Show##modelclass##Xml',17,NULL,16),(34,'package ##packagename##.api.rest.api;\r\n\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.wordnik.swagger.annotations.Api;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport ##packagename##.model.*;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport ##packagename##.api.rest.dto.##modelclass##Dto;\r\nimport ##packagename##.api.rest.service.##modelclass##Service;\r\n\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/##modelclass##s\")\r\n@Api(value = \"##modelclass## API\")\r\npublic class ##modelclass##Resource {\r\n\r\n    @Autowired\r\n    private ##modelclass##Service ##modelobj##Service;\r\n\r\n    @RequestMapping(method = RequestMethod.GET)\r\n    public List<##modelclass##Dto> getAll##modelclass##s() {\r\n        return ##modelobj##Service.getAll##modelclass##s();\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.GET)\r\n    public ##modelclass##Dto get##modelclass##(@PathVariable final String id) {\r\n        return ##modelobj##Service.get##modelclass##(id);\r\n    }\r\n\r\n    @RequestMapping(method = RequestMethod.POST)\r\n    public ResponseEntity<##modelclass##Dto> add##modelclass##(@RequestBody final ##modelclass##Dto ##modelobj##) {\r\n        ##modelclass##Dto created##modelclass## = ##modelobj##Service.create##modelclass##(##modelobj##);\r\n        return new ResponseEntity<>(created##modelclass##, HttpStatus.CREATED);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.DELETE)\r\n    public ResponseEntity delete##modelclass##(@PathVariable final String id) {\r\n        ##modelobj##Service.delete##modelclass##(id);\r\n        return new ResponseEntity<>(HttpStatus.OK);\r\n    }\r\n\r\n    @RequestMapping(value = \"/{id}\", method = RequestMethod.PATCH)\r\n    public ResponseEntity<##modelclass##Dto> update##modelclass##(@PathVariable final String id, @RequestBody final ##modelclass##Dto ##modelobj##) {\r\n        ##modelclass##Dto created##modelclass## = ##modelobj##Service.update##modelclass##(id, ##modelobj##);\r\n        return new ResponseEntity<>(created##modelclass##, HttpStatus.OK);\r\n    }\r\n}','##modelclass##Resource',20,NULL,NULL),(35,'package ##packagename##.api.rest.converter;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport ##packagename##.api.rest.dto.##modelclass##Dto;\r\nimport ##packagename##.api.rest.entity.##modelclass##Entity;\r\nimport ##packagename##.model.*;\r\n\r\n@Service\r\npublic class ##modelclass##Converter extends AbstractConverter<##modelclass##Entity, ##modelclass##Dto> {\r\n\r\n    @Override\r\n    public void toDto(final ##modelclass##Entity entity, final ##modelclass##Dto dto) {\r\n        // convert ##modelclass##Entity to ##modelclass##Dto\r\n\r\n    }\r\n\r\n    @Override\r\n    public void fromDto(final ##modelclass##Entity entity, final ##modelclass##Dto dto) {\r\n        // convert ##modelclass##Dto to ##modelclass##Entity\r\n     }\r\n}\r\n','##modelclass##Converter',20,NULL,NULL),(36,'package\r\n\r\nimport java.util.Collection;\r\n\r\n##packagename##.api.rest.converter;\r\n\r\nimport java.lang.reflect.ParameterizedType;\r\nimport java.util.ArrayList;\r\nimport java.util.Collection;\r\nimport java.util.List;\r\n\r\npublic abstract class AbstractConverter<EntityClass, DtoClass> {\r\n\r\n    private final Class<EntityClass> entityClass;\r\n    private final Class<DtoClass> dtoClass;\r\n\r\n    @SuppressWarnings(\"unchecked\")\r\n    public AbstractConverter() {\r\n        final ParameterizedType genericSuperclass = (ParameterizedType) getClass().getGenericSuperclass();\r\n        this.entityClass = (Class<EntityClass>) genericSuperclass.getActualTypeArguments()[0];\r\n        this.dtoClass = (Class<DtoClass>) genericSuperclass.getActualTypeArguments()[1];\r\n    }\r\n\r\n    protected DtoClass newDto() {\r\n        try {\r\n            return dtoClass.newInstance();\r\n        } catch (InstantiationException | IllegalAccessException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    protected EntityClass newEntity() {\r\n        try {\r\n            return entityClass.newInstance();\r\n        } catch (InstantiationException | IllegalAccessException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public abstract void toDto(final EntityClass entity, final DtoClass dto);\r\n\r\n    public DtoClass toDto(final EntityClass entity) {\r\n        if (entity == null) {\r\n            return null;\r\n        }\r\n        final DtoClass dto = newDto();\r\n        toDto(entity, dto);\r\n        return dto;\r\n    }\r\n\r\n    public List<DtoClass> toDto(final Collection<? extends EntityClass> entities) {\r\n        final List<DtoClass> dtoCollection = new ArrayList<>();\r\n        entities.forEach(entity -> dtoCollection.add(toDto(entity)));\r\n        return dtoCollection;\r\n    }\r\n\r\n    public abstract void fromDto(final EntityClass entity, final DtoClass dto);\r\n\r\n\r\n    public EntityClass fromDto(final DtoClass dto) {\r\n        final EntityClass entity = newEntity();\r\n        fromDto(entity, dto);\r\n        return entity;\r\n    }\r\n}\r\n','AbstractConverter',20,NULL,NULL),(37,'package ##packagename##.api.rest.dto;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport ##packagename##.model.*;\r\n\r\npublic class ##modelclass##Dto {\r\n\r\n    public ##modelclass##Dto() {}\r\n\r\n    @JsonProperty(\"id\")\r\n    public String id;\r\n}\r\n','##modelclass##Dto',20,NULL,NULL),(38,'package ##packagename##.api.rest.entity;\r\n\r\nimport javax.persistence.GeneratedValue;\r\nimport org.hibernate.annotations.GenericGenerator;\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport ##modelpackage##;\r\n\r\n@Entity\r\n@Table(name = \"##modelclass##s\")\r\npublic class ##modelclass##Entity extends ##modelclass## {\r\n\r\n    public ##modelclass##Entity() {}\r\n\r\n    @Id\r\n    @GeneratedValue(generator = \"uuid\")\r\n    @GenericGenerator(name = \"uuid\", strategy = \"uuid2\")\r\n    @Column(name = \"uuid\", unique = true)\r\n    public String getId() {\r\n        return id;\r\n    }\r\n}\r\n','##modelclass##Entity',20,NULL,NULL),(39,'package ##packagename##.api.rest.repository;\r\n\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport ##packagename##.api.rest.entity.##modelclass##Entity;\r\nimport ##modelpackage##;\r\n\r\n@Repository\r\npublic interface ##modelclass##Repository extends JpaRepository<##modelclass##Entity, String> {\r\n\r\n}','##modelclass##Repository',20,NULL,NULL),(40,'package ##packagename##.api.rest.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport ##packagename##.api.rest.converter.##modelclass##Converter;\r\nimport ##packagename##.api.rest.dto.##modelclass##Dto;\r\nimport ##packagename##.api.rest.entity.##modelclass##Entity;\r\nimport ##packagename##.api.rest.repository.##modelclass##Repository;\r\nimport ##modelpackage##;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class ##modelclass##Service {\r\n\r\n    @Autowired\r\n    private ##modelclass##Repository ##modelobj##Repository;\r\n\r\n    @Autowired\r\n    private ##modelclass##Converter ##modelobj##Converter;\r\n\r\n        public List<##modelclass##Dto> getAll##modelclass##s(){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findAll());\r\n    }\r\n\r\n    public ##modelclass##Dto get##modelclass##(final String id){\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.findOne(id));\r\n    }\r\n\r\n    public ##modelclass##Dto create##modelclass##(##modelclass##Dto ##modelobj##Dto){\r\n        ##modelclass##Entity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public ##modelclass##Dto update##modelclass##(String id, ##modelclass##Dto ##modelobj##Dto){\r\n        ##modelobj##Repository.delete(id);\r\n        ##modelclass##Entity ##modelobj##Entity = ##modelobj##Converter.fromDto(##modelobj##Dto);\r\n        return ##modelobj##Converter.toDto(##modelobj##Repository.save(##modelobj##Entity));\r\n    }\r\n\r\n    public void delete##modelclass##(String id){\r\n        ##modelobj##Repository.delete(id);\r\n    }\r\n}\r\n','##modelclass##Service',20,NULL,NULL),(41,'/* \r\n * File:   ##modelobj##.c\r\n */\r\n\r\n#include \"##modelobj##.h\"\r\n\r\n##modelclass##* model_new_##modelobj##(USTRING ##modelobj##ID)\r\n{\r\n  ##modelclass##* ##modelobj## = (##modelclass##*) malloc(sizeof(##modelclass##));\r\n  ##attributes->##\r\n  ##modelobj##->sensors = NULL;\r\n  ##modelobj##->next = NULL;\r\n  return ##modelobj##;\r\n}\r\n\r\nvoid model_delete_##modelobj##(##modelclass##* ##modelobj##)\r\n{\r\n  free(##modelobj##);\r\n}\r\n\r\nvoid model_add_sensor(##modelclass##* ##modelobj##, Sensor* sensor)\r\n{\r\n  sensor->next = ##modelobj##->sensors;\r\n  ##modelobj##->sensors = sensor;\r\n}\r\n\r\nvoid model_remove_sensor(##modelclass##* ##modelobj##, Sensor* sensor)\r\n{\r\n  Sensor** sensorPtr;\r\n  \r\n  for (sensorPtr = &##modelobj##->sensors; *sensorPtr != NULL; sensorPtr = &((*sensorPtr)->next))\r\n  {\r\n    if (*sensorPtr == sensor)\r\n    {\r\n      *sensorPtr = sensor->next;\r\n      sensor->next = NULL;\r\n      break;\r\n    }  \r\n  }  \r\n}\r\n\r\nSensor* model_lookup_sensor(##modelclass##* ##modelobj##, USTRING sensorID)\r\n{\r\n  Sensor* sensorPtr;\r\n  \r\n  for (sensorPtr = ##modelobj##->sensors; sensorPtr != NULL; sensorPtr = sensorPtr->next)\r\n  {\r\n    if (strcmp(sensorPtr->sensorID, sensorID) == 0)\r\n      return sensorPtr;\r\n  }\r\n  return NULL;  \r\n}  \r\n\r\nint model_sensors_num(##modelclass##* ##modelobj##)\r\n{\r\n  Sensor* sensorPtr;\r\n  int sensorsNum = 0;\r\n  \r\n  for (sensorPtr = ##modelobj##->sensors; sensorPtr != NULL; \r\n       sensorPtr = sensorPtr->next)\r\n  {\r\n    sensorsNum++;\r\n  }  \r\n  return sensorsNum;\r\n}\r\n\r\nSensor* model_sensor_at(##modelclass##* ##modelobj##, int index)\r\n{\r\n  Sensor* sensorPtr;\r\n  int i;\r\n  \r\n  if (index < 0)\r\n    return NULL;\r\n  for (i= 0, sensorPtr = ##modelobj##->sensors; sensorPtr != NULL; \r\n       sensorPtr = sensorPtr->next, i++)\r\n  {\r\n    if (i == index)\r\n      break;\r\n  }  \r\n  return sensorPtr;\r\n}\r\n\r\nvoid model_put_##modelobj##_values(##modelclass##* ##modelobj##, JSONTree* tree)\r\n{\r\n  int i;\r\n  JSONTree* ##modelobj##_tree;\r\n  JSONTree* sensors_tree;\r\n  JSONTree* sensor_tree;\r\n  JSONTree* value;\r\n  USTRING sensorID;\r\n  Sensor* sensor;\r\n  \r\n  ##modelobj##_tree = json_lookup_value(tree, \"##modelobj##\"); // maybe ##modelobj##->##modelobj##ID ?\r\n  if (##modelobj##_tree == NULL)\r\n    return;\r\n  \r\n  ##attributeslookup##\r\n  \r\n  sensors_tree = json_lookup_value(##modelobj##_tree, \"sensors_attributes\");\r\n  if (sensors_tree == NULL)\r\n    return;\r\n  if (!json_is_array(sensors_tree))\r\n    return;\r\n  for (i = 0; i < json_get_array_size(sensors_tree); i++)\r\n  {\r\n    sensor_tree = json_get_array_element(sensors_tree, i);\r\n    value = json_lookup_value(sensor_tree, \"id\");\r\n    if (!json_is_string(value))\r\n      continue;\r\n    sensorID = json_get_string(value);\r\n    sensor = model_lookup_sensor(##modelobj##, sensorID);\r\n    if (sensor == NULL)\r\n      continue;\r\n    model_put_sensor_values(sensor, sensor_tree);\r\n  }  \r\n}\r\n\r\nJSONTree* model_get_##modelobj##_values(##modelclass##* ##modelobj##)\r\n{\r\n  int i;\r\n  ##attributesjsonnew## \r\n  JSONTree* ##modelobj##_tree = json_new_object();\r\n  JSONTree* sensors = json_new_array();\r\n  \r\n  // Add the sensors array subtree\r\n  for (i = 0; i < model_sensors_num(##modelobj##); i++)\r\n  {\r\n    Sensor* sensor = model_sensor_at(##modelobj##, i);\r\n    JSONTree* sensor_tree = model_get_sensor_values(sensor);\r\n    json_add_array_element(sensors, sensor_tree);\r\n  }  \r\n  \r\n##attributesjsonadd##\r\n  json_add_value(##modelobj##_tree, \"sensors_attributes\", sensors);\r\n  return ##modelobj##_tree;\r\n}\r\n\r\n#ifdef MODEL_DEBUG\r\n\r\nvoid model_print_##modelobj##(##modelclass##* ##modelobj##, FILE* f, int indent)\r\n{\r\n  Sensor* sensPtr;\r\n  char margin[16];\r\n  int i;\r\n  \r\n  for (i = 0; i < indent; i++)\r\n    margin[i] = \' \';\r\n  margin[i] = 0;\r\n  \r\n  fprintf(f, \"%s##modelclass##:\\n\", margin);\r\n  fprintf(f, \"%s{\\n\", margin);\r\n  ##attributesfprintf##\r\n  fprintf(f, \"\\n%s  Sensors:\\n\", margin);\r\n  fprintf(f, \"%s  {\\n\", margin);\r\n  for (i = 0; i <  model_sensors_num(##modelobj##); i++)\r\n  {\r\n    sensPtr = model_sensor_at(##modelobj##, i);\r\n    model_print_sensor(sensPtr, f, indent + 4);\r\n  }\r\n  fprintf(f, \"%s  }\\n\", margin);\r\n  \r\n  fprintf(f, \"%s}\\n\", margin);\r\n}\r\n\r\n#endif /* MODEL_DEBUG */','##modelobj##.c',25,NULL,NULL),(42,'/* \r\n * File:   ##modelobj##.h\r\n */\r\n\r\n#ifndef _##modelclassUp##_H\r\n#define	_##modelclassUp##_H\r\n\r\n#ifdef	__cplusplus\r\nextern \"C\" {\r\n#endif\r\n\r\n#include \"jsondefs.h\"\r\n#include \"sensor.h\"  \r\n\r\ntypedef struct ##modelclass##\r\n{\r\n   ##attributes##    \r\n   Sensor* sensors; // pointer to list of sensors\r\n  struct ##modelclass##* next;  // pointer to next ##modelclass## in ##modelobj## list\r\n} ##modelclass##;  \r\n\r\n/* Create and init a new ##modelclass##structure with ##modelobj##ID identifier */\r\n##modelclass##* model_new_##modelobj##(USTRING ##modelobj##ID);\r\n\r\n/* Delete ##modelobj## and free allocated for ##modelobj## memory  */\r\nvoid model_delete_##modelobj##(##modelclass##* ##modelobj##);\r\n\r\n/* Add new sensor to ##modelobj## list of sensors */\r\nvoid model_add_sensor(##modelclass##* ##modelobj##, Sensor* sensor);\r\n\r\n/* \r\n * Remove Sensor from ##modelobj## list of sensors.\r\n * Sensor structure only removed from ##modelobj##, but not deleted.\r\n */\r\nvoid model_remove_sensor(##modelclass##* ##modelobj##, Sensor* sensor);\r\n\r\n/*\r\n * Lookup sensor in ##modelobj## with given sensorID \r\n * \r\n * Returns: a pointer to Sensor or NULL if sensor not found\r\n */\r\nSensor* model_lookup_sensor(##modelclass##* ##modelobj##, USTRING sensorID);\r\n\r\n/*\r\n * Get a number of Sensors in ##modelobj## list\r\n */\r\nint model_sensors_num(##modelclass##* ##modelobj##);\r\n\r\n/*\r\n * Get a sensor from ##modelclass## list of sensors\r\n * index - sensor index\r\n * \r\n * Returns Sensor data of NULL for invalid index\r\n */\r\nSensor* model_sensor_at(##modelclass##* ##modelobj##, int index);\r\n\r\n/*\r\n * Put values from JSON parsed tree to ##modelclass## and it\'s substructures\r\n *   ( sensors etc.)\r\n */\r\nvoid model_put_##modelobj##_values(##modelclass##* ##modelobj##, JSONTree* tree);\r\n\r\n/*\r\n * Get ##modelclass## object property values as JSON object tree\r\n * ##modelclass## properies includes also properies of all \r\n *   ##modelclass## sub-objects, like Sensors\r\n */\r\nJSONTree* model_get_##modelobj##_values(##modelclass##* ##modelobj##);\r\n\r\n#ifdef MODEL_DEBUG\r\n\r\n/*\r\n * Debbuging function to pretty print a ##modelobj## contents into a file f\r\n * indent - number of left indent spaces in printing\r\n */\r\nvoid model_print_##modelobj##(##modelclass##* ##modelobj##, FILE* f, int indent);\r\n\r\n#endif /* ##modelclassUp##_MODEL_DEBUG */\r\n\r\n#ifdef	 __cplusplus\r\n}\r\n#endif\r\n\r\n#endif	/* _##modelclassUp##_H */','##modelobj##.h',25,NULL,NULL),(81,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'##nameofj2eestory##\')\r\n    .controller(\'##modelclass##EditController\', ##modelclass##EditController);\r\n\r\n  /** @ngInject */\r\n  function ##modelclass##EditController(toastr, ##modelobj##, ##modelclass##Service, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.##modelobj## = ##modelobj##;\r\n    ##angular.attribute.array##\r\n    vm.delete = delete##modelclass##;\r\n\r\n    function delete##modelclass##(){\r\n      ##modelobj##Service.delete(vm.##modelobj##.id).then(function(result){\r\n        toastr.success(\"Removed\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','##modelobj##.edit.controller.js',26,NULL,NULL),(80,'<div class=\"edit-##modelobj##\">\r\n<div class=\"img-box\">\r\n  <img ng-src=\"{{##modelobj##.image}}\" />\r\n</div>\r\n<md-divider></md-divider>\r\n<md-list>\r\n	  ##angular.form.edit.properties##\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"delete-##modelobj##-btn\" ng-click=\"delete()\">Delete ##modelobj##</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','##modelobj##.edit.html',26,NULL,NULL),(78,'.edit-##modelobj## {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','##modelobj##.edit.scss',26,NULL,NULL),(79,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'##nameofj2eestory##\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.##modelobj##s.edit\', {\r\n        url: \'/edit/:id\',\r\n        templateUrl: \'app/##modelobj##s.edit/##modelobj##s.edit.html\',\r\n        controller: \'##modelclass##EditController\',\r\n        controllerAs: \'##modelobj##EditInfo\',\r\n        resolve: {\r\n          ##modelobj##: function(##modelclass##Service, $stateParams){ \r\n            return ##modelclass##Service.getById($stateParams.id);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','##modelobj##.edit.route.js',26,NULL,NULL),(76,'<div class=\"add-##modelobj##\">\r\n\r\n<md-divider></md-divider>\r\n<md-list>\r\n	##angular.form.add.properties##\r\n      <md-list-item class=\"md-1-line actions\">\r\n      <div>\r\n        <button class=\"create-##modelobj##-btn\" ng-click=\"##modelobj##AddInfo.create()\">Save ##modelobj##</button>\r\n      </div>\r\n        <md-divider></md-divider>\r\n      </md-list-item>\r\n</md-list>\r\n</div>','##modelobj##.add.html',26,NULL,NULL),(77,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'##nameofj2eestory##\')\r\n    .controller(\'##modelclass##AddController\', ##modelclass##EditController);\r\n\r\n  /** @ngInject */\r\n  function ##modelclass##AddController(toastr, ##modelclass##Service, $scope) {\r\n    var vm = this;\r\n    $scope.$parent.base.backButton = true;\r\n    $scope.$parent.base.closeButton = true;\r\n\r\n    vm.##modelobj## = {};\r\n	##angular.attribute.array##\r\n    vm.create = create##modelclass##;\r\n\r\n    function create##modelclass##(){\r\n      ##modelobj##Service.create(vm.##modelobj##).then(function(result){\r\n        toastr.success(\"Saved\");\r\n      }, function(response){\r\n        toastr.error(response.message);\r\n      })\r\n    }\r\n  }\r\n})();\r\n','##modelobj##.add.controller.js',26,NULL,NULL),(72,' <md-list class=\"##modelobj##s\">\r\n    <md-list-item class=\"item col-md-12 col-sm-12 col-xs-12\" ng-repeat=\"##modelobj## in ##modelobj##sList.##modelobj##s\" >\r\n    <a ui-sref=\"app.##modelobj##s.edit({id:##modelobj##.id})\">\r\n\r\n                <div class=\"##modelobj##-name col-md-6 col-sm-6 col-xs-6\">{{##modelobj##.email}}\r\n                </div>\r\n                <div class=\"##modelobj##-group col-md-6 col-sm-6 col-xs-6\">{{##modelobj##.##nounobj##Name}}\r\n                </div>\r\n       </a>         \r\n    </md-list-item>\r\n</md-list>\r\n<a ui-sref=\"app.##modelobj##s.add\">Create ##modelobj##</a>','##modelobj##.html',26,NULL,NULL),(84,'class V1::##modelclass##sController < V1::BaseController\r\n  before_action :authenticate_agent!, only: [:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :find_##modelobj##!, only:[:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n  before_action :authenticate_user!, only: [:index]\r\n\r\n  def index\r\n    if current_user.role.name == \"operator\"\r\n      ##modelobj##s = ##modelclass##.all\r\n    elsif (current_user.role.name == \"owner\") || (current_user.role.name == \"user\")\r\n      ##modelobj##s = current_user.account.##modelobj##s\r\n    else\r\n      render json: {error: \'authentication failed\'} , status: 401 and return\r\n    end\r\n    render json: {##modelobj##s: ##modelobj##s}\r\n  end\r\n\r\n  def create\r\n    ##modelobj## = ##modelclass##.new(##modelobj##_params)\r\n    if ##modelobj##.save\r\n      render json: ##modelobj## , status: :created\r\n    else\r\n      render json: {error: ##modelobj##.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def show\r\n    if (user_signed_in?)\r\n      if ([\'owner\', \'user\'].include? current_user.role.name)\r\n        if current_user.account.##modelobj##s.exclude?(@##modelobj##)\r\n          render json: {error: \'User can access his own ##modelobj##\'}, status: 403 and return\r\n        end\r\n      end\r\n\r\n      render json: {##modelobj##: @##modelobj##}\r\n    else\r\n      short_resp = @##modelobj##.as_json(##modelobj##_only_fields)\r\n      render json: {##modelobj##: short_resp}\r\n    end\r\n  end\r\n\r\n  def update\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.##modelobj##s.exclude?(@##modelobj##)\r\n        render json: {error: \'User can access his own ##modelobj##\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @##modelobj##.update(##modelobj##_params)\r\n      render json: {##modelobj##: @##modelobj##}\r\n    else\r\n      render json: {error: @##modelobj##.errors.messages} , status: :forbidden\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if (user_signed_in?) && ([\'owner\', \'user\'].include? current_user.role.name)\r\n      if current_user.account.##modelobj##s.exclude?(@##modelobj##)\r\n        render json: {error: \'User can access his own ##modelobj##\'}, status: 403 and return\r\n      end\r\n    end\r\n\r\n    if @##modelobj##.destroy\r\n      render json: {##modelobj##: @##modelobj##}, status: :ok\r\n    else\r\n      render json: {error: @##modelobj##.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def modified_fields\r\n    resp = {}\r\n\r\n    trail = @##modelobj##.##modelobj##_trail\r\n    resp = trail.diff_##modelobj##\r\n\r\n    render json: {##modelobj##: resp}\r\n  end\r\n\r\n  def confirm_modify\r\n    trail = @##modelobj##.##modelobj##_trail\r\n    render json: {error: \'No Command\'}, status: 404 and return if trail.nil?\r\n\r\n    # marked ##modelobj##\'s fields\r\n    trail.mark_completed params[:##modelobj##]\r\n\r\n    render json: {confirmed: \'OK\'}\r\n  end\r\n\r\n  private\r\n\r\n    def ##modelobj##_params\r\n      params.require(:##modelobj##).permit(##rail.controller.params##)          \r\n    end\r\n\r\n    def ##modelobj##_only_fields\r\n      {only: [##rail.controller.shortresp.fields##]}\r\n    end\r\nend','##modelobj##.controller.rb',29,NULL,NULL),(82,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'##nameofj2eestory##\')\r\n    .controller(\'##modelclass##sController\', ##modelclass##sController);\r\n\r\n  ##angular.class.controller.list.attribute##\r\n})();','##modelobj##s.controller.js',26,NULL,NULL),(83,'### create ##modelobj##\r\n\r\n      POST /##modelobj##s\r\n\r\n* request parameter:\r\n\r\n##api_params##\r\n\r\n  example:\r\n\r\n      POST BASEURL/##modelobj##s\r\n      ##postpsampleparams##\r\n','Post',27,NULL,NULL),(74,'.add-##modelobj## {\r\n	.md-list-item-text{\r\n		min-width: 120px;\r\n	}\r\n\r\n	.actions{\r\n	 	\r\n	 	>div {\r\n	 	 max-width:400px;\r\n	 	}\r\n\r\n	 	button{\r\n	 		margin:0 auto;\r\n	 	}\r\n	}\r\n}','##modelobj##.add.scss',26,NULL,NULL),(75,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'##nameofj2eestory##\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.##modelobj##s.add\', {\r\n        url: \'/new\',\r\n        templateUrl: \'app/##modelobj##s.add/##modelobj##s.add.html\',\r\n        controller: \'##modelclass##AddController\',\r\n        controllerAs: \'##modelobj##AddInfo\'\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','##modelobj##.add.route.js',26,NULL,NULL),(70,'.##modelobj##s{\r\n	.item:hover{\r\n		background-color: white;\r\n		opacity:0.5;\r\n	}\r\n\r\n	.item {\r\n	 a{\r\n	 	width:100%;\r\n	 }\r\n	}\r\n}','##modelobj##.scss',26,NULL,NULL),(71,'(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'##nameofj2eestory##\')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider) {\r\n     $stateProvider\r\n      .state(\'app.##modelobj##s\', {\r\n        url: \'/##modelobj##s\',\r\n        abstract: true,\r\n        template: \'<ui-view />\'\r\n      })\r\n  \r\n      .state(\'app.##modelobj##s.list\', {\r\n        url: \'\',\r\n        templateUrl: \'app/##modelobj##s/##modelobj##s.html\',\r\n        controller: \'##modelclass##sController\',\r\n        controllerAs: \'##modelobj##sList\',\r\n		##angular.attribute.resolve##\r\n      });\r\n\r\n  }\r\n\r\n})();\r\n','##modelobj##.route.js',26,NULL,NULL),(69,'(function() {\r\n    \'use strict\';\r\n\r\n    angular\r\n        .module(\'##nameofj2eestory##\')\r\n        .service(\'##modelclass##Service\', ##modelclass##Service);\r\n\r\n    ##modelclass##Service.$inject = [\'Restangular\', \'$q\'];\r\n    function ##modelclass##Service(Restangular, $q) {\r\n        var ##modelobj##Service = {\r\n                update: update,\r\n                get: get,\r\n                getById: getById,\r\n                delete: remove,\r\n                create: create\r\n            }\r\n        \r\n        \r\n\r\n        var ##modelobj##Repository = Restangular.one(\'##modelobj##\');\r\n\r\n        function get() {             \r\n            return ##modelobj##Repository.one(\'accounts\').get();\r\n        }\r\n\r\n        function update(id, updObject) {\r\n\r\n           return ##modelobj##Repository.one(\'accounts\', id).customPUT(updObject, null, undefined, {\'Content-Type\': \'application/json\'})    \r\n        }\r\n\r\n        function getById(id) {\r\n           \r\n           return ##modelobj##Repository.one(\'accounts\', id).get();\r\n        }\r\n\r\n        function create(data){\r\n            return ##modelobj##Repository.one(\'accounts\').customPOST(data, null, undefined, {\'Content-Type\': \'application/json\'});  \r\n        }\r\n\r\n        function remove(##modelobj##Id){\r\n          \r\n\r\n            return ##modelobj##Repository.one(\'accounts\', id).remove();\r\n\r\n       \r\n        }\r\n\r\n        return ##modelobj##Service;\r\n    }\r\n})();\r\n','##modelobj##.service.js',26,NULL,NULL),(85,'class V1::##modelclass##sController < V1::BaseController\r\n  before_action :find_##modelobj##!, only:[:show, :update, :destroy, :confirm_modify, :modified_fields]\r\n\r\n  def index\r\n    ##modelobj##s = ##modelclass##.all\r\n    render json: {##modelobj##s: ##modelobj##s}\r\n  end\r\n\r\n  def create\r\n    ##modelobj## = ##modelclass##.new(##modelobj##_params)\r\n    if ##modelobj##.save\r\n      render json: ##modelobj## , status: :created\r\n    else\r\n      render json: {error: ##modelobj##.errors.messages}, status: 422\r\n    end\r\n  end\r\n\r\n  def show\r\n      render json: {##modelobj##: @##modelobj##}\r\n  end\r\n\r\n  def update\r\n    if @##modelobj##.update(##modelobj##_params)\r\n      render json: {##modelobj##: @##modelobj##}\r\n    end\r\n  end\r\n\r\n  def destroy\r\n    if @##modelobj##.destroy\r\n      render json: {##modelobj##: @##modelobj##}, status: :ok\r\n    end\r\n  end\r\n\r\n  def modified_fields\r\n    resp = {}\r\n\r\n    trail = @##modelobj##.##modelobj##_trail\r\n    resp = trail.diff_##modelobj##\r\n    render json: {##modelobj##: resp}\r\n  end\r\n\r\n  def confirm_modify\r\n    trail = @##modelobj##.##modelobj##_trail\r\n    render json: {error: \'No Command\'}, status: 404 and return if trail.nil?\r\n\r\n    # marked ##modelobj##\'s fields\r\n    trail.mark_completed params[:##modelobj##]\r\n\r\n    render json: {confirmed: \'OK\'}\r\n  end\r\n\r\n  private\r\n\r\n    def ##modelobj##_params\r\n      params.require(:##modelobj##).permit(##rail.controller.params##)          \r\n    end\r\n\r\nend','##modelobj##.basiccontroller.rb',29,NULL,NULL);
/*!40000 ALTER TABLE `struts_action_template` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `template_input`
--

DROP TABLE IF EXISTS `template_input`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `template_input` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `VERB_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `TEMPLATE_INPUT_VERB_FKC` (`VERB_FK`)
) ENGINE=MyISAM AUTO_INCREMENT=209 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `template_input`
--

LOCK TABLES `template_input` WRITE;
/*!40000 ALTER TABLE `template_input` DISABLE KEYS */;
INSERT INTO `template_input` VALUES (1,'packagename',1),(2,'modelclass',2),(3,'modelobj',2),(4,'modelpackage',2),(5,'crudpackage',2),(6,'modelcrudpackage',2),(7,'formcontent',2),(8,'packagename',2),(9,'modelclass',3),(10,'modelobj',3),(11,'modelpackage',3),(12,'crudpackage',3),(13,'modelcrudpackage',3),(14,'formcontent',3),(15,'packagename',3),(16,'packagename',4),(17,'modelclass',4),(18,'modelobj',4),(19,'modelcrudpackage',4),(20,'modelpackage',4),(21,'modelclass',6),(22,'modelobj',6),(23,'modelpackage',6),(24,'crudpackage',6),(25,'modelcrudpackage',6),(26,'formcontent',6),(27,'packagename',6),(28,'displaycontent',6),(29,'modelclass',7),(30,'modelobj',7),(31,'modelpackage',7),(32,'crudpackage',7),(33,'modelcrudpackage',7),(34,'formcontent',7),(35,'packagename',7),(36,'displaycontent',7),(37,'addingtoclass',7),(38,'addingtoobj',7),(39,'relationvpsecoundcode',6),(40,'relationvpcode',6),(41,'modelclass',8),(42,'modelobj',8),(43,'modelpackage',8),(44,'crudpackage',8),(45,'modelcrudpackage',8),(46,'formcontent',8),(47,'packagename',8),(48,'displaycontent',8),(49,'relationvpsecoundcode',8),(50,'relationvpcode',8),(51,'relationvpcode',9),(52,'relationvpsecoundcode',9),(53,'displaycontent',9),(54,'packagename',9),(55,'formcontent',9),(56,'modelcrudpackage',9),(57,'crudpackage',9),(58,'modelpackage',9),(59,'modelobj',9),(60,'modelclass',9),(61,'relationvpcode',10),(62,'relationvpsecoundcode',10),(63,'displaycontent',10),(64,'packagename',10),(65,'formcontent',10),(66,'modelcrudpackage',10),(67,'crudpackage',10),(68,'modelpackage',10),(69,'modelobj',10),(70,'modelclass',10),(71,'modelclass',11),(72,'modelobj',11),(73,'modelpackage',11),(74,'crudpackage',11),(75,'modelcrudpackage',11),(76,'formcontent',11),(77,'packagename',11),(78,'displaycontent',11),(79,'relationvpsecoundcode',11),(80,'relationvpcode',11),(81,'addingtoclass',11),(82,'addingtoobj',11),(83,'beanpackage',11),(84,'copyattrsatvp',8),(85,'validation',8),(86,'beanpackage',8),(87,'displayexportcontent',9),(88,'modelobj',14),(89,'modelclass',14),(90,'nameofsentence',14),(91,'modelcrudpackage',14),(92,'modelpackage',14),(93,'packagename',14),(94,'modelclass',12),(95,'modelobj',12),(96,'modelpackage',12),(97,'crudpackage',12),(98,'modelcrudpackage',12),(99,'formcontent',12),(100,'packagename',12),(101,'displaycontent',12),(102,'relationvpsecoundcode',12),(103,'relationvpcode',12),(104,'modelclass',17),(105,'modelobj',17),(106,'modelpackage',17),(107,'crudpackage',17),(108,'formcontent',17),(109,'packagename',17),(110,'displaycontent',17),(111,'relationvpsecoundcode',17),(112,'relationvpcode',17),(113,'formcontent',17),(114,'displayxmlcontent',17),(115,'relationvpcode',18),(116,'relationvpsecoundcode',18),(117,'displaycontent',18),(118,'packagename',18),(119,'formcontent',18),(120,'modelcrudpackage',18),(121,'crudpackage',18),(122,'modelpackage',18),(123,'modelobj',18),(124,'modelclass',18),(125,'displayxmlcontent',17),(126,'modelcrudpackage',17),(127,'beanpackage',17),(128,'##japanese##',8),(129,'##japanese##',9),(130,'showattrs',10),(131,'packagename',20),(132,'modelpackage',20),(135,'modelclass',20),(147,'modelobj',20),(148,'modelclass',25),(149,'modelobj',25),(181,'modelobj',28),(171,'angular.attribute.resolve',26),(152,'attributes->',25),(170,'angular.attribute.array',26),(166,'modelobj',26),(167,'modelclass',26),(163,'angular.form.edit.properties',26),(164,'angular.form.add.properties',26),(157,'attributeslookup',25),(158,'attributesjsonnew',25),(159,'attributesjsonadd',25),(160,'attributesfprintf',25),(161,'modelclassUp',25),(162,'attributes',25),(173,'nameofj2eestory',26),(174,'angular.class.controller.list.attribute',26),(176,'modelobj',27),(177,'api_params',27),(178,'postpsampleparams',27),(180,'modelclass',28),(182,'modelobj',29),(183,'modelclass',29),(184,'rail.controller.params',29),(185,'rail.controller.shortresp.fields',29),(187,'modelobj',30),(188,'modelclass',30),(190,'modelobj',31),(191,'modelclass',31),(197,'sentencename',32),(196,'modelobj',32),(194,' modelclass',32),(195,'listattrib',32),(198,'test',29),(199,'modelobjs = modelclass',29),(200,'modelobjs = current_user.account.modelobj',29),(201,'modelobjs: modelobj',29),(202,'modelobj = modelclass.new(modelobj',29),(203,'modelobjs.exclude?(@modelobj',29),(204,'modelobj: @modelobj',29),(205,'modelobj.as_json(modelobj',29),(206,'modelobj.update(modelobj',29),(207,'modelobj.modelobj',29),(208,'modelobj).permit(rail.controller.params',29);
/*!40000 ALTER TABLE `template_input` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `test`
--

DROP TABLE IF EXISTS `test`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `test` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `STEPSTOREPEAT` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `WHATYOUEXPECTEDTOSEE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `WHATYOUSAWINSTEAD` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `DEBUGED` tinyint(4) NOT NULL,
  `CHECKED` tinyint(4) NOT NULL,
  `J2EE_STORY_FK` int(11) NOT NULL,
  `JSP_FK` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `TEST_J2EE_STORY_FKC` (`J2EE_STORY_FK`),
  KEY `TEST_JSP_FKC` (`JSP_FK`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `test`
--

LOCK TABLES `test` WRITE;
/*!40000 ALTER TABLE `test` DISABLE KEYS */;
/*!40000 ALTER TABLE `test` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `validation_rule`
--

DROP TABLE IF EXISTS `validation_rule`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `validation_rule` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DEFAULTERRORMESSAGE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `template` varchar(10000) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `validation_rule`
--

LOCK TABLES `validation_rule` WRITE;
/*!40000 ALTER TABLE `validation_rule` DISABLE KEYS */;
INSERT INTO `validation_rule` VALUES (1,'','notnull','if(StringUtils.isBlank(##noun##form.get##Attr##())){\r\n   error += \"##japanese##は空にはできません。<br />\"; \r\n}\r\n'),(2,'','int','if(!StringUtils.isNumeric(req.getParameter(\"##attr##\"))){\r\n    error += \"##japanese##には数値のみを入れてください。<br />\";\r\n}'),(3,'','date','if(!##noun##form.is##attr##IsValid()){\r\n   error += \"##japanese## はyyyy/MM/ddにしてください。<br />\";\r\n}'),(4,'','notnullbyreq','if(StringUtils.isBlank(req.getParameter(\"##attr##\"))){\r\n    error += \"##japanese##は空にはできません。<br />\";\r\n}'),(5,'','alphanumeric','        if(!##noun##form.get##Attr##().matches(\"\\\\\\p{Alnum}*\")){\r\n   error += \"##japanese##は半角英数字のみです。\";\r\n}'),(6,'','a-zA-Z0-9&/-','        if(!productform.getTypename().matches(\"[a-zA-Z0-9&/-]*\")){\r\n      	   error += \"##japanese##は半角英数字及び記号(/&-)のみです。\";\r\n        }\r\n');
/*!40000 ALTER TABLE `validation_rule` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `validation_rule_choise`
--

DROP TABLE IF EXISTS `validation_rule_choise`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `validation_rule_choise` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `ACTUALCODE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ERRORMESSAGE` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `VALIDATION_RULE_FK` int(11) NOT NULL,
  `ATTR_USE_FK` int(11) NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `VALIDATION_RULE_CHOISE_VALIDAC` (`VALIDATION_RULE_FK`),
  KEY `VALIDATION_RULE_CHOISE_ATTR_UC` (`ATTR_USE_FK`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `validation_rule_choise`
--

LOCK TABLES `validation_rule_choise` WRITE;
/*!40000 ALTER TABLE `validation_rule_choise` DISABLE KEYS */;
/*!40000 ALTER TABLE `validation_rule_choise` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `verb`
--

DROP TABLE IF EXISTS `verb`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `verb` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `TWOOBJECTS` tinyint(4) NOT NULL,
  `VALID` tinyint(4) NOT NULL,
  `NAME` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `JAPANESE` varchar(255) NOT NULL,
  `MARKET_AVERAGE_PRICE` int(11) NOT NULL,
  `MARKET_AVERAGE_DAYS` int(11) NOT NULL,
  `PROFILT` int(11) NOT NULL,
  `COST` int(11) NOT NULL,
  `PRICE` int(11) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `verb`
--

LOCK TABLES `verb` WRITE;
/*!40000 ALTER TABLE `verb` DISABLE KEYS */;
INSERT INTO `verb` VALUES (1,0,0,'RSSBlock','',0,0,0,0,0),(2,0,1,'CRUD','',0,0,0,0,0),(3,0,0,'RSSExport','',0,0,0,0,0),(4,0,0,'RssImport','',0,0,0,0,0),(5,0,0,'GrepRss','',0,0,0,0,0),(6,0,1,'ALL','',0,0,0,0,0),(7,1,0,'MultipleFileFormUpload','',0,0,0,0,0),(8,0,0,'Post','',0,0,0,0,0),(9,0,0,'Display','',0,0,0,0,0),(10,0,0,'Show','',0,0,0,0,0),(11,1,1,'SimpleFilePost','',0,0,0,0,0),(12,0,0,'Login','',0,0,0,0,0),(13,0,0,'NotifyByMailTo','',0,0,0,0,0),(14,0,0,'Delete','',0,0,0,0,0),(15,1,1,'Update','',0,0,0,0,0),(16,0,0,'DisplayOf','',0,0,0,0,0),(17,0,1,'DisplayXmlOf','',0,0,0,0,0),(18,0,1,'MuseigenShow','',0,0,0,0,0),(19,0,0,'test','test',0,0,0,0,0),(20,0,0,'RESTFul','RESTFul',0,0,0,0,0),(21,1,0,'PushNotify','ããã·ã¥éç¥',0,0,0,0,60000),(22,0,1,'Index','ä¸è¦§ãã',0,0,0,0,0),(23,0,0,'Get','',0,0,0,0,0),(24,0,0,'Put','',0,0,0,0,0),(25,0,1,'CModel','',0,0,0,0,0),(26,0,0,'AngularModel','',0,0,0,0,0),(27,0,0,'APISpec','',0,0,0,0,0),(28,0,0,'APIBlueprint','',0,0,0,0,0),(29,0,0,'RailsController','',0,0,0,0,25),(30,0,0,'ApIBluePrintGET','',0,0,0,0,0),(31,0,0,'ApIBluePrintPOST','',0,0,0,0,0),(32,0,0,'ApIBluePrintResource','',0,0,0,0,0);
/*!40000 ALTER TABLE `verb` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-04-20 12:40:13
